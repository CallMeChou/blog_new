<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>运营管理</title>
      <link href="/blog_new/2022/09/04/%E8%BF%90%E8%90%A5%E7%AE%A1%E7%90%86/"/>
      <url>/blog_new/2022/09/04/%E8%BF%90%E8%90%A5%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>「运营管理」，点击链接保存，或者复制本段内容，打开「阿里云盘」APP ，无需下载极速在线查看，视频原画倍速播放。 链接：<a href="https://www.aliyundrive.com/s/UaUwGkFSkYg">https://www.aliyundrive.com/s/UaUwGkFSkYg</a></p><p><strong>ppt+练习题+课堂展示</strong>：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211213211918488.png" alt="image-20211213211918488"></p><p>下面是复习时候做的乱七八糟的计算题笔记（可以忽略）</p><h1 id="第四章计算"><a href="#第四章计算" class="headerlink" title="第四章计算"></a>第四章计算</h1><h2 id="1-代表产品"><a href="#1-代表产品" class="headerlink" title="1.代表产品"></a>1.代表产品</h2><h2 id="2-泊松分布（排队论补充）"><a href="#2-泊松分布（排队论补充）" class="headerlink" title="2.泊松分布（排队论补充）"></a>2.泊松分布（排队论补充）</h2><p>泊松分布满足三个条件：</p><p>平衡性：即在长度为 t 的时段内，恰好到达 k 个顾客的概率仅与时段长度有关，而与时段起点无关。</p><p>无后效性：即在任意几个不相交的时间区间内，各自到达的顾客数是相互独立的；即以前到达的顾客对以后顾客到来没有影响。</p><p>单个性：即在充分小的时段内最多到达一个顾客。</p><h2 id="3-排队论（略）"><a href="#3-排队论（略）" class="headerlink" title="3.排队论（略）"></a>3.排队论（略）</h2><h1 id="第五章-选址规划计算题"><a href="#第五章-选址规划计算题" class="headerlink" title="第五章 选址规划计算题"></a>第五章 选址规划计算题</h1><h2 id="1-因素评分法"><a href="#1-因素评分法" class="headerlink" title="1.因素评分法"></a>1.因素评分法</h2><h2 id="2-重心法"><a href="#2-重心法" class="headerlink" title="2.重心法"></a>2.重心法</h2><h2 id="3-运输模型"><a href="#3-运输模型" class="headerlink" title="3.运输模型"></a>3.运输模型</h2><blockquote><p>运筹学</p></blockquote><h1 id="第六章-设施布置"><a href="#第六章-设施布置" class="headerlink" title="第六章 设施布置"></a>第六章 设施布置</h1><h2 id="节拍"><a href="#节拍" class="headerlink" title="节拍"></a>节拍</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211181657270.png" alt="image-20211211181657270"></p><h2 id="最少工作地数"><a href="#最少工作地数" class="headerlink" title="最少工作地数"></a>最少工作地数</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211181741385.png" alt="image-20211211181741385"></p><h2 id="工序所需要设备数"><a href="#工序所需要设备数" class="headerlink" title="工序所需要设备数"></a>工序所需要设备数</h2><p>SA&#x3D;单间时间&#x2F;节拍</p><h2 id="设备负荷系数？？？"><a href="#设备负荷系数？？？" class="headerlink" title="设备负荷系数？？？"></a>设备负荷系数？？？</h2><h2 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211182255715.png" alt="image-20211211182255715"></p><h2 id="从至表"><a href="#从至表" class="headerlink" title="从至表"></a>从至表</h2><h1 id="第七章-工作系统研究"><a href="#第七章-工作系统研究" class="headerlink" title="第七章 工作系统研究"></a>第七章 工作系统研究</h1><h2 id="1-学习曲线"><a href="#1-学习曲线" class="headerlink" title="1.学习曲线"></a>1.学习曲线</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211204023752.png" alt="image-20211211204023752"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211204825854.png" alt="image-20211211204825854"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211204619243.png" alt="image-20211211204619243"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211204628987.png" alt="image-20211211204628987"></p><h1 id="🚩-第九章-库存管理"><a href="#🚩-第九章-库存管理" class="headerlink" title="🚩  第九章 库存管理"></a>🚩  第九章 库存管理</h1><h2 id="1-定期盘存系统"><a href="#1-定期盘存系统" class="headerlink" title="1.定期盘存系统"></a>1.定期盘存系统</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211211707480.png" alt="image-20211211211707480"></p><h2 id="2-经济批量模型"><a href="#2-经济批量模型" class="headerlink" title="2.经济批量模型"></a>2.经济批量模型</h2><p>订货：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211211211843866.png" alt="image-20211211211843866"></p><blockquote><p>D总需求 </p><p>H单位持有费用</p><p>S每次订货费用</p><p>m全年制度工作日</p><p>LT提前期</p><p>最高库存&#x3D;Q*+ROP</p></blockquote><p>生产：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212150324462.png" alt="image-20211211212318450"></p><blockquote><p>p生产速率 </p><p>u 使用速率&#x3D;D&#x2F;m</p></blockquote><h2 id="3-数量折扣模型"><a href="#3-数量折扣模型" class="headerlink" title="3.数量折扣模型"></a>3.数量折扣模型</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212151156056.png" alt="image-20211212151156056"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212151445774.png" alt="image-20211212151445774"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212151453076.png" alt="image-20211212151453076"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212151503643.png" alt="image-20211212151503643"></p><p> 某公司每年要购入1200台X产品。供应商的条件是：订货量大于等于75台时，单价32.5元；订货量小于75台时，单价35元。每次订货费用为8元；单位产品年库存保管费用为单价的12%。试求最优订货量。</p><p>解：</p><p>   第1步：C&#x3D;32.5时，H&#x3D;32.5×12%＝3.9，S&#x3D;8，D&#x3D;120</p><p>   <img src="http://rb1ss3iyh.hn-bkt.clouddn.com/clip_image002.gif" alt="img"></p><p> 因为只有当订货量大于等于75时，才可能享受单价32.5元的优惠价格，即70.16是不可行的。</p><p>  第2步：C&#x3D;35时，H&#x3D;35×12%＝4.2</p><p>  <img src="http://rb1ss3iyh.hn-bkt.clouddn.com/clip_image004.gif" alt="img"></p><p>  当单价为35时，经济订货批量取68单位，这与供应商的条件不矛盾，因而68为可行的订货量。在这里，订货量大于68的数量折扣点只有一个，即75单位，因此应分别计算订货量为68和75时的总成本作比较：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/clip_image006.gif" alt="img"></p><hr><h1 id="第十一章-MRP到ERP"><a href="#第十一章-MRP到ERP" class="headerlink" title="第十一章 MRP到ERP"></a>第十一章 MRP到ERP</h1><h2 id="物料需求计划表"><a href="#物料需求计划表" class="headerlink" title="物料需求计划表"></a>物料需求计划表</h2><p>东风公司生产台扇，产品结构图如下。现有库存量和预期到货量见下表。要在第10周生产600台、第11周生产700台，试作出灯和灯泡的物料需求计划。</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/clip_image001.gif" alt="img"></p><table><thead><tr><th>品 名</th><th>现有库存量</th><th>预期到货量</th></tr></thead><tbody><tr><td>灯</td><td>920</td><td>0</td></tr><tr><td>灯泡</td><td>739</td><td>2100，第2周</td></tr></tbody></table><p>解：</p><p>灯的物料需求计划，LT&#x3D;2周</p><table><thead><tr><th>计划期（周）</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>总需求</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1800</td><td>2100</td></tr><tr><td>预期到货量</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>预期库存量（920）</td><td>920</td><td>920</td><td>920</td><td>920</td><td>920</td><td>920</td><td>920</td><td>920</td><td>-880</td><td>-2980</td></tr><tr><td>净需求</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>880</td><td>2100</td></tr><tr><td>计划订单入库</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>880</td><td>2100</td></tr><tr><td>计划订单下达</td><td></td><td></td><td></td><td></td><td></td><td></td><td>880</td><td>2100</td><td></td><td></td></tr></tbody></table><p>灯的物料需求计划，LT&#x3D;2周</p><table><thead><tr><th>计划期（周）</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>总需求</td><td></td><td></td><td></td><td></td><td></td><td></td><td>880</td><td>2100</td><td></td><td></td></tr><tr><td>预期到货量</td><td></td><td>2100</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>预期库存量（739）</td><td>739</td><td>2839</td><td>2839</td><td>2839</td><td>2839</td><td>2839</td><td>1959</td><td>-141</td><td></td><td></td></tr><tr><td>净需求</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>141</td><td></td><td></td></tr><tr><td>计划订单入库</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>141</td><td></td><td></td></tr><tr><td>计划订单下达</td><td></td><td></td><td></td><td>141</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="第12章-作业计划"><a href="#第12章-作业计划" class="headerlink" title="第12章 作业计划"></a>第12章 作业计划</h1><h2 id="1-生产比倒数法"><a href="#1-生产比倒数法" class="headerlink" title="1.生产比倒数法"></a>1.生产比倒数法</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212124630928.png" alt="image-20211212124630928"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212124653674.png" alt="image-20211212124653674"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212124706801.png" alt="image-20211212124706801"></p><h2 id="2-逻辑顺序表"><a href="#2-逻辑顺序表" class="headerlink" title="2.逻辑顺序表"></a>2.逻辑顺序表</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212125316670.png" alt="image-20211212125316670"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212125339744.png" alt="image-20211212125339744"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212125353168.png" alt="image-20211212125353168"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212125418551.png" alt="image-20211212125418551"></p><h2 id="3-先到先服务FCFS"><a href="#3-先到先服务FCFS" class="headerlink" title="3.先到先服务FCFS"></a>3.先到先服务FCFS</h2><p>first come first served</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212160806618.png" alt="image-20211212160806618"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212160841703.png" alt="image-20211212160841703"></p><h2 id="4-最短加工时间SPT"><a href="#4-最短加工时间SPT" class="headerlink" title="4.最短加工时间SPT"></a>4.最短加工时间SPT</h2><p>shortest processing time</p><p>同3例</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212160921998.png" alt="image-20211212160921998"></p><h2 id="5-后到先服务"><a href="#5-后到先服务" class="headerlink" title="5.后到先服务"></a>5.后到先服务</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212161242220.png" alt="image-20211212161242220"></p><h2 id="6-交货期最早"><a href="#6-交货期最早" class="headerlink" title="6.交货期最早"></a>6.交货期最早</h2><p>earliest dur date </p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212161324693.png" alt="image-20211212161324693"></p><h2 id="7-SPT最短作业时间法"><a href="#7-SPT最短作业时间法" class="headerlink" title="7.SPT最短作业时间法"></a>7.SPT最短作业时间法</h2><p>shortest processing time</p><p>把作业时间最少的排在前面</p><h2 id="8-两个作业中心的排序"><a href="#8-两个作业中心的排序" class="headerlink" title="8.两个作业中心的排序"></a>8.两个作业中心的排序</h2><p>约翰逊法则：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212161848749.png" alt="image-20211212161848749"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212161857730.png" alt="image-20211212161857730"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211212161910623.png" alt="image-20211212161910623"></p><h1 id="第十三章-项目管理"><a href="#第十三章-项目管理" class="headerlink" title="第十三章 项目管理"></a>第十三章 项目管理</h1><h2 id="网络计划图"><a href="#网络计划图" class="headerlink" title="网络计划图"></a>网络计划图</h2><h1 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h1><h2 id="顺序移动，平行移动、平行顺序移动"><a href="#顺序移动，平行移动、平行顺序移动" class="headerlink" title="顺序移动，平行移动、平行顺序移动"></a>顺序移动，平行移动、平行顺序移动</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/IMG_20211212_134223.jpg" alt="IMG_20211212_134223"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 运营管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建一个识别验证码的api</title>
      <link href="/blog_new/2022/09/04/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%92%8Cpython%E7%9A%84%E8%AF%AD%E8%A8%80%E5%BA%93%E8%AF%86/"/>
      <url>/blog_new/2022/09/04/%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8E%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%92%8Cpython%E7%9A%84%E8%AF%AD%E8%A8%80%E5%BA%93%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="智能识别系统"><a href="#智能识别系统" class="headerlink" title="智能识别系统"></a>智能识别系统</h1><p>数据来源： <a href="http://jhsjk.people.cn/">重要讲话数据库 (people.cn)</a></p><blockquote><p>代码获取见文章最后</p></blockquote><br><h1 id="思路来源"><a href="#思路来源" class="headerlink" title="思路来源"></a>思路来源</h1><p>相信不少人在写论文的时候遇到过一个问题，zx说过的话必须标注出来，简直是大海捞针，于是就有了这个主席说过识别系统？</p><br><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><blockquote><p>导入word文档：必须是最新的**.docx**格式否者无效</p></blockquote><p>系统会自动进行分句并识别，自动导出一个基于源文档的说明文档，其中包含讲话和会议或者讲话的标题</p><br><h1 id="原文档——结果文档对比"><a href="#原文档——结果文档对比" class="headerlink" title="原文档——结果文档对比"></a>原文档——结果文档对比</h1><p><img src="https://s2.loli.net/2022/04/28/GRtdDBgSqfJHel5.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2a8c48ac056842cc873e4659d2a9052e.png" alt="在这里插入图片描述"></p><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><blockquote><p>爬虫和数据获取部分省略</p></blockquote><h2 id="1-用到的库"><a href="#1-用到的库" class="headerlink" title="1.用到的库"></a>1.用到的库</h2><p>json用于读取数据<br>re用于匹配数据<br>python-docx用于修改文档添加批注</p><h2 id="2-函数功能说明："><a href="#2-函数功能说明：" class="headerlink" title="2.函数功能说明："></a>2.函数功能说明：</h2><p><img src="https://s2.loli.net/2022/04/28/Wa1LoUVtrOGkC4z.png" alt="在这里插入图片描述"></p><br><h1 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h1><blockquote><p>打包文件获取方法<br>公众号回复：主席说了吗？<img src="https://s2.loli.net/2022/04/28/ThKszZ7MkqnxVRC.jpg" alt="请添加图片描述"></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    : index.py</span></span><br><span class="line"><span class="string">@Time    : 2022/04/27 21:06:59</span></span><br><span class="line"><span class="string">@Author  : chou</span></span><br><span class="line"><span class="string">@Contact : chou2079986882@gmail.com</span></span><br><span class="line"><span class="string">@Version : 0.1</span></span><br><span class="line"><span class="string">@Desc    : None</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 用于文档处理</span></span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">from</span> docx.shared <span class="keyword">import</span> Pt</span><br><span class="line"><span class="keyword">from</span> docx.shared <span class="keyword">import</span> RGBColor</span><br><span class="line"><span class="comment"># from docx.enum.style import WD_STYLE_TYPE</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cut_sentences</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="comment"># 分句</span></span><br><span class="line">    <span class="comment"># end_flag = [&#x27;?&#x27;, &#x27;，&#x27;, &#x27;!&#x27;, &#x27;.&#x27;, &#x27;？&#x27;, &#x27;！&#x27;, &#x27;。&#x27;, &#x27;…&#x27;, &quot;\n&quot;]</span></span><br><span class="line">    end_flag = [<span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;？&#x27;</span>, <span class="string">&#x27;！&#x27;</span>, <span class="string">&#x27;。&#x27;</span>, <span class="string">&#x27;…&#x27;</span>, <span class="string">&quot;\n&quot;</span>, <span class="string">&quot;：&quot;</span>, <span class="string">&quot;，&quot;</span>]</span><br><span class="line">    content_len = <span class="built_in">len</span>(content)</span><br><span class="line">    sentences = []</span><br><span class="line">    tmp_char = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> idx, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(content):</span><br><span class="line">        <span class="comment"># 拼接字符</span></span><br><span class="line">        tmp_char += char</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 判断是否已经到了最后一位</span></span><br><span class="line">        <span class="keyword">if</span> (idx + <span class="number">1</span>) == content_len:</span><br><span class="line">            sentences.append(tmp_char)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 判断此字符是否为结束符号</span></span><br><span class="line">        <span class="keyword">if</span> char <span class="keyword">in</span> end_flag:</span><br><span class="line">            <span class="comment"># 再判断下一个字符是否为结束符号，如果不是结束符号，则切分句子</span></span><br><span class="line">            next_idx = idx + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> content[next_idx] <span class="keyword">in</span> end_flag:</span><br><span class="line">                sentences.append(tmp_char)</span><br><span class="line">                tmp_char = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sentences</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(cut_sentences(test_text))</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">except_text</span>():</span><br><span class="line">    ls = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./except.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            ls.append(line.strip(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line">    <span class="comment"># print(ls)</span></span><br><span class="line">    <span class="keyword">return</span> ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># except_text()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">all_text</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="comment"># 获取文档内容别分句</span></span><br><span class="line">    doc = Document(path)</span><br><span class="line">    all_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> doc.paragraphs:</span><br><span class="line">        all_text += <span class="built_in">str</span>(p.text).strip(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="comment"># print(all_text)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;文档读取成功——————&quot;</span>)</span><br><span class="line">    sentence = cut_sentences(all_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;分句成功——————&quot;</span>)</span><br><span class="line">    <span class="comment"># print(sentence)</span></span><br><span class="line">    <span class="keyword">return</span> sentence</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对原文档进行修订</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">docx_amend</span>(<span class="params">before, after, path</span>):</span><br><span class="line">    <span class="keyword">global</span> tag</span><br><span class="line">    tag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> tag == <span class="number">0</span>:</span><br><span class="line">        doc = Document(path)</span><br><span class="line">        <span class="keyword">for</span> i, p <span class="keyword">in</span> <span class="built_in">enumerate</span>(doc.paragraphs):  <span class="comment"># 遍历所有的段落</span></span><br><span class="line">            <span class="keyword">if</span> before <span class="keyword">in</span> p.text:</span><br><span class="line">                <span class="comment"># before是某一句</span></span><br><span class="line">                p.runs[-<span class="number">1</span>].add_break()  <span class="comment"># 添加一个折行</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># after需要修改的内容</span></span><br><span class="line">                run = p.add_run(after)</span><br><span class="line">                run.bold = <span class="literal">True</span></span><br><span class="line">                font = run.font</span><br><span class="line">                font.name = <span class="string">&#x27;宋体&#x27;</span></span><br><span class="line">                font.underline = <span class="literal">True</span></span><br><span class="line">                font.size = Pt(<span class="number">6</span>)</span><br><span class="line">                font.color.rgb = RGBColor(<span class="number">0x42</span>, <span class="number">0x24</span>, <span class="number">0xE9</span>)</span><br><span class="line">                <span class="comment"># p.add_run(&#x27;测试&#x27;)</span></span><br><span class="line">                doc.save(path)</span><br><span class="line">                tag += <span class="number">1</span></span><br><span class="line">                doc = Document(path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        doc = Document(path)</span><br><span class="line">        <span class="keyword">for</span> i, p <span class="keyword">in</span> <span class="built_in">enumerate</span>(doc.paragraphs):  <span class="comment"># 遍历所有的段落</span></span><br><span class="line">            <span class="keyword">if</span> before <span class="keyword">in</span> p.text:</span><br><span class="line">                p.runs[-<span class="number">1</span>].add_break()  <span class="comment"># 添加一个折行</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># after需要修改的内容</span></span><br><span class="line">                run = p.add_run(after)</span><br><span class="line">                run.bold = <span class="literal">True</span></span><br><span class="line">                font = run.font</span><br><span class="line">                font.name = <span class="string">&#x27;宋体&#x27;</span></span><br><span class="line">                font.underline = <span class="literal">True</span></span><br><span class="line">                font.size = Pt(<span class="number">6</span>)</span><br><span class="line">                font.color.rgb = RGBColor(<span class="number">0x42</span>, <span class="number">0x24</span>, <span class="number">0xE9</span>)</span><br><span class="line">                <span class="comment"># p.add_run(&#x27;测试&#x27;)</span></span><br><span class="line">                doc.save(path)</span><br><span class="line">                tag += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(&quot;参照文档输出成功--------------&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># all_text()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">match</span>(<span class="params">path</span>):</span><br><span class="line">    most_sort = <span class="number">6</span>  <span class="comment"># 默认最小识别句子必须有6个字</span></span><br><span class="line">    all_sentences = all_text(path)</span><br><span class="line">    <span class="comment"># test_text = &quot;基础设施是经济社会发展的重要支撑，要统筹发展和安全&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./data.json&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line">    <span class="comment"># 剔除部分句子</span></span><br><span class="line">    exc = except_text()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环检测所有文本t</span></span><br><span class="line">    <span class="keyword">for</span> test_text <span class="keyword">in</span> all_sentences:</span><br><span class="line">        <span class="keyword">if</span> test_text <span class="keyword">in</span> exc:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(test_text) &lt;= most_sort:</span><br><span class="line">            <span class="comment"># 四个字一下判定不是句子</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            text = data[<span class="string">&quot;正文&quot;</span>]</span><br><span class="line">            title = data[<span class="string">&quot;标题&quot;</span>]</span><br><span class="line">            link = data[<span class="string">&quot;标题链接&quot;</span>]</span><br><span class="line">            source = data[<span class="string">&quot;来源&quot;</span>]</span><br><span class="line"></span><br><span class="line">            key = []  <span class="comment"># 匹配到的句子编号</span></span><br><span class="line">            <span class="comment"># text、title、link是字典类型，键是数据序号</span></span><br><span class="line">            <span class="keyword">for</span> k_t, v_t <span class="keyword">in</span> text.items():</span><br><span class="line">                <span class="keyword">if</span> test_text <span class="keyword">in</span> v_t:</span><br><span class="line">                    key.append(k_t)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;数据库匹配中————————&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line">                <span class="comment"># 每一个i对应一句主席语录</span></span><br><span class="line">                <span class="built_in">print</span>(</span><br><span class="line">                    <span class="string">f&quot;【原句】<span class="subst">&#123;test_text&#125;</span>:\n【原文标题：】<span class="subst">&#123;title[i]&#125;</span>\n【来源时间信息：】<span class="subst">&#123;source[i]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;【原文链接】：<span class="subst">&#123;link[i]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                before = test_text</span><br><span class="line">                after = <span class="string">f&quot;【原句】<span class="subst">&#123;test_text&#125;</span>:\n【原文标题：】<span class="subst">&#123;title[i]&#125;</span>\n【原文链接】：<span class="subst">&#123;link[i]&#125;</span>&quot;</span></span><br><span class="line">                docx_amend(before=before, after=after, path=path)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;参照文档输出成功--------------&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># path 文档路径</span></span><br><span class="line">path = <span class="string">&quot;./1.docx&quot;</span></span><br><span class="line"><span class="keyword">match</span>(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建一个识别验证码的api</title>
      <link href="/blog_new/2022/09/04/%E9%AA%8C%E8%AF%81%E7%A0%81api/"/>
      <url>/blog_new/2022/09/04/%E9%AA%8C%E8%AF%81%E7%A0%81api/</url>
      
        <content type="html"><![CDATA[<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   main.py</span></span><br><span class="line"><span class="string">@Time    :   2022/01/26 21:28:18</span></span><br><span class="line"><span class="string">@Author  :   chou </span></span><br><span class="line"><span class="string">@Version :   1.0</span></span><br><span class="line"><span class="string">@Contact :   chou2079986882@gmail.com</span></span><br><span class="line"><span class="string">@Desc    :   由于cv限制文件夹名不要设置成中文</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI, File, UploadFile</span><br><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> ddddocr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>(<span class="params">filepath</span>):</span><br><span class="line">    <span class="comment"># 灰度化</span></span><br><span class="line">    im = cv2.imread(filepath)</span><br><span class="line">    im_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># cv2.imwrite(&#x27;qrcode_temp.png&#x27;,im_gray)</span></span><br><span class="line">    <span class="comment"># 高斯模糊</span></span><br><span class="line">    ret, im_inv = cv2.threshold(im_gray, <span class="number">250</span>, <span class="number">255</span>, cv2.THRESH_BINARY_INV)</span><br><span class="line">    <span class="comment"># cv2.imwrite(&#x27;qrcode_temp.png&#x27;,im_inv)</span></span><br><span class="line">    <span class="comment"># 二值化</span></span><br><span class="line">    kernel = <span class="number">1</span>/<span class="number">16</span>*np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line">    im_blur = cv2.filter2D(im_inv, -<span class="number">1</span>, kernel)</span><br><span class="line">    cv2.imwrite(<span class="string">&#x27;qrcode_temp1.png&#x27;</span>, im_blur)</span><br><span class="line">    ocr = ddddocr.DdddOcr()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;qrcode_temp1.png&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        img_bytes = f.read()</span><br><span class="line">    res = ocr.classification(img_bytes)</span><br><span class="line">    code = res</span><br><span class="line">    <span class="built_in">print</span>(code)</span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/files/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_file</span>(<span class="params">file: <span class="built_in">bytes</span> = File(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;file_size&quot;</span>: <span class="built_in">len</span>(file)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/uploadfile/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_upload_file</span>(<span class="params">file: UploadFile = File(<span class="params">...</span>)</span>):</span><br><span class="line">    contents = <span class="keyword">await</span> file.read()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;qrcode_temp.png&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(contents)</span><br><span class="line">    code = free(<span class="string">&quot;./qrcode_temp.png&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;code&quot;</span>: code&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    uvicorn.run(app=<span class="string">&quot;main:app&quot;</span>, host=<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">                port=<span class="number">8000</span>, reload=<span class="literal">True</span>, debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;./qrcode_temp1.png&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">r=requests.post(url=<span class="string">f&quot;http://124.223.111.172:5702/uploadfile/&quot;</span>,files=files)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h1 id="服务器挂载"><a href="#服务器挂载" class="headerlink" title="服务器挂载"></a>服务器挂载</h1><p>暂略</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> qrcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作技巧</title>
      <link href="/blog_new/2022/09/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/blog_new/2022/09/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="1-查看数据库大小："><a href="#1-查看数据库大小：" class="headerlink" title="1.查看数据库大小："></a>1.查看数据库大小：</h1><p>use information_schema;<br>select concat(round(sum(data_length&#x2F;1024&#x2F;1024),2),’MB’) as data from tables;</p><p><img src="https://s2.loli.net/2021/12/09/jZnzfpPS2medyMi.png" alt="image-20211209131351785"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee page </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作技巧</title>
      <link href="/blog_new/2022/09/04/%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%98%E6%96%97%E5%8A%9B%E8%BF%98%E6%98%AF%E7%A0%96%E5%9D%97%20%E5%9B%9B%E5%A4%A9%E7%A0%94%E7%A9%B6%E8%AE%A9%E6%89%8B%E6%9C%BA%E5%8F%98linux%E7%BB%88%E7%AB%AF%E5%8F%AF%E4%BB%A5%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%EF%BC%8Cvscode%20jupyter%20%E7%AD%89%E7%AD%89%20%E5%B9%B6%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8Cpython%EF%BC%8Cselenium%E4%B8%80%E5%B9%B6%E8%A7%A3%E5%86%B3%E4%BA%86%20(1)/"/>
      <url>/blog_new/2022/09/04/%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%98%E6%96%97%E5%8A%9B%E8%BF%98%E6%98%AF%E7%A0%96%E5%9D%97%20%E5%9B%9B%E5%A4%A9%E7%A0%94%E7%A9%B6%E8%AE%A9%E6%89%8B%E6%9C%BA%E5%8F%98linux%E7%BB%88%E7%AB%AF%E5%8F%AF%E4%BB%A5%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%EF%BC%8Cvscode%20jupyter%20%E7%AD%89%E7%AD%89%20%E5%B9%B6%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8Cpython%EF%BC%8Cselenium%E4%B8%80%E5%B9%B6%E8%A7%A3%E5%86%B3%E4%BA%86%20(1)/</url>
      
        <content type="html"><![CDATA[<p>﻿</p><p>是的手机里面安装vscode jupyter chrome opencv你没有看错，几乎可以算是一个便携手机服务器。小米k30i完全不卡。</p><blockquote><p>缺点还是有的宝塔面板等等还是无法适配的，偏向于本地运行的一些脚本</p></blockquote><p>安装了chrome意味着什么?<br>selenium的一些操作可以实现，我的刚需，因位自己平时要运行一些定时脚本。</p><p>关键在于低能耗:(这是我运行一早上的电量)</p><p><img src="https://img-blog.csdnimg.cn/6318bbe8de31446781d689eab0126e40.jpg?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUGV0ZXJfX0Nob3U=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>平时想运行脚本但是又不想买服务器成本实在太高不符合白嫖精神，特别是一些定时任务，然后经过探索找出了两种方案，建议使用aidlux。</p><h2 id="termux"><a href="#termux" class="headerlink" title="termux"></a>termux</h2><p>最开始我是先用termux具体看这个文章(手机没有root可以直接不看，因位限制实在太多了，没办法运行我想要的效果)</p><p>教程:<br><a href="https://hutters.gitee.io/blog/2021/12/14/termux%E8%BF%90%E8%A1%8Cpython/">https://hutters.gitee.io/blog/2021/12/14/termux%E8%BF%90%E8%A1%8Cpython/</a></p><h2 id="aidlearning"><a href="#aidlearning" class="headerlink" title="aidlearning"></a>aidlearning</h2><p>然后前几天一次意外我发现了aidlearning</p><p>这里看效果(我是用电脑连接手机linux终端系统是debian10):<br><img src="https://img-blog.csdnimg.cn/img_convert/0edbfde8843c21ab9b73fd3e2a814806.png" alt="在这里插入图片描述"></p><p>教程:<br><a href="https://hutters.gitee.io/blog/2021/12/17/aidlearning%E4%BD%BF%E7%94%A8/">https://hutters.gitee.io/blog/2021/12/17/aidlearning%E4%BD%BF%E7%94%A8/</a></p><p><img src="https://img-blog.csdnimg.cn/5a6698de31354e25b9c39bb1eabd66e9.jpg?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAUGV0ZXJfX0Nob3U=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡说明——青柠疫服</title>
      <link href="/blog_new/2022/09/04/%E9%9D%92%E6%9F%A0%E7%96%AB%E6%9C%8D%E6%89%93%E5%8D%A11/"/>
      <url>/blog_new/2022/09/04/%E9%9D%92%E6%9F%A0%E7%96%AB%E6%9C%8D%E6%89%93%E5%8D%A11/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/02/09/u1mzMBUcrPoO3y9.png" alt="image-20220209224754576"></p><blockquote><p>2022&#x2F;02&#x2F;18 更新打卡位置为在校</p><p>2022&#x2F;02&#x2F;18 增加打卡位置jwd和密码正确性检测</p><p>2022&#x2F;02&#x2F;28 程序出错的主要原因是我又又不小心把代码删了</p><p>2022&#x2F;02&#x2F;29 更新打卡地址</p><p>每增加一个功能可能花费几十分钟到几个小时不等的时间</p></blockquote><h1 id="1-关于打卡的简单说明："><a href="#1-关于打卡的简单说明：" class="headerlink" title="1.关于打卡的简单说明："></a>1.关于打卡的简单说明：</h1><p>1.自愿原则</p><p>2.不维护【一次挂机永久打卡】</p><p>3.绝对免费</p><p>4.如体温异常请自动报备</p><p>5.不保证100%</p><hr><h1 id="2-【必看】经纬度jwd获取说明🚩"><a href="#2-【必看】经纬度jwd获取说明🚩" class="headerlink" title="2.【必看】经纬度jwd获取说明🚩"></a>2.【必看】经纬度jwd获取说明🚩</h1><h2 id="1-打开网站"><a href="#1-打开网站" class="headerlink" title="1.打开网站"></a>1.打开网站</h2><p><a href="https://jingweidu.wncx.cn/">经纬度查询_经纬度转换_经纬度地图_经纬度换算_北京经纬度_经纬度在线查询 (wncx.cn)</a></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220209215128905.png" alt="image-20220209215128905"></p><h2 id="2-输入打卡地址"><a href="#2-输入打卡地址" class="headerlink" title="2.输入打卡地址"></a>2.输入打卡地址</h2><p>例如：北京天安门</p><h2 id="3-格式"><a href="#3-格式" class="headerlink" title="3.格式"></a>3.格式</h2><p>例如：（纬度,经度）</p><p><strong>33.731500,114.886140</strong></p><blockquote><p>1.逗号是英文的</p><p>2.没有空格</p><p><strong>3.四川省成都市郫都区西华大学（30.780882,103.947853）</strong></p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/42KYGxCPQluieof.png" alt="Snipaste_2022-02-10_19-08-04"></p><hr><h1 id="3-打卡最新地址"><a href="#3-打卡最新地址" class="headerlink" title="3.打卡最新地址"></a>3.打卡最新地址</h1><blockquote><p>多嘴一句注意经纬度的格式哈</p></blockquote><p><a href="http://124.223.111.172:1314/">自动签到系统 - 免费且快速稳定的24h自动签到平台</a></p><p>错误数据：</p><p><img src="https://s2.loli.net/2022/02/10/42KYGxCPQluieof.png" alt="Snipaste_2022-02-10_19-08-04"></p><hr><h1 id="4-上传打卡信息查询"><a href="#4-上传打卡信息查询" class="headerlink" title="4.上传打卡信息查询"></a>4.上传打卡信息查询</h1><p><a href="http://124.223.111.172:1314/qnyf_data/searchStudent.php?stu_num=3120190771037">个人信息查询</a></p><p>【管理员】全部打卡人员信息查询：<a href="http://124.223.111.172:1314/qnyf_data/index.php">信息管理系统</a></p><hr><h1 id="5-Enjoy"><a href="#5-Enjoy" class="headerlink" title="5.Enjoy"></a>5.Enjoy</h1><p>做脚本的目的很简单|<strong>既然大家心照不宣，不如做个沉默的大多数。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青柠疫服——体温</title>
      <link href="/blog_new/2022/09/04/%E6%95%99%E7%A8%8B/"/>
      <url>/blog_new/2022/09/04/%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>﻿# 获取stu_password和uid</p><p>&amp;nbsp;<br>一分钟视频：<a href="https://b23.tv/8tRm6u">https://b23.tv/8tRm6u</a><br>&amp;nbsp;<br>&amp;nbsp; </p><h4 id="1-进入登录网站：登录网站"><a href="#1-进入登录网站：登录网站" class="headerlink" title="1.进入登录网站：登录网站"></a>1.进入登录网站：<a href="https://wxyqfk.zhxy.net/?yxdm=10623#/login">登录网站</a></h4><p>&amp;nbsp; </p><hr><h4 id="2-stu-password"><a href="#2-stu-password" class="headerlink" title="2.stu_password"></a>2.stu_password</h4><ul><li>——&gt; 首先按键盘 F12（开发者模式） </li><li>——&gt;   然后点击Network（网络） </li><li>——&gt;   然后在左边输入密码账号登陆</li><li>——&gt;   最后checkinUser文件，找到stu_password</li></ul><p><img src="https://img-blog.csdnimg.cn/20210331180414570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BldGVyX19DaG91,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h4 id="3-stu-uid"><a href="#3-stu-uid" class="headerlink" title="3.stu_uid"></a>3.stu_uid</h4><p>UID就是你的stu_uid<br><img src="https://img-blog.csdnimg.cn/20210331180705747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BldGVyX19DaG91,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>京东说明</title>
      <link href="/blog_new/2022/09/04/%E6%8C%82%E4%BA%AC%E4%B8%9C%E8%AF%B4%E6%98%8E/"/>
      <url>/blog_new/2022/09/04/%E6%8C%82%E4%BA%AC%E4%B8%9C%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="关于此脚本"><a href="#关于此脚本" class="headerlink" title="关于此脚本"></a>关于此脚本</h1><p>不喜勿喷，用于jd自动化签到，主要收益是每天签到的<strong>红包</strong>和<strong>京豆</strong></p><h1 id="❤️关于京豆"><a href="#❤️关于京豆" class="headerlink" title="❤️关于京豆"></a>❤️关于京豆</h1><blockquote><p> <strong>1000京豆&#x3D;10元</strong></p><p>每天100+左右的京豆，每个月稳定在2000+</p></blockquote><p>以下面是示例：</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/B84911558B5F053DD80F0414BFD7E7D1.png" alt="B84911558B5F053DD80F0414BFD7E7D1"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/15D99D4A90145A7E62B74F98167A509C.png" alt="15D99D4A90145A7E62B74F98167A509C"></p><hr><hr><h1 id="cookies获取"><a href="#cookies获取" class="headerlink" title="cookies获取"></a>cookies获取</h1><h2 id="👍安卓"><a href="#👍安卓" class="headerlink" title="👍安卓"></a>👍安卓</h2><p>（1）下载文件</p><blockquote><p> 分享名称：cookies获取.apk<br> 分享链接：<a href="https://share.weiyun.com/EsxAA6kO">https://share.weiyun.com/EsxAA6kO</a> </p><p> 密码：jddddd</p></blockquote><p>（2）安装后点击获取cookies</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/8B0EDD3FF27872372B9655F6CE3636A0.jpg" alt="img"></p><p>（3）登录后复制</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/IMG_20220211_131345.jpg.jpg" alt="IMG_20220211_131345.jpg"></p><h2 id="ios获取方法"><a href="#ios获取方法" class="headerlink" title="ios获取方法"></a>ios获取方法</h2><p><a href="https://www.icloud.com/shortcuts/f6046f1e79ad4ee6bcca6d2b078bd25a">pinck获取 (icloud.com)</a></p><hr><h1 id="上传地址"><a href="#上传地址" class="headerlink" title="上传地址"></a>上传地址</h1><blockquote><p>上传地址会不定期更换，以最新地址为准</p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220211205405361.png" alt="image-20220211205405361"></p><p>cookies格式为（注意标点为英文，通过上面方法获取的直接上传即可）：</p><blockquote><p> pt_key&#x3D;xxxxxxxxxx;pt_pin&#x3D;xxxxxx;</p></blockquote><p>↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓</p><p><a href="http://124.223.111.172:5701/">http://124.223.111.172:5701/</a></p><p>↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>termux运行python</title>
      <link href="/blog_new/2022/09/04/termux%E8%BF%90%E8%A1%8Cpython/"/>
      <url>/blog_new/2022/09/04/termux%E8%BF%90%E8%A1%8Cpython/</url>
      
        <content type="html"><![CDATA[<blockquote><p>仅个人学习记录用</p></blockquote><h1 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h1><p>如果手机无root可玩性不强，建议关闭睡觉去</p><p>可以试下aidlearing如果实在想搞 ，百度</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>摘录部分：</p><blockquote><p>F-Droid 市场版本下载的版本比 Google Play （貌似 1 年多没有更新了）下载的要新，而且插件这块安装也很方便，有能力的朋友建议首先考虑下载 F-Droid 版本的，然后考虑 Google Play 版本，最后再考虑酷安的版本。</p></blockquote><p>Termux 是一个 Android 下一个高级的终端模拟器，开源且不需要 root，支持 apt 管理软件包，十分方便安装软件包，完美支持 Python、 PHP、 Ruby、 Nodejs、 MySQL等。随着智能设备的普及和性能的不断提升，如今的手机、平板等的硬件标准已达到了初级桌面计算机的硬件标准，用心去打造 DIY 的话完全可以把手机变成一个强大的极客工具。</p><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>我用的这个下载 <a href="https://f-droid.org/packages/com.termux/">F-Droid 下载地址</a></p><h1 id="基本操作：国光大佬教程只看安装即可"><a href="#基本操作：国光大佬教程只看安装即可" class="headerlink" title="基本操作：国光大佬教程只看安装即可"></a>基本操作：国光大佬教程只看安装即可</h1><p>最好配置下源，下载包的速度快</p><p><a href="https://www.sqlsec.com/2018/05/termux.html#toc-heading-126">Termux 高级终端安装使用配置教程 | 国光 (sqlsec.com)</a></p><p>换源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27; $PREFIX/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27; $PREFIX/etc/apt/sources.list.d/game.list</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27; $PREFIX/etc/apt/sources.list.d/science.list</span><br><span class="line"></span><br><span class="line">pkg update</span><br></pre></td></tr></table></figure><p>安装yum</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/yum.baseurl.org/download</span><span class="regexp">/3.2/yum</span>-<span class="number">3.2</span>.<span class="number">28</span>.tar.gz</span><br><span class="line">tar xvf yum-<span class="number">3.2</span>.<span class="number">28</span>.tar.gz</span><br><span class="line">cd yum-<span class="number">3.2</span>.<span class="number">28</span></span><br><span class="line">sudo apt install yum</span><br><span class="line">yum check-update</span><br><span class="line">yum update</span><br><span class="line">yum clean all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install python -y</span><br></pre></td></tr></table></figure><h1 id="用xshell管理文件"><a href="#用xshell管理文件" class="headerlink" title="用xshell管理文件"></a>用xshell管理文件</h1><h2 id="安装MT管理器（可以不用）"><a href="#安装MT管理器（可以不用）" class="headerlink" title="安装MT管理器（可以不用）"></a>安装MT管理器（可以不用）</h2><blockquote><p>用于脚本文件上传</p></blockquote><p>总不能真的在手机上写代码吧😓</p><p>由于安卓限制定时不太行</p><p>解决方案是写个py一直运行~~~~</p><h1 id="定时-用不了"><a href="#定时-用不了" class="headerlink" title="定时(用不了)"></a><del>定时(用不了)</del></h1><p><a href="https://www.runoob.com/linux/linux-comm-crontab.html">Linux crontab 命令 | 菜鸟教程 (runoob.com)</a></p><p><strong>先安装crontab 手机上输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install cronie</span><br></pre></td></tr></table></figure><p><strong>首先防止设备休眠进程停止</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-wake-lock</span><br></pre></td></tr></table></figure><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214182456417.png" alt="image-20211214182456417"></p><p><code>termux-wake-lock</code> and <code>termux-wake-unlock</code> can be used to trigger a wakelock which causes Android not to go into deep sleep.</p><p><code>Termux-Wake-Lock</code>和<code>Termux-Wake-Unlock</code>可用于触发一个导致Android不要深入睡眠的Wakelock。</p><blockquote><p> 摘录自菜鸟教程：</p></blockquote><p><a href="https://www.runoob.com/linux/linux-command-manual.html"><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/up.gif" alt="Linux 命令大全"> Linux 命令大全</a></p><p>Linux crontab是用来定期执行程序的命令。</p><p>当安装完成操作系统之后，默认便会启动此任务调度命令。</p><p>crond 命令每分锺会定期检查是否有要执行的工作，如果有要执行的工作便会自动执行该工作。</p><p><strong>注意：</strong>新创建的 cron 任务，不会马上执行，至少要过 2 分钟后才可以，当然你可以重启 cron 来马上执行。</p><p>而 linux 任务调度的工作主要分为以下两类：</p><ul><li>1、系统执行的工作：系统周期性所要执行的工作，如备份系统数据、清理缓存</li><li>2、个人执行的工作：某个用户定期要做的工作，例如每隔10分钟检查邮件服务器是否有新信，这些工作可由每个用户自行设置</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab [ -u user ] file</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab [ -u user ] &#123; -l | -r | -e &#125;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong></p><p>crontab 是用来让使用者在固定时间或固定间隔执行程序之用，换句话说，也就是类似使用者的时程表。</p><p>-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。</p><p><strong>参数说明</strong>：</p><ul><li>-e : 执行文字编辑器来设定时程表，内定的文字编辑器是 VI，如果你想用别的文字编辑器，则请先设定 VISUAL 环境变数来指定使用那个文字编辑器(比如说 setenv VISUAL joe)</li><li>-r : 删除目前的时程表</li><li>-l : 列出目前的时程表</li></ul><p>时间格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1 f2 f3 f4 f5 program</span><br></pre></td></tr></table></figure><ul><li>其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。</li><li>当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其馀类推</li><li>当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推</li><li>当 f1 为 *&#x2F;n 时表示每 n 分钟个时间间隔执行一次，f2 为 *&#x2F;n 表示每 n 小时个时间间隔执行一次，其馀类推</li><li>当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，其馀类推</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *</span><br><span class="line">-    -    -    -    -</span><br><span class="line">|    |    |    |    |</span><br><span class="line">|    |    |    |    +----- 星期中星期几 (0 - 6) (星期天 为0)</span><br><span class="line">|    |    |    +---------- 月份 (1 - 12) </span><br><span class="line">|    |    +--------------- 一个月中的第几天 (1 - 31)</span><br><span class="line">|    +-------------------- 小时 (0 - 23)</span><br><span class="line">+------------------------- 分钟 (0 - 59)</span><br></pre></td></tr></table></figure><p>使用者也可以将所有的设定先存放在文件中，用 crontab file 的方式来设定执行时间。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>每一分钟执行一次 &#x2F;bin&#x2F;ls：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /bin/ls</span><br></pre></td></tr></table></figure><p>在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 &#x2F;usr&#x2F;bin&#x2F;backup：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 6-12/3 * 12 * /usr/bin/backup</span><br></pre></td></tr></table></figure><p>周一到周五每天下午 5:00 寄一封信给 <a href="mailto:&#97;&#x6c;&#x65;&#x78;&#64;&#100;&#x6f;&#109;&#97;&#105;&#110;&#x2e;&#110;&#97;&#109;&#101;">&#97;&#x6c;&#x65;&#x78;&#64;&#100;&#x6f;&#109;&#97;&#105;&#110;&#x2e;&#110;&#97;&#109;&#101;</a>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 17 * * 1-5 mail -s &quot;hi&quot; alex@domain.name &lt; /tmp/maildata</span><br></pre></td></tr></table></figure><p>每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分….执行 echo “haha”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20 0-23/2 * * * echo &quot;haha&quot;</span><br></pre></td></tr></table></figure><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><p>其次开启crontab，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crond</span><br></pre></td></tr></table></figure><p>添加定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>加入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">30 2 * * * python /storage/emulated/0/AApy/test.py &gt;&gt; /storage/emulated/0/AApy/1.<span class="built_in">log</span></span><br><span class="line">30 23 * * * python /home/***/***/test.py &gt;&gt; /home/***/***/test.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>这一行的意思每天凌晨两点半开始运行命令python xxx.py</p><p>加log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 2 * * * python xxx.py &gt;&gt; xxx.log</span><br></pre></td></tr></table></figure><h2 id="在线生成cron工具"><a href="#在线生成cron工具" class="headerlink" title="在线生成cron工具"></a>在线生成cron工具</h2><p><a href="http://cron.ciding.cc/">Cron - 在线Cron表达式生成器 (ciding.cc)</a></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214183027902.png" alt="image-20211214183027902"></p><p>推荐👍<a href="http://www.zhaotool.com/convert/cron.html">在线cron表达式生成器，cron表达式解析 (zhaotool.com)</a></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214183231537.png" alt="image-20211214183231537"></p><p><a href="https://tool.lu/crontab/">crontab执行时间计算 - 在线工具 (tool.lu)</a></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214183118717.png" alt="image-20211214183118717"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> turmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stata笔记</title>
      <link href="/blog_new/2022/09/04/stata%E7%AC%94%E8%AE%B0/"/>
      <url>/blog_new/2022/09/04/stata%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211218172842866.png" alt="image-20211218172842866"></p><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><blockquote><p>相当鸡肋的系统帮助页面</p></blockquote><h2 id="search"><a href="#search" class="headerlink" title="search"></a>search</h2><blockquote><p>在网上获取帮助，鸡肋</p></blockquote><p><img src="http://i.loli.net/2021/11/17/D3FWt4cQzKI7bhd.png" alt="image-20211117174229083"></p><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><blockquote><p>设置文件路径</p></blockquote><p><img src="http://i.loli.net/2021/11/17/vkyhFMzNOdirASs.png" alt="image-20211117173306514"></p><h2 id="memory"><a href="#memory" class="headerlink" title="memory"></a>memory</h2><blockquote><p>设置内存<br>set memory 20m 设置STATA 的内存空间为20m</p></blockquote><h2 id="输出保留两位小数-f-9-2f"><a href="#输出保留两位小数-f-9-2f" class="headerlink" title="输出保留两位小数 f(%9.2f)"></a>输出保留两位小数 f(%9.2f)</h2><blockquote><p>tabstat wage educ tenure exper,stat(count mean sd min p1 p25 p50 p75 p99 max) f(%9.2f)</p></blockquote><h2 id="🤔输出结果"><a href="#🤔输出结果" class="headerlink" title="🤔输出结果"></a>🤔输出结果</h2><p>第一种 右键</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215084839274.png" alt="image-20211215084839274"></p><p>第二种 asdoc</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssc install asdoc, replace</span><br></pre></td></tr></table></figure><p>asdoc xxxx</p><h2 id="打开和保存数据"><a href="#打开和保存数据" class="headerlink" title="打开和保存数据"></a>打开和保存数据</h2><h3 id="•-clear-清空内存数据"><a href="#•-clear-清空内存数据" class="headerlink" title="• clear 清空内存数据"></a>• clear 清空内存数据</h3><h3 id="•-use-打开STATA-格式的数据文件"><a href="#•-use-打开STATA-格式的数据文件" class="headerlink" title="• use 打开STATA 格式的数据文件"></a>• use 打开STATA 格式的数据文件</h3><h3 id="•-save-保存内存中的数据"><a href="#•-save-保存内存中的数据" class="headerlink" title="• save 保存内存中的数据"></a>• save 保存内存中的数据</h3><h2 id="input"><a href="#input" class="headerlink" title="input"></a>input</h2><blockquote><p>录入数据</p><p>input x 录入列名为x的数据</p></blockquote><h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><blockquote><p>结束输入</p></blockquote><h2 id="sum"><a href="#sum" class="headerlink" title="sum"></a>sum</h2><p>观察值个数，平均值，方差，最小值和最大值</p><p><img src="http://i.loli.net/2021/11/19/1Z3MkcAvzUCa4pq.png" alt="image-20211119111506367"></p><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><blockquote><p>sort grade 排序(按grade从低到高)</p></blockquote><p><img src="http://i.loli.net/2021/11/19/8jWbQ9gpP275M6c.png" alt="image-20211119112322033"></p><p><img src="http://i.loli.net/2021/11/19/aUJqD2kP7ZRzMN4.png" alt="image-20211119112342709"></p><h2 id="gen"><a href="#gen" class="headerlink" title="gen"></a>gen</h2><blockquote><p>生成新的变量</p></blockquote><p><img src="http://i.loli.net/2021/11/19/Db3i9zl4u67YTwA.png" alt="image-20211119115024164"></p><p><img src="http://i.loli.net/2021/11/19/lYnoSEDM59FmBjC.png" alt="image-20211119115035558"></p><h2 id="egen"><a href="#egen" class="headerlink" title="egen"></a>egen</h2><p>生成新的数据</p><h2 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h2><blockquote><p>重命名变量名</p></blockquote><p><img src="http://i.loli.net/2021/11/19/C39QYmIK2gTUBzX.png" alt="image-20211119134735478"></p><h2 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h2><blockquote><p>直接改变原变量的赋值</p></blockquote><p><img src="http://i.loli.net/2021/11/19/q7RHMWL1nXQhjvG.png" alt="image-20211119115245310"></p><h2 id="edit"><a href="#edit" class="headerlink" title="edit"></a>edit</h2><blockquote><p>编辑数据，输入<code>edit</code>会打开数据编辑器</p></blockquote><p><img src="http://i.loli.net/2021/11/17/xcZTY1rBsLM9ldG.png" alt="image-20211117174813665"></p><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><blockquote><p>显示计算结果<code>disp normal(1)</code>结果是0.5</p></blockquote><h2 id="describ"><a href="#describ" class="headerlink" title="describ"></a>describ</h2><blockquote><p>d 直接输入d</p><p>describ 命令显示数据集的属性信息</p></blockquote><p><img src="http://i.loli.net/2021/11/19/UHG5pJjXzQLh29A.png" alt="image-20211119132810062"></p><h2 id="set-more-off-x2F-on"><a href="#set-more-off-x2F-on" class="headerlink" title="set more off&#x2F;on"></a>set more off&#x2F;on</h2><blockquote><p>是否显示全部数据on 意思是不显示全部</p><p>在列示1 到1000 之前，若先设置set more off，则屏幕不停止；反之set more on 会使显示停止。</p></blockquote><h2 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h2><blockquote><p>清除内存中原有内容，不把你的数据删了（慎用）</p></blockquote><h2 id="drop"><a href="#drop" class="headerlink" title="drop"></a>drop</h2><blockquote><p>drop_all删除全部数据，效果同clear</p><p>drop x 删除x这一列数据</p></blockquote><h2 id="tabulate"><a href="#tabulate" class="headerlink" title="tabulate"></a>tabulate</h2><p>频数分析</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211218175133834.png" alt="image-20211218175133834"></p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><blockquote><p>list x显示示x列的数据</p><p>list 显示全部数据</p></blockquote><h2 id="暂时没用到的"><a href="#暂时没用到的" class="headerlink" title="暂时没用到的"></a>暂时没用到的</h2><p>• infile 导入数据<br>• insheet 导入数据<br>重整数据<br>• append 将有相同结果的数据纵向拼接（观察值拼接）<br>• merge 将两个数据文件横向拼接<br>• xpose 数据转置<br>• reshape<br>• generate 生成新的数据<br>• egen 生成新的数据<br>• rename 变量重命令<br>• drop 删除变量或观察值<br>• keep 保留变量或观察值<br>• sort 对观察值按从小到大顺序重新排列<br>• encode 数值型数据转换为字符型数据<br>• decode 字符型数据转换为数值型数据<br>• order 变量顺序的重新排列<br>• by 分类操作<br>报告数据<br>• describe 总体展示数据情况<br>• codebook 展示数据库中的每个变量情况<br>• list 列示内存中的数据<br>• count 报告共有多少观察值<br>• inspect 报告变量的分布<br>• table 数据列表<br>• tabulate 联列表<br>显示和保存输出结果</p><p>• log 将输出结果存放入结果文件</p><h1 id="命令汇总"><a href="#命令汇总" class="headerlink" title="命令汇总"></a>命令汇总</h1><h2 id="1-创建完整文件"><a href="#1-创建完整文件" class="headerlink" title="1.创建完整文件"></a>1.创建完整文件</h2><p><img src="http://i.loli.net/2021/11/19/WoBFUdXmLwjhpS9.png" alt="image-20211119135508436"></p><h2 id="2-才拆分合并数据"><a href="#2-才拆分合并数据" class="headerlink" title="2.才拆分合并数据"></a>2.才拆分合并数据</h2><p><img src="http://i.loli.net/2021/11/19/IsalnCdh8tRxB6Q.png" alt="image-20211119135522284"></p><h2 id="3-数据重组"><a href="#3-数据重组" class="headerlink" title="3.数据重组"></a>3.数据重组</h2><p><img src="http://i.loli.net/2021/11/19/ejNHEkaz3cvBtFV.png" alt="image-20211119140305401"></p><h1 id="变量的省略规则"><a href="#变量的省略规则" class="headerlink" title="变量的省略规则"></a>变量的省略规则</h1><p>只要不引起歧义，命令可以尽量只写前几个字母。如summarize 只需要前两个字母su；而<br>list 只需要写第一个字母l。在帮助文件中，命令下面有小划线，该线表明了命令可以省略<br>到什么程度。如<br><u>l</u>ist [varlist] [if] [in] [, options]<br><u>su</u>mmarize [varlist] [if] [in] [weight] [, options]</p><h1 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h1><blockquote><p>和Python差不多</p></blockquote><p>除以下字符不能用作变量名外，任何字母、字母与数字(单独的数字也不允许)组合均可用做<br>变量名：_all _b byte _coef _cons double float if in int long _n _N _pi _pred _rc _se _skip using with</p><p>基本要求如下：</p><ol><li>第一个字元可以是英文字母或, 但不能是数字；</li><li>最多只能包括32 个英文字母、数字或下划线；</li><li>由于STATA 保留了很多以“ _“开头的内部变量，所以最好不要用为第一个字元来定义变量。</li></ol><h1 id="命令语句"><a href="#命令语句" class="headerlink" title="命令语句"></a>命令语句</h1><h2 id="command"><a href="#command" class="headerlink" title="command"></a>command</h2><p><code>command  [=exp] [if exp] [in range] [weight] [, options]</code></p><p>注：[ ]表示可有可无的项,显然只有command 是必不可少的</p><blockquote><p>. cd d:&#x2F;stata9<br>. use auto, clear &#x2F;&#x2F;打开美国汽车数据文件auto.dta,后面的clear 表示先清除内<br>存中可能存在的数据集<br>. summarize &#x2F;*很多命令可单独使用，单独使用时，一般是对所有变量进<br>行操作，等价于后面加上代表所有变量的_all。 *&#x2F;<br>. summarize _all &#x2F;&#x2F;注意到该命令输出结果与上一个命令完全一样<br>. sum &#x2F;&#x2F;与前一命令等价，sum 为summarize 的略写<br>. su &#x2F;&#x2F; su 是summarize 的最简化略写，不能再简化为s<br>. s &#x2F;&#x2F;简写前提是不引起混淆。执行这个命令将出现错误信息</p></blockquote><h2 id="varlist"><a href="#varlist" class="headerlink" title="varlist"></a>varlist</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command [varlist] [=exp] [if exp] [in range] [weight] [, options]</span><br></pre></td></tr></table></figure><p><strong>varlist</strong> 表示一个变量，或者多个变量，多个变量之间用空格隔开。</p><p>. cd d:&#x2F;stata9<br>. use auto, clear</p><h2 id="by-varlist-分类操作"><a href="#by-varlist-分类操作" class="headerlink" title="by varlist 分类操作"></a>by varlist 分类操作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[by varlist:] command [varlist] [=exp] [if exp] [in range] [weight] [, options]</span><br></pre></td></tr></table></figure><blockquote><p>sort foreign &#x2F;&#x2F;按国产车和进口车排序<br>by foreign: sum price weight</p><p>注意必须先sort  foreign 这个变量 才能 by foreign先排序再分类</p></blockquote><h2 id="赋值及运算-x3D-exp"><a href="#赋值及运算-x3D-exp" class="headerlink" title="赋值及运算&#x3D;exp"></a>赋值及运算&#x3D;exp</h2><p>[by varlist:] command [varlist] [&#x3D;exp] [if exp] [in range] [weight] [, options]</p><blockquote><p>|或</p><p>&amp;和</p><p>&lt;&gt; 大于小于</p></blockquote><p><img src="http://i.loli.net/2021/11/19/WOaHTsRKbIZP6El.png" alt="image-20211119130118433"></p><p><img src="http://i.loli.net/2021/11/19/qd3D5kZU7xB9J18.png" alt="image-20211119130054370"></p><h2 id="范围筛选in-range"><a href="#范围筛选in-range" class="headerlink" title="范围筛选in range"></a>范围筛选in range</h2><p>[by varlist:] command [varlist] [&#x3D;exp] [if exp] [in range] [weight] [, options]</p><p><img src="http://i.loli.net/2021/11/19/BEXr7zLtZMbN5Sc.png" alt="image-20211119130637934"></p><h2 id="加权weight"><a href="#加权weight" class="headerlink" title="加权weight"></a>加权weight</h2><p><img src="http://i.loli.net/2021/11/19/evKSoCVgB5i2Im8.png" alt="image-20211119131434362"></p><p><img src="http://i.loli.net/2021/11/19/fbqdwMoXGsUF9Sv.png" alt="image-20211119131504745"></p><h2 id="其他可选项-options"><a href="#其他可选项-options" class="headerlink" title="其他可选项,options"></a>其他可选项,options</h2><p><img src="http://i.loli.net/2021/11/19/Cc8EuaVvHp5mdsS.png" alt="image-20211119131823415"></p><hr><blockquote><p>sum grade</p></blockquote><p> Variable |        Obs        Mean    Std. Dev.       Min        Max<br>————-+———————————————————<br>       grade |         50         6.3    2.178279          2         10</p><h3 id="detail可以显示细节的内容"><a href="#detail可以显示细节的内容" class="headerlink" title="detail可以显示细节的内容"></a>detail可以显示细节的内容</h3><p><img src="http://i.loli.net/2021/11/19/aHg1CJsxwkzMAPc.png" alt="image-20211119131653520"></p><img src="http://i.loli.net/2021/11/19/rcvOl1DhXMnabuA.png" alt="image-20211119132017578" style="zoom: 50%;" /><h3 id="sep-x-每x行添加一个横线"><a href="#sep-x-每x行添加一个横线" class="headerlink" title="sep(x)每x行添加一个横线"></a>sep(x)每x行添加一个横线</h3><p><img src="http://i.loli.net/2021/11/19/zKt5w49jubWaJ28.png" alt="image-20211119132221518"></p><h1 id="数据类型转化"><a href="#数据类型转化" class="headerlink" title="数据类型转化"></a>数据类型转化</h1><h2 id="字符型转化成数值型：destring"><a href="#字符型转化成数值型：destring" class="headerlink" title="字符型转化成数值型：destring"></a>字符型转化成数值型：destring</h2><h2 id="数值型转化为字符型：tostring"><a href="#数值型转化为字符型：tostring" class="headerlink" title="数值型转化为字符型：tostring"></a>数值型转化为字符型：tostring</h2><h1 id="数据显示格式-format"><a href="#数据显示格式-format" class="headerlink" title="数据显示格式:format"></a>数据显示格式:format</h1><h1 id="stata函数"><a href="#stata函数" class="headerlink" title="stata函数"></a>stata函数</h1><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211218172524770.png" alt="image-20211218172524770"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211218172536879.png" alt="image-20211218172536879"></p><h1 id="正态分布、F分布、卡方分布的概率密度和分位数"><a href="#正态分布、F分布、卡方分布的概率密度和分位数" class="headerlink" title="正态分布、F分布、卡方分布的概率密度和分位数"></a>正态分布、F分布、卡方分布的概率密度和分位数</h1><h2 id="normal-正态分布概率密度"><a href="#normal-正态分布概率密度" class="headerlink" title="normal 正态分布概率密度"></a>normal 正态分布概率密度</h2><p><img src="http://i.loli.net/2021/11/17/vO6nl8FpcMPWdEi.png" alt="image-20211117163539508"></p><h2 id="invnormal正态分布分位数"><a href="#invnormal正态分布分位数" class="headerlink" title="invnormal正态分布分位数"></a>invnormal正态分布分位数</h2><p><img src="http://i.loli.net/2021/11/17/goa4qenZrCbytFU.png" alt="image-20211117163519963"></p><h2 id="t分布概率密度"><a href="#t分布概率密度" class="headerlink" title="t分布概率密度"></a>t分布概率密度</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211222213518759.png" alt="image-20211222213518759"></p><h2 id="t分布分位数计算"><a href="#t分布分位数计算" class="headerlink" title="t分布分位数计算"></a>t分布分位数计算</h2><p><img src="http://i.loli.net/2021/11/17/fJFqUHuyiescBNw.png" alt="image-20211117163716423"></p><h2 id="卡方分布概率密度"><a href="#卡方分布概率密度" class="headerlink" title="卡方分布概率密度"></a>卡方分布概率密度</h2><p><img src="http://i.loli.net/2021/11/17/vHP7NupOe2zCba9.png" alt="image-20211117163827163"></p><h2 id="卡方分布分位数"><a href="#卡方分布分位数" class="headerlink" title="卡方分布分位数"></a>卡方分布分位数</h2><p><img src="http://i.loli.net/2021/11/17/aYFrkdpUbZjo1tG.png" alt="image-20211117163859129"></p><h2 id="F分布概率密度"><a href="#F分布概率密度" class="headerlink" title="F分布概率密度"></a>F分布概率密度</h2><p><img src="http://i.loli.net/2021/11/17/zkx6BrLKC3RiXp4.png" alt="image-20211117163918482"></p><h2 id="F分布分位数"><a href="#F分布分位数" class="headerlink" title="F分布分位数"></a>F分布分位数</h2><p><img src="http://i.loli.net/2021/11/17/PM8XYoUyvhJzfgp.png" alt="image-20211117163940569"></p><h1 id="区间估计（补充知识）"><a href="#区间估计（补充知识）" class="headerlink" title="区间估计（补充知识）"></a>区间估计（补充知识）</h1><p>一、区间估计</p><p>（一）命令</p><ol><li>直接命令为：cii 样本量  样本均数  样本标准差, level(99)</li></ol><p>例如，变量wage的描述统计如下：</p><p>Variable     Obs   Mean    Std. Dev.  </p><p>wage      526   5.896103   3.693086  </p><p>则可以运用cii命令直接构建其置信区间：</p><p>cii 526 5.9 3.7, level(99)</p><p>注意：level(99)中的99表示置信概率为99%，该值可以根据需要改变。</p><ol start="2"><li>原始数据的命令：ci 变量,level(99)</li></ol><p>如当前环境中有变量wage（直接建立或输入），则可以运用ci命令构造其置信区间：</p><p>ci wage,level(99</p><h1 id="假设检验（补充）"><a href="#假设检验（补充）" class="headerlink" title="假设检验（补充）"></a>假设检验（补充）</h1><p><strong>原假设</strong>一般是研究者怀疑的假设</p><p>备择假设是研究者想收集证据予以支持的的假设</p><h2 id="传统假设检验"><a href="#传统假设检验" class="headerlink" title="传统假设检验"></a>传统假设检验</h2><blockquote><p>一般不用</p></blockquote><h2 id="❗待完善-p值假设检验"><a href="#❗待完善-p值假设检验" class="headerlink" title="(❗待完善)p值假设检验"></a>(❗待完善)p值假设检验</h2><p>1.<strong>显著性水平p值：检验者可以容忍的犯第一类错误的概率</strong></p><p>2.<strong>第一类错误 ：H0真 但判断H0假</strong></p><blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215101600546.png" alt="image-20211215101600546"></p></blockquote><p>3.一般样本容量n&gt;30都认为是大样本，可以按正态分布计算</p><p>4.较小的p值是拒绝原假设H0的证据</p><p>（一）直接命令为：</p><blockquote><p>ttesti  样本量  样本均数 样本标准差  （待检验的总体均数）</p></blockquote><p>（二）原始数据的命令：</p><blockquote><p>ttest 变量名 &#x3D; （待检验的总体均数）使用说明：如当前环境中有变量wage（直接建立或输入），则可以运用ci命令构造其置信区间：</p></blockquote><p>ttest wage&#x3D;6</p><h1 id="变量分布形态和假设检验"><a href="#变量分布形态和假设检验" class="headerlink" title="变量分布形态和假设检验"></a>变量分布形态和假设检验</h1><h2 id="分布状况"><a href="#分布状况" class="headerlink" title="分布状况"></a>分布状况</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214225507399.png" alt="image-20211214225507399"></p><p>偏度</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214225815338.png" alt="image-20211214225815338"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214225904858.png" alt="image-20211214225904858"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214230016573.png" alt="image-20211214230016573"></p><blockquote><p>Skewness 偏度</p><p>Kurtosis 峰度</p><p>su wage,detail</p><p>tabstat wage,stat(count skewness  kurtosis )</p></blockquote><h2 id="假设检验"><a href="#假设检验" class="headerlink" title="假设检验"></a>假设检验</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215091947579.png" alt="image-20211215091947579"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215092055082.png" alt="image-20211215092055082"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215092107108.png" alt="image-20211215092107108"></p><blockquote><p>sktest wage aaa bb cc </p></blockquote><h3 id="参数假设检验"><a href="#参数假设检验" class="headerlink" title="参数假设检验"></a>参数假设检验</h3><p><img src="http://i.loli.net/2021/11/24/nZmc96BWvwH2oaY.png" alt="image-20211124114400154"></p><blockquote><p>sktest wage</p><p>skwilk wage</p></blockquote><p>H0：变量服从正态分布</p><p>H1：变量不服从正态分布</p><p>输入sktest wage&#x2F;skwilk可以得到pr(skewness)偏度、 pr(kurtosis)峰度、 prob&gt;chi2这个值很小的话就代表不符合原假设的正态分布</p><h3 id="非参数的假设检验"><a href="#非参数的假设检验" class="headerlink" title="非参数的假设检验"></a>非参数的假设检验</h3><blockquote><p>signrank before&#x3D;after</p><p>signtest before&#x3D;after</p></blockquote><h1 id="相关系数计算和检验"><a href="#相关系数计算和检验" class="headerlink" title="相关系数计算和检验"></a>相关系数计算和检验</h1><h2 id="相关性计算"><a href="#相关性计算" class="headerlink" title="相关性计算"></a>相关性计算</h2><blockquote><p>相关系数0.3-0.8是弱相关性</p><p>0.8以上强相关</p><p>0.3以下无相关性</p></blockquote><p><img src="http://i.loli.net/2021/11/24/57gmiMYorw1Sh8n.png" alt="image-20211124114954542"></p><p><img src="http://i.loli.net/2021/11/24/vwcIlQ1atuJ2KDV.png" alt="image-20211124120029771"></p><p>1.person</p><p><img src="http://i.loli.net/2021/11/24/IG1DxK7Coy9jHWJ.png" alt="image-20211124115459157"></p><p><img src="http://i.loli.net/2021/11/24/j4enxtZFGBhr6Mo.png" alt="image-20211124115015477"></p><blockquote><p>correlate a b c</p><p><img src="http://i.loli.net/2021/11/24/yapsKBwL6fFgSZI.png" alt="image-20211124115414303"></p></blockquote><blockquote><p>pwcorr a b c,sig star(0.05)</p></blockquote><p>2.spearman</p><p><img src="http://i.loli.net/2021/11/24/KYq4sQkm5iwIvWN.png" alt="image-20211124115547613"></p><blockquote><p>spearman a b c,stats(rho p)</p><p>rho：相关系数</p><p>p:假设检验</p></blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217090222175.png" alt="image-20211217090222175"></p><p>3.kendall</p><p><img src="http://i.loli.net/2021/11/24/JVlZ95MYtob13Ck.png" alt="image-20211124115820704"></p><blockquote><p>ktau wage  educ  tenure  exper,stats(taua taub p)</p></blockquote><h2 id="多变量分布检查（了解）"><a href="#多变量分布检查（了解）" class="headerlink" title="多变量分布检查（了解）"></a>多变量分布检查（了解）</h2><p>多变量联合正态分布</p><p><img src="http://i.loli.net/2021/11/24/BtjcpvDOA5NFgfd.png" alt="image-20211124120141737"></p><blockquote><p>mvtest normality a b,univariate</p></blockquote><p><img src="http://i.loli.net/2021/11/24/pIodY4klOLcRv7M.png" alt="image-20211124120333991"></p><p><img src="http://i.loli.net/2021/11/24/vVE6w2p9kP7eZ5N.png" alt="image-20211124120435599"></p><h1 id="单变量和多变量的统计分析"><a href="#单变量和多变量的统计分析" class="headerlink" title="单变量和多变量的统计分析"></a>单变量和多变量的统计分析</h1><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217091323820.png" alt="image-20211217091323820"></p><h2 id="单样本下总体均值的比较"><a href="#单样本下总体均值的比较" class="headerlink" title="单样本下总体均值的比较"></a>单样本下总体均值的比较</h2><p>单样本总体均值的比较是根据样本数据检验总体均值与某个特定数之间是否存在显著差异</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217093643351.png" alt="image-20211217093643351"></p><blockquote><p>ttesti  样本量  样本均数 样本标准差  （待检验的总体均数）</p></blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217140404624.png" alt="image-20211217140404624"></p><blockquote><p>signtest height&#x3D;115</p><p>signrank height&#x3D;115</p><p>❗如果差别比较大按signrank为主</p></blockquote><h2 id="参数型成组设计两样本总体均值的比较"><a href="#参数型成组设计两样本总体均值的比较" class="headerlink" title="参数型成组设计两样本总体均值的比较"></a>参数型成组设计两样本总体均值的比较</h2><blockquote><p>待检验数据符合正态分布</p></blockquote><p>样本数据：</p><table><thead><tr><th>jiaoqu</th><th>city</th></tr></thead><tbody><tr><td>108</td><td>110</td></tr><tr><td>112</td><td>123</td></tr><tr><td>129</td><td>109</td></tr><tr><td>131</td><td>130</td></tr><tr><td>118</td><td>125</td></tr><tr><td>121</td><td>120</td></tr><tr><td>115</td><td>119</td></tr><tr><td>110</td><td>118</td></tr><tr><td>124</td><td>115</td></tr><tr><td>120</td><td>121</td></tr><tr><td>116</td><td>117</td></tr><tr><td>120</td><td>125</td></tr></tbody></table><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217141437363.png" alt="image-20211217141437363"></p><p><strong>首先提出假设：</strong></p><p><strong>H0：城区和郊区男童身高相等</strong></p><p><strong>H1：城区和郊区男童身高不相等</strong></p><h3 id="第一步-需要先对每组变量进行正态分布的假设检验"><a href="#第一步-需要先对每组变量进行正态分布的假设检验" class="headerlink" title="第一步.需要先对每组变量进行正态分布的假设检验"></a>第一步.需要先对每组变量进行正态分布的假设检验</h3><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217141507518.png" alt="image-20211217141507518"></p><blockquote><p>swilk  jiaoqu city</p><p>sktest jiaoqu city</p><p>根据p值得大小判断是否符合正态分布越接近1说明越符合正态分布</p></blockquote><h3 id="第二步-方差齐性检验"><a href="#第二步-方差齐性检验" class="headerlink" title="第二步.方差齐性检验"></a>第二步.方差齐性检验</h3><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217142641591.png" alt="image-20211217142641591"></p><blockquote><p>H0：两组数据方差相等</p><p>H1：两组数据方差不相等</p><p>sdtest jiaoqu&#x3D;&#x3D;city</p></blockquote><h3 id="第三步-前两步都满足的情况下"><a href="#第三步-前两步都满足的情况下" class="headerlink" title="第三步.前两步都满足的情况下"></a>第三步.前两步都满足的情况下</h3><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217143521426.png" alt="image-20211217143521426"></p><blockquote><p>ttest jiaoqu&#x3D;&#x3D;city</p></blockquote><h2 id="非参数性总体均值比较"><a href="#非参数性总体均值比较" class="headerlink" title="非参数性总体均值比较"></a>非参数性总体均值比较</h2><blockquote><p> 如果参数均值比较第一步正态检验 不通过 就用非参数型</p><p>同样要进行方差齐性检验sdtest</p></blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217145457572.png" alt="image-20211217145457572"></p><blockquote><p>signrank before&#x3D;after</p><p>signtest before&#x3D;after</p></blockquote><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217150839758.png" alt="image-20211217150839758"></p><h2 id="多个独立样本的均值（中位数）的比较"><a href="#多个独立样本的均值（中位数）的比较" class="headerlink" title="多个独立样本的均值（中位数）的比较"></a>多个独立样本的均值（中位数）的比较</h2><p>参数的看方差分析</p><p>非参数的：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217153631098.png" alt="image-20211217153631098"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217154418408.png" alt="image-20211217154418408"></p><blockquote><p>kwallis wage,by(numdep)</p></blockquote><h1 id="方差分析-单因素（补充）"><a href="#方差分析-单因素（补充）" class="headerlink" title="方差分析-单因素（补充）"></a>方差分析-单因素（补充）</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><p>检验多个总体均值是否相等</p><p>自变量：定类2个及以上</p><p>因变量：连续变量</p><p>主要用于随机化试验设计</p></blockquote><h2 id="提假设"><a href="#提假设" class="headerlink" title="提假设"></a>提假设</h2><p><strong>H0：u1&#x3D;u2&#x3D;u3&#x3D;u4</strong></p><p><strong>H1:u1,u2,u3,u4不全相等</strong></p><p>总变动SST（误差）：所有样本观测值与总平均值的偏离的 平方的和</p><blockquote><p>1.总误差产生的原因：</p><p>​组内变动SSE——随机误差 &#x3D;  组内样本与组平均之差的平方和</p><p>​组间变动SSA——系统误差 &#x3D; <strong>每组平均数</strong>与<strong>总平均</strong>之差的<strong>平方和</strong></p></blockquote><h2 id="方差分析的基本思想和原理——方差的比较"><a href="#方差分析的基本思想和原理——方差的比较" class="headerlink" title="方差分析的基本思想和原理——方差的比较"></a>方差分析的基本思想和原理——方差的比较</h2><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215110640698.png" alt="image-20211215110640698"></p><h2 id="计算步骤"><a href="#计算步骤" class="headerlink" title="计算步骤"></a>计算步骤</h2><p>计算组内平均</p><p>计算组间平均</p><p>计算总平均</p><p>就算总变动SST</p><p>计算组内变动SSE和组间变动SSA</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/4EA31A7A7FCB8B3F14AAD9E1190797A2.jpg" alt="img"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/EC7E4802CFE94DC74E2AF57C94A06E66.jpg" alt="img"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211217105654233.png" alt="image-20211217105654233"></p><h2 id="stata-处理方法"><a href="#stata-处理方法" class="headerlink" title="stata 处理方法"></a>stata 处理方法</h2><p>输入格式：</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211215113813384.png" alt="image-20211215113813384"></p><blockquote><p> oneway sale colour,tabulate</p><p>anova sale colour</p><p>partial ss 组间变动</p><p>df分子自由度 F(3,16,10.46)</p><p>MS &#x3D;partial ss&#x2F;df</p><p>F 检验量</p></blockquote><h1 id="方差分析-双因素"><a href="#方差分析-双因素" class="headerlink" title="方差分析-双因素"></a>方差分析-双因素</h1><p>residual误差项</p><h1 id="stata绘图"><a href="#stata绘图" class="headerlink" title="stata绘图"></a>stata绘图</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>graph-command (plot-command, plot-options) (plot-command , plot-options) , graph-options</p><p>或者</p><p>graph-command plot-command,plot-options || plot-command , plot-options || , graph-options</p><blockquote><p>graph-command定义图的类型，plot-command 定义曲线类型,同一个图中如果有多条曲线可以用括号分开，也可以用“||”分开，曲线有其自身的选项，而整个图也有其选项。例如twoway为graph-command中的命令之一，而scatter为plot-command中的命令之一。</p></blockquote><p>STATA 提供各种曲线类型，包括点（scatter）、线（line）、面（area），直方图（histogram）、条形图（bar）、饼图（pie）、函数曲线（function）以及矩阵图（matrix）等。对时间序列数据有以ts 开头的一系列特殊命令，如tsline。还有一类是对双变量的回归拟合图（lfit、qfit 、lowess）等。</p><h2 id="绘图常用命令"><a href="#绘图常用命令" class="headerlink" title="绘图常用命令"></a>绘图常用命令</h2><h3 id="标题项-title-xxx"><a href="#标题项-title-xxx" class="headerlink" title="标题项: title(xxx)"></a>标题项: title(xxx)</h3><h3 id="图的副标题：subtitle-xxx"><a href="#图的副标题：subtitle-xxx" class="headerlink" title="图的副标题：subtitle(xxx)"></a>图的副标题：subtitle(xxx)</h3><h3 id="坐标轴格式"><a href="#坐标轴格式" class="headerlink" title="坐标轴格式"></a>坐标轴格式</h3><p>1.默认有坐标轴、刻度线</p><p>2.无坐标轴格式</p><blockquote><p>yscale(off)<br>xscale(off)<br>plotregion(style(none))</p></blockquote><p>3.无坐标轴，有刻度格式</p><blockquote><p>plotregion(style(none))<br>yscale(noline)<br>xscale(noline)</p></blockquote><p>4.双坐标轴格式</p><blockquote><p>line rainfall yield year &#x2F;&#x2F;该命令等价于<br>tw (line rainfall year)<br>(line yield year)</p><p><img src="http://i.loli.net/2021/11/24/kSXRjAVt78G4bzD.png" alt="image-20211124113400944"></p></blockquote><p>5.坐标轴标题</p><p>纵坐标标题：ytitle()<br>横坐标标题：xtitle()</p><p>6.坐标轴刻度</p><p>左纵坐标刻度：ytick()<br>下横坐标刻度：xtick()</p><p>7.任意水平线与垂直线：yline()与xline()</p><p>8.图例legend（）</p><p>legend(off)</p><p>定制图例：</p><p><img src="http://i.loli.net/2021/11/24/cU8Gtrn1dBRabTi.png" alt="image-20211124113840044"></p><p>9.脚注：note()</p><h2 id="常用的图"><a href="#常用的图" class="headerlink" title="常用的图"></a>常用的图</h2><blockquote><p>我会用stata作图，替换工具很多比如spss</p></blockquote><pre><code>    Command               Description    --------------------------------------------------------------------    histogram             histograms直方图,经验分布图    lfit                  拟合曲线    symplot               symmetry plots    quantile              quantile plots    qnorm                 quantile-normal plots    pnorm                 normal probability plots, standardized    qchi                  chi-squared quantile plots    pchi                  chi-squared probability plots    qqplot                quantile-quantile plots    gladder               ladder-of-powers plots    qladder               ladder-of-powers quantiles    spikeplot             spike plots and rootograms    dotplot               means or medians by group    sunflower             density-distribution sunflower plots    --------------------------------------------------------------------</code></pre><blockquote><p>多个图  twoway (画图命令1) (画图命令2) by(如果要分类)</p><p>单个图  histogram  xxx</p></blockquote><h3 id="经验分布图"><a href="#经验分布图" class="headerlink" title="经验分布图"></a>经验分布图</h3><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214230604952.png" alt="image-20211214230604952"></p><blockquote><p>histogram xxx,width(0.5)</p></blockquote><h1 id="描述性统计的计算"><a href="#描述性统计的计算" class="headerlink" title="描述性统计的计算"></a>描述性统计的计算</h1><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214215346206.png" alt="image-20211214215346206"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214215427704.png" alt="image-20211214215427704"></p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214215533969.png" alt="image-20211214215533969"></p><p>分位数（四分位数等）、标准差、极差</p><blockquote><p>su wage,detail</p></blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/Snipaste_2021-12-14_22-32-37-16394930625701.png" alt="Snipaste_2021-12-14_22-32-37"></p><p>算术平均数、集合平均数、调和平均数</p><blockquote><p>ameans wage</p></blockquote><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214224132600.png" alt="image-20211214224132600"></p><p>离散趋势度量：</p><blockquote><p>tabstat wage,stat(range variance sd iqr cv)</p><p>range极差</p><p>variance方差</p><p>sd标准差</p><p>iqr四分位差 75%分为数-25%分位数</p><p>cv 离散系数 &#x3D; 标准差Std. Dev.&#x2F;均值mean</p></blockquote><p>通过help tabstat查看更多</p><p><img src="http://rb1ss3iyh.hn-bkt.clouddn.com/image-20211214224149471.png" alt="image-20211214224149471"></p><p>变量保存 </p><p>return ls</p><p>su sale if colour&#x3D;&#x3D;1</p>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 笔记 </tag>
            
            <tag> stata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python二级</title>
      <link href="/blog_new/2022/09/04/python%E4%BA%8C%E7%BA%A7/"/>
      <url>/blog_new/2022/09/04/python%E4%BA%8C%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote><p>最新文档地址：<a href="https://zdfx6jzjhp.feishu.cn/docs/doccnMUPH5koZ2yeCgchk6sBg5e">https://zdfx6jzjhp.feishu.cn/docs/doccnMUPH5koZ2yeCgchk6sBg5e</a></p><p>@all 特别说明所有内容均是个人学习笔记，请勿其他用途。</p><p>题目选择上比较简单的题没有做上去</p></blockquote><hr><h1 id="公共基础题"><a href="#公共基础题" class="headerlink" title="公共基础题"></a>公共基础题</h1><blockquote><p>资料来源：<a href="https://ishare20.net/apps/ncre/#/">首页 (ishare20.net)</a></p></blockquote><blockquote><p>下载（扫描增强版）：<a href="https://www.123pan.com/s/UqzA-LHdr3">https://www.123pan.com/s/UqzA-LHdr3</a> 提取码:9999</p></blockquote><h2 id="指令周期、执行时序、执行速度、指令周期"><a href="#指令周期、执行时序、执行速度、指令周期" class="headerlink" title="指令周期、执行时序、执行速度、指令周期"></a>指令周期、执行时序、执行速度、指令周期</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220306212614669.png" alt="image-20220306212614669"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/%E6%8B%BC%E5%9B%BE-%E6%89%AB%E6%8F%8F%E5%85%A8%E8%83%BD%E7%8E%8B%202022-03-08%2009.37.jpg" alt="拼图-扫描全能王 2022-03-08 09.37"></p></blockquote><h2 id="顺序程序、并发程序"><a href="#顺序程序、并发程序" class="headerlink" title="顺序程序、并发程序"></a>顺序程序、并发程序</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220306212937411.png" alt="image-20220306212937411"></p><blockquote><p>1.顺序程序设计，是指所设计的程序具有以下 3个特点：</p><p>①程序所规定的动作严格地按顺序执行，即每个动作都必须在上一个动作执行完成以后才</p><p>开始。或者说，每个动作都必须在下一个操作开始执行之前结束。这就是程序的<strong>顺序性</strong>。</p><p>②程序一旦开始执行，其计算结果不受外界因素的影响。也就是说，顺序程序的静态文本</p><p>与其计算过程有着一一对应的关系。这就是顺序程序的<strong>封闭性</strong>。</p><p>③在程序运行过程中，任何两个动作之间的停顿，对程序的计算结果不发生任何影响，即程</p><p>序的计算结果与它的运行速度无关。只要给定相同的初始条件，并给以同样的输入，重复执行同</p><p>一个程序一定会得到相同的结果。这就是顺序程序的<strong>可再现性</strong>。</p><p>即顺序程序所具有的顺序性、封闭性和可再现性的特点，使得程序设计者能够控制程序执行</p><p>的过程（包括执行顺序 、执行时间），对程序执行的中间结果和状态可以预先估计，这样就可以方</p><p>便地进行程序的测试和调试。</p><p>为了充分利用系统资源,提高系统的效率,除了在硬件上采用通道技术、中断技术等措施,使设备间实现并行操作外,还要从软件上采取相应的措施,使多个程序能<strong>并发执行</strong>。</p><p>2.所谓多个程序并发执行（concurrent execution），是指一组在逻辑上互相独立的程序或程序段在执行过程中，其执行时间在客观上互相重叠，即一个程序段的执行尚未结束，另一个程序段的 执行已经开始的这种执行方式。只有在多处理机系统中才可能做到物理上的真正并行，而在单处理机的系统中，这些程序只能在逻辑上或在宏观上做到并行执行。也就是说，在单处理机的情 况下、并发执行是指多个程序的运行在时间上是重迭的，而并不是说这些程序在某一时刻同时占用处理机在运行。 </p><p>多个程序并发执行是多道程序系统的特点。显然，并发程序的执行情况与顺序程序的执行 情况是很不相同的，它比顺序程序的执行情况要复杂得多，程序设计时要考虑的因素也多得多。考虑各种并行性的程序设计方法称为并发程序设计。</p><p>并发程序在执行过程中有以下几个特点：</p><p>（1）并发程序<strong>没有封闭性</strong></p><p>顺序程序具有封闭性，程序执行后的输出结果与时间无关。但是，在并发程序的执行过程</p><p>中，某个程序中的变量可能被另外程序的执行所改变;或者某个程序中的变量在用另外一个程序</p><p>输出时，不同时刻其输出值可能是不一样的。即并发程序的输出结果与各程序执行的相对速度</p><p>有关，失去了程序的封闭性这个特点。</p><p>例1.1 设有两个并发程序 A 和 B互相独立地运行，如图1.8所示。当程序 A执行到I时、</p><p>由于某个原因将控制转到执行程序 B，由程序 B打印n 的值为0，而后当程序 B运行到I，时，又</p><p>将控制转到执行程序 A，接着I，之后继续执行。</p><p>现假设程序 B 运行的速度慢一些，如果在程序 A运行到I、时，才将控制转到执行程序 B（如</p><p>图中虚线所示），此时由程序 B打印的 n 值为1，而不是0。</p><p>从这个例子可以看出，程序 B的运行结果与它们的相对运行速度有关，这就说明程序没有</p><p>封闭性。因为程序的执行结果与时间有关，因此，结果是不可再现的，即使输入相同的初始条件，</p><p>也可能得到不同的结果，这称为”结果的不确定性”。</p><p>（2）<strong>程序与其执行过程不是一一对应的关系</strong></p><p>在顺序程序设计中，程序的封闭性决定了程序与其执行过程是完全对应的，程序的执行路</p><p>径、执行时间和所执行的操作都可以从程序中反映出来。但在多道程序并发执行的情况下，程序</p><p>的执行过程由当时的系统环境与条件所决定，程序与其执行过程就不再有一一对应的关系。当</p><p>多个执行过程共享某个程序时，它们都可以调用这个程序，调用一次即对应一个执行过程，也就</p><p>是说，这个共享的程序对应多个执行过程。</p><p>（3）程序并发执行<strong>可以互相制约</strong></p><p>并发程序的执行过程是复杂的,这是因为它们之间不但可能有互为因果的直接制约关系,而且还可能由于共享某些资源或过程而具有间接的互相制约关系。</p></blockquote><h2 id="算法的时间和空间复杂度"><a href="#算法的时间和空间复杂度" class="headerlink" title="算法的时间和空间复杂度"></a>算法的时间和空间复杂度</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220306220618987.png" alt="image-20220306220618987"></p><blockquote><p>时间复杂度指的是<strong>计算工作量</strong></p><p>空间复杂度是指<strong>存储空间</strong></p></blockquote><h2 id="×-非线性结构一定不能采用顺序存储结构"><a href="#×-非线性结构一定不能采用顺序存储结构" class="headerlink" title="× 非线性结构一定不能采用顺序存储结构"></a>× 非线性结构一定不能采用顺序存储结构</h2><p>二叉树就是非线性但是可以顺序储存</p><p><img src="https://s2.loli.net/2022/03/10/B6SvNqd1DFjpMRX.png" alt="image-20220310215219408"></p><h2 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308135542379.png" alt="image-20220308135542379"></p><blockquote><p>完全二叉树除了最后一层都是满的</p></blockquote><h2 id="二叉树节点计算"><a href="#二叉树节点计算" class="headerlink" title="二叉树节点计算"></a>二叉树节点计算</h2><blockquote><p> <strong>总节点数&#x3D;所有度数节点数*度数+1</strong></p><p> 总结点数&#x3D;所有度下节点数之和</p></blockquote><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/63BF236C0BB158DAD440806CDDB91805.jpg" alt="img" style="zoom: 33%;" /><p><img src="https://s2.loli.net/2022/03/11/FncabhygswW1XRf.png" alt="image-20220311213956071"></p><blockquote><p>设度为0的节点&#x3D;x个</p><p>度为2的节点&#x3D;x+1</p><p>由题意度为0的几点有1个，很好理解因为节点有偶数个(完全二叉树)，根节点要和某个节点拼凑陈偶数</p><p>x+x+1+1&#x3D;2n</p><p>x&#x3D;n-1</p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220307214057327.png" alt="image-20220307214057327"></p><blockquote><p><strong>总节点数&#x3D;所有节点数的度数之和+1</strong></p></blockquote><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220308104158910.png" alt="image-20220308104158910"></p><blockquote><p>利用性质3 </p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308130845446.png" alt="image-20220308130845446"></p><h2 id="结构化程序（顺序、选择、循环结构）"><a href="#结构化程序（顺序、选择、循环结构）" class="headerlink" title="结构化程序（顺序、选择、循环结构）"></a>结构化程序（顺序、选择、循环结构）</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308094442561.png" alt="image-20220308094442561"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220307215346569.png" alt="image-20220307215346569"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/9B7D85EC4CA152B2520DC2B1A6CB2C2A.jpg" alt="img"></p><p>😒理解维护、效率</p></blockquote><h2 id="计算机系统"><a href="#计算机系统" class="headerlink" title="计算机系统"></a>计算机系统</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220307215942307.png" alt="image-20220307215942307"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/IMG_20220307_215841_edit_9141802116833.jpg.jpg" alt="IMG_20220307_215841_edit_9141802116833.jpg"></p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308094625857.png" alt="image-20220308094625857"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/CDD35392DD8B555066B2051935F0B399.jpg" alt="img"></p></blockquote><h2 id="E-R模型"><a href="#E-R模型" class="headerlink" title="E-R模型"></a>E-R模型</h2><blockquote><p> <strong>E-R模型是一种概念模型</strong></p><p> ⭐<strong>数据库概念设计阶段</strong>得到的是<strong>E-R模型</strong></p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220307220336025.png" alt="image-20220307220336025"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/74875F055F190796F3B9295E94F589C4.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/20DB9B1228E8595495D19C9448BAC0CA.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/27BA599A03305BC9EB9D8E19474A1D70.jpg" alt="img"></p></blockquote><p><img src="https://s2.loli.net/2022/03/11/VjPYkcGvI5TRu4p.png" alt="image-20220311220451885"></p><h2 id="计算机硬件"><a href="#计算机硬件" class="headerlink" title="计算机硬件"></a>计算机硬件</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308092023385.png" alt="image-20220308092023385"></p><blockquote><p>储存器的价格：</p><p>寄存器&gt;缓存&gt;主储存器（就是<strong>内储存器</strong>通常所说的<strong>内存 <strong>RAM ROM）&gt;辅助储存器（硬盘就是</strong>外部储存器</strong>）</p><p>速度：</p><p>寄存器&gt;缓存&gt;主储存器（就是<strong>内储存器</strong>通常所说的<strong>内存 <strong>RAM ROM）&gt;辅助储存器（硬盘就是</strong>外部储存器</strong>）</p></blockquote><p><strong>外存</strong>（辅助储存器）数据要先读入<strong>内存（主储存器）</strong>然后才能被CPU读取</p><h2 id="前中后序遍历"><a href="#前中后序遍历" class="headerlink" title="前中后序遍历"></a>前中后序遍历</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308094243196.png" alt="image-20220308094243196"></p><blockquote><p>前序遍历第一个为A那么根节点为A</p></blockquote><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220308113611637.png" alt="image-20220308113611637"></p><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220315211420587.png" alt="image-20220315211420587"></p><h2 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308095140545.png" alt="image-20220308095140545"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308095901333.png" alt="image-20220308095901333"></p><blockquote><p>列称为属性、一行成为元组、关系模型（关系模式）是二维表</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/4B1CC5FCCA161A2E6EFDE97C08D8388F.jpg" alt="img"></p></blockquote><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308100058279.png" alt="image-20220308100058279"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/D39A1FC5DDB686D8D160CC64F2BB1458.jpg" alt="img"></p></blockquote><h2 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308100307003.png" alt="image-20220308100307003"></p><h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308100637664.png" alt="image-20220308100637664"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/3B8EB9027E268BFE455640EE271064AA.jpg" alt="img"></p></blockquote><h2 id="栈-列表-循环队列-元素的计算"><a href="#栈-列表-循环队列-元素的计算" class="headerlink" title="栈\列表\循环队列 元素的计算"></a>栈\列表\循环队列 元素的计算</h2><p>🙌 列表元素的计算适用于循环队列</p><blockquote><p><img src="https://gitee.com/Hutters//imgs/raw/master/BAAF9FCA9168D160817E85AA28C8A85A.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/983DBBE09CACA3CBCC56128237911845.jpg" alt="img"></p></blockquote><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220315211155311.png" alt="image-20220315211155311"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308102150603.png" alt="image-20220308102150603"></p><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308104043091.png" alt="image-20220308104043091"></p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308124038979.png" alt="image-20220308124038979"></p><blockquote><p> 🙌 列表元素的计算适用于循环队列</p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308130616359.png" alt="image-20220308130616359"></p><h2 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h2><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220308114113079.png" alt="image-20220308114113079"></p><blockquote><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220308114228732.png" alt="image-20220308114228732"></p><p>B和D做等值运算</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/F588543BAD57CFD90B941A359DE87F94.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/C28FEA8422A18EE19B5AC729F38DA61F.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/E76DF21D7FDA293FD288EFF1EB4F48C6.jpg" alt="img"></p></blockquote><h2 id="原码、补码、反码"><a href="#原码、补码、反码" class="headerlink" title="原码、补码、反码"></a>原码、补码、反码</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308122431606.png" alt="image-20220308122431606"></p><h2 id="查找和排序（顺序、二分法…"><a href="#查找和排序（顺序、二分法…" class="headerlink" title="查找和排序（顺序、二分法…)"></a>查找和排序（顺序、二分法…)</h2><blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/CF9914F4B95A49E23D02741241481418.jpg" alt="img"></p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308123245582.png" alt="image-20220308123245582"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308130355513.png" alt="image-20220308130355513"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308131227521.png" alt="image-20220308131227521"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308135322817.png" alt="image-20220308135322817"></p><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220315210916614.png" alt="image-20220315210916614"></p><h2 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308125041571.png" alt="image-20220308125041571"></p><blockquote><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/061B6EBA3988C2E5593CE42B3BDBE5CD.jpg" alt="img" style="zoom: 80%;" /></blockquote><h2 id="软件测试"><a href="#软件测试" class="headerlink" title="软件测试"></a>软件测试</h2><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220316132039134.png" alt="image-20220316132039134"></p><blockquote><p>测试 发现错误</p><p>调试 改正错误</p></blockquote><h2 id="数据流程图"><a href="#数据流程图" class="headerlink" title="数据流程图"></a>数据流程图</h2><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220316131950832.png" alt="image-20220316131950832"></p><h2 id="缓冲"><a href="#缓冲" class="headerlink" title="缓冲"></a>缓冲</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308130231365.png" alt="image-20220308130231365"></p><h2 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/5AAED1B1F7807EB1EC3968B2CF813685.jpg" alt="img"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308134657544.png" alt="image-20220308134657544"></p><h2 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h2><blockquote><p>1NF不可再分</p><p>2NF完全依赖主键</p><p>3NF无传递依赖</p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308134538934.png" alt="image-20220308134538934"></p><blockquote><p>课程名可以再分</p></blockquote><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220317214357097.png" alt="image-20220317214357097"></p><blockquote><p>教师地址由教师名决定（非主键）</p></blockquote><h2 id="软件结构"><a href="#软件结构" class="headerlink" title="软件结构"></a>软件结构</h2><p><img src="https://s2.loli.net/2022/03/10/YXtWzI2M6Fw7QsO.jpg" alt="拼图-扫描全能王 2022-03-10 21.32_1"></p><p><img src="https://s2.loli.net/2022/03/11/GnSFibUTBwtNIMe.png" alt="image-20220311220306070"></p><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p><img src="https://s2.loli.net/2022/03/10/Ebe4kQ7LBHxCmOY.png" alt="image-20220310213231487"></p><h2 id="关系模型-1"><a href="#关系模型-1" class="headerlink" title="关系模型"></a>关系模型</h2><blockquote><p>“节” “操”约束</p></blockquote><p><img src="https://s2.loli.net/2022/03/10/ubEJteci5lC1Mpw.png" alt="image-20220310214015402"></p><p><img src="https://gitee.com/Hutters//imgs/raw/master/image-20220315211901656.png" alt="image-20220315211901656"></p><blockquote><p>多对一</p></blockquote><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p><img src="https://s2.loli.net/2022/03/10/c587ZorfKzpAIl2.png" alt="image-20220310214816252"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308122526372.png" alt="image-20220308122526372"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220308134223953.png" alt="image-20220308134223953"></p><blockquote><p>这个题有瑕疵，一本书当然只能由一个人借阅</p><p>按他的意思是：图书馆《莎士比亚》有两本，这两本可以有两个人借阅</p></blockquote><hr><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><p>Python进制表示方法</p><blockquote><p>记忆👍2 8 16 box</p></blockquote><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220306213557164.png" alt="image-20220306213557164"></p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/image-20220306212316716.png" alt="image-20220306212316716"></p><h1 id="幂乘除模整（运算顺序）"><a href="#幂乘除模整（运算顺序）" class="headerlink" title="幂乘除模整（运算顺序）"></a>幂乘除模整（运算顺序）</h1><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/62ea31225bd443c5a4bb58fade73d1ce.jpeg" alt="62ea31225bd443c5a4bb58fade73d1ce"></p><p>取模 % 余数</p><p>取整 &#x2F;&#x2F; </p><p>例如：</p><p><img src="https://gitee.com/Hutters/imgs/raw/master/imgs/e3cbfb2d-6b3c-4b93-8cb1-9e644f73c5fc.jpg" alt="e3cbfb2d-6b3c-4b93-8cb1-9e644f73c5fc"></p><h1 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h1><h2 id="进制转换-1"><a href="#进制转换-1" class="headerlink" title="进制转换"></a>进制转换</h2><p><a href="https://www.runoob.com/python/att-string-format.html">Python format 格式化函数 | 菜鸟教程 (runoob.com)</a></p><blockquote><p><strong>^</strong>, <strong>&lt;**, **&gt;</strong> 分别是居中、左对齐、右对齐，后面带宽度， <strong>:</strong> 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。</p><p><strong>+</strong> 表示在正数前显示 **+**，负数前显示 **-**； （空格）表示在正数前加空格</p><p>b、d、o、X（X大写） 分别是二进制、十进制、八进制、十六进制。</p></blockquote><blockquote><p>format的顺序 填充 对齐 位数 进制</p></blockquote><p><img src="https://s2.loli.net/2022/03/15/LZkWFEfChx6V9dJ.png" alt="image-20220315145103392"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>(<span class="string">&quot;请输入一个十进制数：&quot;</span>)</span><br><span class="line">num = <span class="built_in">int</span>(s)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换成二进制数是：&#123;:b&#125;&quot;</span>.<span class="built_in">format</span>(num))</span><br></pre></td></tr></table></figure><h2 id="turtle绘图"><a href="#turtle绘图" class="headerlink" title="turtle绘图"></a>turtle绘图</h2><p>太阳花 10度</p><p>正n边形  （n-2）*180&#x2F;n</p><p><img src="https://s2.loli.net/2022/03/15/qCJ7ZuFxdROQaSB.png" alt="image-20220315152314222"></p><p>（12-2）*180 &#x2F;12&#x3D;150</p><h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><p>upper() 大写</p><p>lower() 小写</p><p>title() 首字母大写</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 计算机二级 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office技巧合集</title>
      <link href="/blog_new/2022/09/04/Office%E6%8A%80%E5%B7%A7/"/>
      <url>/blog_new/2022/09/04/Office%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="word"><a href="#word" class="headerlink" title="word:"></a>word:</h1><p><a href="https://zdfx6jzjhp.feishu.cn/docs/doccnuwKDVmFJfZgiJUbKOjpfMc?from=from_copylink">https://zdfx6jzjhp.feishu.cn/docs/doccnuwKDVmFJfZgiJUbKOjpfMc?from=from_copylink</a></p><h1 id="excel"><a href="#excel" class="headerlink" title="excel:"></a>excel:</h1><p><a href="https://zdfx6jzjhp.feishu.cn/docs/doccnv1ZGmuHJtTEFwWcudsCflY?from=from_copylink">https://zdfx6jzjhp.feishu.cn/docs/doccnv1ZGmuHJtTEFwWcudsCflY?from=from_copylink</a></p><h1 id="ppt"><a href="#ppt" class="headerlink" title="ppt:"></a>ppt:</h1>]]></content>
      
      
      <categories>
          
          <category> office技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog_new/2022/09/04/hello-world/"/>
      <url>/blog_new/2022/09/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本</title>
      <link href="/blog_new/2022/09/04/bat%E8%84%9A%E6%9C%AC/"/>
      <url>/blog_new/2022/09/04/bat%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="关于bat"><a href="#关于bat" class="headerlink" title="关于bat"></a>关于bat</h3><p>  bat是Windows平台下的一种脚本语言，类似于Linux平台下是shell。下面只是举几个简单的例子，点到为止就好，更多关于bat脚本的语法可以查看<a href="https://en.wikibooks.org/wiki/Windows_Batch_Scripting">这里</a>。</p><table><thead><tr><th align="left">语法</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">echo</td><td align="left">表示打印该命令后的字符，如echo hello执行后会打印“hello”</td></tr><tr><td align="left">echo off</td><td align="left">表示在此语句后所有运行的命令都不显示命令本身 ，但本身会显示</td></tr><tr><td align="left">@</td><td align="left">与echo off相象，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行（只能影响当前行）</td></tr><tr><td align="left">@echo off</td><td align="left">组合上两个语法，表示不显示后续执行命令及当前命令</td></tr><tr><td align="left">dir c:<em>.</em> &gt;a.txt</td><td align="left">将c盘文件列表写入a.txt</td></tr><tr><td align="left">call</td><td align="left">用于调用另一个批处理命令或文件（如果不用call而直接调用别的批处理文件，那么执行完那个批处理文件后将无法返回当前文件并执行当前文件的后续命令）</td></tr><tr><td align="left">call c:\ucdos\ucdos.bat</td><td align="left">调用ucdos.bat脚本</td></tr><tr><td align="left">pause</td><td align="left">暂停批处理的执行并在屏幕上显示Press any key to continue…的提示，等待用户按任意键后继续</td></tr><tr><td align="left">rem</td><td align="left">用于注释，也可以用 ::代替</td></tr><tr><td align="left">start</td><td align="left">调起另外一个窗口执行当前行命令</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> bat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aidlearning</title>
      <link href="/blog_new/2022/09/04/aidlearning%E4%BD%BF%E7%94%A8/"/>
      <url>/blog_new/2022/09/04/aidlearning%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p>百度</p><p><img src="https://s2.loli.net/2022/04/28/Gu5iY28sFVc7OLx.png" alt="image-20211217213256172"></p><h1 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h1><p>cat &#x2F;etc&#x2F;issue</p><p>debian 10系统</p><p><img src="https://s2.loli.net/2022/04/28/xrvSPkQmgAtMflp.png" alt="image-20211217220920282"></p><h1 id="安装yum"><a href="#安装yum" class="headerlink" title="安装yum"></a>安装yum</h1><p>apt-get install yum</p><blockquote><p>用于安装一些库，似乎不适合aidlux</p></blockquote><h1 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h1><p>DEBIAN系统的定时和其他几个略有区别</p><p>安装：apt-get install cron<br>启动：cron start<br>重启：cron restart<br>停止： cron stop<br>检查状态：cron status<br>查询cron可用的命令：cron<br>检查Cronta工具是否安装：crontab -l</p><p>查看全部定时任务<br>crontab -l</p><p>设置定时任务<br>crontab -e</p><blockquote><p>按键盘<strong>i</strong>进编辑模式 </p><p>:wq保存退出</p></blockquote><p>定时任务的写法注意<br>*&#x2F;1 * * * * python &#x2F;py&#x2F; test.py(这样写运行不了)</p><blockquote><p> &#x2F;1 * * * * cd &#x2F;py;python test.py</p></blockquote><h1 id="文件解压"><a href="#文件解压" class="headerlink" title="文件解压"></a>文件解压</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装zip</span><br><span class="line">apt install <span class="operator">-</span>y zip</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/694596467634">Debian下的压缩 (zip) 解压缩 (unzip) 命令 - 简书 (jianshu.com)</a></p><h1 id="安装chromium运行python-selenium"><a href="#安装chromium运行python-selenium" class="headerlink" title="安装chromium运行python selenium"></a>安装chromium运行python selenium</h1><p>系统商店安装</p><p><img src="https://s2.loli.net/2022/04/28/8QGrdJNmP2v5OnU.png" alt="image-20211218143948950"></p><p>查看版本</p><blockquote><p>chromium –version</p></blockquote><p><img src="https://s2.loli.net/2022/04/28/vIBXTVpOsEmdaF8.png" alt="image-20211218144736674"></p><p>下载对应版本的chromedriver</p><p><a href="https://npm.taobao.org/mirrors/chromedriver/">ChromeDriver Mirror (taobao.org)</a></p><p>如遇到权限问题：</p><blockquote><p>chmod -R 777 chromedriver</p></blockquote><p>🚩提醒：不支持图形化界面</p><p><img src="https://s2.loli.net/2022/04/28/FrU7oxbDdRtNqca.png" alt="image-20211218144158726"></p><p>test.py的内容运行后就会在文件夹看到截图123.png：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line">opts = Options()</span><br><span class="line">opts.add_argument(<span class="string">&#x27;--no-sandbox&#x27;</span>)</span><br><span class="line">opts.add_argument(<span class="string">&quot;--disable-extensions&quot;</span>)</span><br><span class="line">opts.add_argument(<span class="string">&quot;--headless&quot;</span>)</span><br><span class="line">opts.add_argument(<span class="string">&quot;--display-gpu&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=opts)</span><br><span class="line">driver.get(<span class="string">&#x27;http://www.baidu.com&#x27;</span>)</span><br><span class="line">driver.save_screenshot(<span class="string">&#x27;123.png&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aidlux </tag>
            
            <tag> aidlearning </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>index</title>
      <link href="/blog_new/2022/09/04/index/"/>
      <url>/blog_new/2022/09/04/index/</url>
      
        <content type="html"><![CDATA[<p>test</p><p><img src="/blog_new/assets/index/2022-09-04-15-48-50-image.png"></p><img src="/blog_new/2022/09/04/index/2022-09-04-15-49-30-image.png" class="">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实时数据库探索</title>
      <link href="/blog_new/2021/12/07/pandas%E8%BF%9E%E6%8E%A5MongoDB%EF%BC%88%E7%99%BD%E5%AB%96%EF%BC%89/"/>
      <url>/blog_new/2021/12/07/pandas%E8%BF%9E%E6%8E%A5MongoDB%EF%BC%88%E7%99%BD%E5%AB%96%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 所有内容仅为个人学习记录用，侵权联删</p></blockquote><h1 id="先说为什么倒腾数据库"><a href="#先说为什么倒腾数据库" class="headerlink" title="先说为什么倒腾数据库"></a>先说为什么倒腾数据库</h1><p>我自己是买了一个win服务器的，平时用来运行脚本价格也算可以，里面的数据库这样：</p><p><img src="https://s2.loli.net/2021/12/07/qQaZTG7tDC5RUAx.png" alt="image-20211207190346873"></p><p>但是，我估计以后可能不会怎么用服务器那么服务器到期之后有没有更好的替代方案用来存读数据呢呢？</p><blockquote><p>这里我有两个需求：</p><ol><li>多端同步</li><li>实时更新</li></ol></blockquote><p><strong>下面是几个解决方案：</strong></p><h1 id="方案一：建一个收集表然后写个爬虫，定时去爬"><a href="#方案一：建一个收集表然后写个爬虫，定时去爬" class="headerlink" title="方案一：建一个收集表然后写个爬虫，定时去爬"></a>方案一：建一个收集表然后写个爬虫，定时去爬</h1><p>这个方案后面再看</p><hr><h1 id="方案二：白嫖MongoDB-512MB的数据库"><a href="#方案二：白嫖MongoDB-512MB的数据库" class="headerlink" title="方案二：白嫖MongoDB 512MB的数据库"></a>方案二：白嫖MongoDB 512MB的数据库</h1><blockquote><p>❗❗❗MongoDB的操作方式我并不喜欢，更习惯与mysql，这个方案就放这里，感兴趣自取</p><p>关于注册直接百度即可，512MB平时自用用足够了</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/347990778">vercel是什么神仙网站？ - 知乎 (zhihu.com)</a></p></blockquote><h2 id="第一步：注册或登陆"><a href="#第一步：注册或登陆" class="headerlink" title="第一步：注册或登陆"></a>第一步：注册或登陆</h2><p><a href="https://cloud.mongodb.com/">https://cloud.mongodb.com/</a></p><p>在MongoDB atlas首页，如果有账号，那就点击登陆。否则点击Get Started here 来注册，注册页面都是必填项：</p><p>　　<img src="https://s2.loli.net/2021/12/07/HJ9hAL5z12xFIfD.png" alt="img"></p><h2 id="第二步：创建新的Cluster"><a href="#第二步：创建新的Cluster" class="headerlink" title="第二步：创建新的Cluster"></a>第二步：创建新的Cluster</h2><p>登陆之后，如果尚未创建任何Cluster，那么会提示创建一个新的Cluster，如下所示：</p><p>　　<img src="https://s2.loli.net/2021/12/07/C5oX1cxVnzNRWy2.png" alt="img"></p><p>注意 只有M0是免费的，这个里面很多选项都是针对M0以上的，不过M0对于学习也足够了。下面是M0可以设置的选项：</p><p>　　<strong>Cloud Provider &amp; Region</strong>：集群部署的位置</p><p>　　<img src="https://s2.loli.net/2021/12/07/MOx7WhUlp94dgVm.png" alt="img">　　</p><p>　　选一个亚洲节点好了。</p><p>　　<strong>Cluster Tier</strong>：服务套餐</p><p>　　　　<img src="https://s2.loli.net/2021/12/07/AUhtaQisVkfR46M.png" alt="img"></p><p>　　当然是M0啦，共享内存 CPU，512M存储也够了，M0包含一个3个节点组成的replica set。</p><p>　　<strong>Additional settings</strong> 设置，不过M0没有啥可以设置的</p><p>　　　　<img src="https://s2.loli.net/2021/12/07/vudZmb7Il8GfiJR.png" alt="img"></p><p> 可以看到，默认是WT引擎，这也表明，MongoDB官方在慢慢放弃Mmapv1存储引擎，大多数新的feature都支持WT引擎。</p><p>　<strong>Cluster Name</strong>： 集群的名字</p><p>　　　　<img src="https://s2.loli.net/2021/12/07/5lmXsgtLqYf2SGw.png" alt="img"></p><p> 点击Create Cluster 开始创建（可能还需要人机校验）</p><h2 id="第三步：-创建用户，设置白名单"><a href="#第三步：-创建用户，设置白名单" class="headerlink" title="第三步： 创建用户，设置白名单"></a>第三步： 创建用户，设置白名单</h2><p>创建新的Cluster需要几分钟时间，在这个等待时间内，可以按提示创建user和设置白名单：</p><p><img src="https://s2.loli.net/2021/12/07/4dTaM3EfjI9gCHZ.png" alt="img"></p><p> 　为了方便访问，白名单IP就设置为0.0.0.0&#x2F;0</p><p>　　<img src="https://s2.loli.net/2021/12/07/5CpqDPJT2nysFGo.png" alt="img"></p><p>回到overview界面，集群创建好了，有一些基本的监控：Operation、 Connections、Logical Size</p><p>　　<img src="https://s2.loli.net/2021/12/07/8ufJFLgHotAmMpw.png" alt="img"></p><h2 id="第四步：python连接"><a href="#第四步：python连接" class="headerlink" title="第四步：python连接"></a>第四步：python连接</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line">client = pymongo.MongoClient(url) <span class="comment">#url获取看下面</span></span><br><span class="line">db = client[<span class="string">&quot;data&quot;</span>]<span class="comment">#相当于数据库名</span></span><br><span class="line">collection = db[<span class="string">&#x27;test&#x27;</span>]<span class="comment">#相当于数据表</span></span><br><span class="line">data = pd.DataFrame(<span class="built_in">list</span>(collection.find()))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;运行结果：</span></span><br><span class="line"><span class="string">                      _id  \</span></span><br><span class="line"><span class="string">0  61af3584d66c18c27d081386   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                               token  \</span></span><br><span class="line"><span class="string">0  2|1:0|10:16370721190|12:access_token|44:a3ZyRH...   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                                  ua  \</span></span><br><span class="line"><span class="string">0  Mozilla/5.0 (Linux; Android 7.1.2; vmos Build/...   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                           plus  </span></span><br><span class="line"><span class="string">0  f4eb90d6adbc498abee80e54c1529733 15680.....</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>url获取方法：</p><p><img src="https://s2.loli.net/2021/12/07/vIHmtEZJpNuUXG7.png" alt="image-20211207191626675"></p><p><img src="https://s2.loli.net/2021/12/07/6jdlXFEwD2OA3bH.png" alt="image-20211207191705354"></p><p><img src="https://s2.loli.net/2021/12/07/M8qWEyYSVF29Gzh.png" alt="image-20211207191718911"></p><hr><h2 id="第五步：php连接，增删改查"><a href="#第五步：php连接，增删改查" class="headerlink" title="第五步：php连接，增删改查"></a>第五步：php连接，增删改查</h2><p>自行百度，做到这里我就没做了，暂时不想用这种方法，相对于mysql MongoDB不太好操作，不符合我的预期</p><h2 id="第六步：Navicat连接"><a href="#第六步：Navicat连接" class="headerlink" title="第六步：Navicat连接"></a>第六步：Navicat连接</h2><ul><li>按照上文的操作，我们可以看到如下图的界面，点击CONNECT</li></ul><p><img src="https://pic1.zhimg.com/80/v2-5071a7d1293d9bff6ba39468621fc614_1440w.jpg" alt="img"></p><ul><li>接下来，选择Connect Using MongoDB Compass</li></ul><p><img src="https://s2.loli.net/2021/12/07/JFytwzB3aXVnGeT.jpg" alt="img"></p><ul><li>接下来，点击I have MongDB Compass，可以看到一串连接字符串，如下图红线框起来的地方</li></ul><p><img src="https://s2.loli.net/2021/12/07/CR5TK9WBAL7cD4J.jpg" alt="img"></p><ul><li>参照上图中红线框起来的连接字符串，我们按照下图填下我们的Navicat连接配置信息，密码处填写创建数据库时设置的密码</li></ul><p><img src="https://s2.loli.net/2021/12/07/xUOWu4N6j8H3lAJ.jpg" alt="img"></p><ul><li>点击测试连接，我会发现，连接成功，随后点击确定即可</li></ul><p><img src="https://s2.loli.net/2021/12/07/7nvMEr2LU5Zhdfl.jpg" alt="img"></p><h1 id="方案三：免费数据库"><a href="#方案三：免费数据库" class="headerlink" title="方案三：免费数据库"></a>方案三：免费数据库</h1><p><a href="https://www.db4free.net/signup.php">db4free.net - 免费的 MySQL 数据库</a></p><p><img src="https://s2.loli.net/2021/12/07/eVtroyKpklC5BYa.png" alt="image-20211207225618862"></p><p><img src="https://s2.loli.net/2021/12/07/8JTMFSAGew2EKYC.png" alt="image-20211207225326742"></p><p><a href="https://wivwiv.com/post/free-online-resource">免费在线 MySQL&#x2F;PostgreSQL&#x2F;MongoDB&#x2F;Redis&#x2F;Kafka&#x2F;RabbitMQ 数据库云服务合集快速测试 | MindSpark (wivwiv.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 白嫖 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MongoDB </tag>
            
            <tag> mysql </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地文件上传gitee</title>
      <link href="/blog_new/2021/12/04/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0gitee/"/>
      <url>/blog_new/2021/12/04/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0gitee/</url>
      
        <content type="html"><![CDATA[<h1 id="第一步、初始化git"><a href="#第一步、初始化git" class="headerlink" title="第一步、初始化git"></a>第一步、初始化git</h1><p>    进入到你需要上传的项目的目录下，右键找到<code>Git Bah Here</code>（安装了Git的小伙伴一般都是可以很轻松得找到），目的是可以直接在当前目录进行初始化，无需再<code>cd</code>寻找目录，麻烦！<br><img src="https://img-blog.csdnimg.cn/20210213203519556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg5NjY0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    打开命令行后就会自动定位到该目录，然后输入Git初始化命令。</p><pre><code>git init</code></pre><p>    输入完以后就可以看到该目录下多了一个隐藏文件<code>.git</code><strong>（前提是必须将不显示的隐藏文件显示出来）</strong><br><img src="https://img-blog.csdnimg.cn/20210213204117497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg5NjY0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="第二步、将本地项目工作区的所有文件添加到暂存区"><a href="#第二步、将本地项目工作区的所有文件添加到暂存区" class="headerlink" title="第二步、将本地项目工作区的所有文件添加到暂存区"></a>第二步、将本地项目工作区的所有文件添加到暂存区</h1><pre><code># 小数点 “.” ，意为添加文件夹下的所有文件；也可以将 “.” 换成具体的文件名，如果想添加项目中的指定文件，那就把 “.” 改为指定文件名即可。git add .</code></pre><h1 id="第三步、将暂存区的文件提交到本地仓库"><a href="#第三步、将暂存区的文件提交到本地仓库" class="headerlink" title="第三步、将暂存区的文件提交到本地仓库"></a>第三步、将暂存区的文件提交到本地仓库</h1><pre><code># 注释的作用是告诉下载和浏览的用户你这次提交代码所改变的地方git commit -m &quot;注释说明&quot;</code></pre><h1 id="第四步、在gitee（github）上新建远程仓库"><a href="#第四步、在gitee（github）上新建远程仓库" class="headerlink" title="第四步、在gitee（github）上新建远程仓库"></a>第四步、在gitee（github）上新建远程仓库</h1><p><img src="https://img-blog.csdnimg.cn/20210213204934824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg5NjY0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="第五步、将本地代码仓库关联到-gitee-上"><a href="#第五步、将本地代码仓库关联到-gitee-上" class="headerlink" title="第五步、将本地代码仓库关联到 gitee 上"></a>第五步、将本地代码仓库关联到 gitee 上</h1><pre><code>git remote add origin 仓库地址</code></pre><p><img src="https://img-blog.csdnimg.cn/20210213213407212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg5NjY0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    仓库地址就是复制这里的地址。作用是将本地的仓库关联到远程仓库。<br>    在这一步时如果出现错误：<code>fatal:remote origin already exists</code>，解决方法如下：</p><ol><li><p>先输入</p><p>git remote rm origin</p></li><li><p>再输入</p><p>git remote add origin 仓库地址</p></li></ol><p>如果连接失败</p><p>最后找到解决办法如下：<br>1、先删除远程 Git 仓库</p><blockquote><p>$ git remote rm origin</p></blockquote><p>2、再添加远程 Git 仓库</p><blockquote><p>$ git remote add origin xxxxxxx</p></blockquote><p>如果执行 git remote rm origin 报错的话，我们可以手动修改gitconfig文件的内容</p><blockquote><p>$ vi .git&#x2F;config</p></blockquote><h1 id="第六步、将代码由本地仓库上传到-gitee远程仓库"><a href="#第六步、将代码由本地仓库上传到-gitee远程仓库" class="headerlink" title="第六步、将代码由本地仓库上传到 gitee远程仓库"></a>第六步、将代码由本地仓库上传到 gitee远程仓库</h1><h2 id="6-1、获取远程库与本地同步合并"><a href="#6-1、获取远程库与本地同步合并" class="headerlink" title="6.1、获取远程库与本地同步合并"></a>6.1、获取远程库与本地同步合并</h2><p>    如果远程库不为空必须做这一步，否则后面的提交会失败。</p><pre><code># 不加这句可能报错，原因是 gitee 中的 README.md 文件不在本地仓库中。# 可以通过该命令进行代码合并git pull --rebase origin master  </code></pre><h2 id="6-2、-把当前分支-master-推送到远程"><a href="#6-2、-把当前分支-master-推送到远程" class="headerlink" title="6.2、 把当前分支 master 推送到远程"></a>6.2、 把当前分支 master 推送到远程</h2><p>    执行此命令后有可能会让输入用户名、密码</p><pre><code>git push -u origin master</code></pre><p>    执行完之后如果无错误就上传成功了，需要提示的是这里的 master 是 gitee默认的分支。</p><ol><li>如果你本地的当前分支不是 master，就用git checkout master命令切换到master分支。</li><li>如果你想用本地当前分支上传代码，则把第6步的命令里的 master 切换成你的当前分支名即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> gitee page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee page </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑和U盘分盘</title>
      <link href="/blog_new/2021/12/04/%E7%94%B5%E8%84%91%E5%92%8CU%E7%9B%98%E5%88%86%E7%9B%98/"/>
      <url>/blog_new/2021/12/04/%E7%94%B5%E8%84%91%E5%92%8CU%E7%9B%98%E5%88%86%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1-我的电脑-右键-管理"><a href="#1-我的电脑-右键-管理" class="headerlink" title="1.我的电脑 右键 管理"></a>1.我的电脑 右键 管理</h1><img src="/blog_new/2021/12/04/%E7%94%B5%E8%84%91%E5%92%8CU%E7%9B%98%E5%88%86%E7%9B%98/708f6f1802f25af881391b3305c7cda9.png" class="" title="708f6f1802f25af881391b3305c7cda9.png"><h1 id="2-磁盘管理"><a href="#2-磁盘管理" class="headerlink" title="2.磁盘管理"></a>2.磁盘管理</h1><img src="/blog_new/2021/12/04/%E7%94%B5%E8%84%91%E5%92%8CU%E7%9B%98%E5%88%86%E7%9B%98/0017c887bbd78e565db4bb77f85b98da.png" class="" title="0017c887bbd78e565db4bb77f85b98da.png"><h1 id="3-基本操作"><a href="#3-基本操作" class="headerlink" title="3.基本操作"></a>3.基本操作</h1><p>压缩卷，删除卷，扩展卷</p><blockquote><p>压缩卷 空间多的压缩出来一部分空间<br>删除卷 顾名思义<br>扩展卷 将压缩出来的空间加到某个新的卷里，添加空间</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记</title>
      <link href="/blog_new/2021/11/30/python%E7%AC%94%E8%AE%B0/"/>
      <url>/blog_new/2021/11/30/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于pip的配置"><a href="#关于pip的配置" class="headerlink" title="关于pip的配置"></a>关于pip的配置</h1><h2 id="pip镜像加速和更新"><a href="#pip镜像加速和更新" class="headerlink" title="pip镜像加速和更新"></a>pip镜像加速和更新</h2><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>华中理工大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a> </p><p>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p><p><strong>例如：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple 包名</span><br></pre></td></tr></table></figure><p>pip install -U dateutil -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p> pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> scipy</p><h2 id="永久配置"><a href="#永久配置" class="headerlink" title="永久配置"></a>永久配置</h2><p>pip config set global.index-url <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>#查看是否配置成功</p><p>pip config list</p><h2 id="更新pip"><a href="#更新pip" class="headerlink" title="更新pip"></a>更新pip</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip </span><br></pre></td></tr></table></figure><h1 id="代码前注释"><a href="#代码前注释" class="headerlink" title="代码前注释"></a>代码前注释</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure><h1 id="print的炫酷用法"><a href="#print的炫酷用法" class="headerlink" title="print的炫酷用法"></a>print的炫酷用法</h1><p>print(“\033[显示方式；前景颜色；背景颜色m…\033[0m”)</p><p>显示方式</p><table><thead><tr><th>意义</th><th>显示方式</th></tr></thead><tbody><tr><td>默认</td><td>0</td></tr><tr><td>高亮显示</td><td>1</td></tr><tr><td>下划线</td><td>4</td></tr><tr><td>闪烁</td><td>5</td></tr><tr><td>反白显示</td><td>7</td></tr><tr><td>不可见</td><td>8</td></tr></tbody></table><h1 id="前景颜色和背景颜色"><a href="#前景颜色和背景颜色" class="headerlink" title="前景颜色和背景颜色"></a>前景颜色和背景颜色</h1><table><thead><tr><th>颜色</th><th>前景色</th><th>背景色</th></tr></thead><tbody><tr><td>黑色</td><td>30</td><td>40</td></tr><tr><td>红色</td><td>31</td><td>41</td></tr><tr><td>绿色</td><td>32</td><td>42</td></tr><tr><td>黄色</td><td>33</td><td>43</td></tr><tr><td>蓝色</td><td>34</td><td>44</td></tr><tr><td>紫红色</td><td>35</td><td>45</td></tr><tr><td>青蓝色</td><td>36</td><td>46</td></tr><tr><td>白色</td><td>37</td><td>47</td></tr></tbody></table><blockquote><p>print(“\033[0;31;m单独分布状态图\033[0m”)</p><p><img src="https://i.loli.net/2021/12/02/CaxMARbh9peoZPc.png" alt="image-20211202211016128"></p></blockquote><h1 id="炫酷的进度条"><a href="#炫酷的进度条" class="headerlink" title="炫酷的进度条"></a>炫酷的进度条</h1><p>alive_progress</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> alive_progress <span class="keyword">import</span> alive_bar</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">total = <span class="number">100</span></span><br><span class="line"><span class="keyword">with</span> alive_bar(total, manual=<span class="literal">True</span>) <span class="keyword">as</span> bar: <span class="comment"># total 可以不指定，这时候只有百分比</span></span><br><span class="line">    bar(<span class="number">0.5</span>) <span class="comment"># 进度到 50%</span></span><br><span class="line">    time.sleep(<span class="number">0.5</span>)<span class="comment"># 可以写程序</span></span><br><span class="line">    bar(<span class="number">1.0</span>) <span class="comment"># 进度到 100%</span></span><br><span class="line">    time.sleep(<span class="number">0.5</span>)<span class="comment"># 可以写程序</span></span><br><span class="line">    bar(<span class="number">10</span>) <span class="comment"># 进度到 1000%</span></span><br></pre></td></tr></table></figure><p><em># 导入 alive-progress 库</em><br><strong>from</strong> alive_progress <strong>import</strong> alive_bar<br><strong>import</strong> time</p><p><em># 使用 with 语句创建一个进度条</em><br><strong>with</strong> alive_bar(100) <strong>as</strong> bar: <em># 给 alive_bar 传入进度条总数目（这里是 100）</em><br>  <strong>for</strong> item <strong>in</strong> range(100):<br>    <em># 等待 1s</em><br>    time.sleep(.1)<br>    <em>#更新进度条，进度 +1</em><br>    bar()</p><h1 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h1><p><a href="https://www.jianshu.com/p/3bedd17343d9">https://www.jianshu.com/p/3bedd17343d9</a></p><p>安装：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name chou                                                   #此英文名不需要跟GitHub账号保持一致</span><br><span class="line">git config --global user.email 3122107411@qq.com                                                      #此邮箱不需要跟GitHub账号保持一致</span><br><span class="line">git config --global push.default matching</span><br><span class="line">git config --global core.quotepath false</span><br><span class="line">git config --global core.editor &quot;vim&quot;</span><br></pre></td></tr></table></figure><p>github建了一个专门的库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:CallMeChou/git.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新&quot;</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="文件读写操作"><a href="#文件读写操作" class="headerlink" title="文件读写操作"></a>文件读写操作</h1><p><img src="https://i.loli.net/2021/11/30/LN6bBUEgCfhMWdy.png" alt="image-20211130140934650"></p><h1 id="github-action"><a href="#github-action" class="headerlink" title="github action"></a>github action</h1><p>相当于一个服务器</p><p>b站视频（En)：<a href="https://www.bilibili.com/video/BV1kf4y1i7dw?from=search&amp;seid=6286585284206871463">https://www.bilibili.com/video/BV1kf4y1i7dw?from=search&amp;seid=6286585284206871463</a></p><p>功能介绍：<a href="https://blog.csdn.net/qq_40748336/article/details/110749375">https://blog.csdn.net/qq_40748336/article/details/110749375</a></p><h2 id="设置时间-UTC标准（schedule）："><a href="#设置时间-UTC标准（schedule）：" class="headerlink" title="设置时间 UTC标准（schedule）："></a>设置时间 UTC标准（schedule）：</h2><p>官方文档：<a href="https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#scheduled-events">https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#scheduled-events</a></p><p>时间换算：<a href="http://timebie.com/cn/universalbeijing.php">http://timebie.com/cn/universalbeijing.php</a></p><p>微信消息推送：<a href="http://sc.ftqq.com/?c=code">http://sc.ftqq.com/?c=code</a></p><p>计划任务语法有五个字段，中间用空格分隔，每个字段代表一个时间单位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌───────────── minute (0 - 59)</span><br><span class="line">│ ┌───────────── hour (0 - 23)</span><br><span class="line">│ │ ┌───────────── day of the month (1 - 31)</span><br><span class="line">│ │ │ ┌───────────── month (1 - 12 or JAN-DEC)</span><br><span class="line">│ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)</span><br><span class="line">│ │ │ │ │                                   </span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ │</span><br><span class="line">* * * * *</span><br></pre></td></tr></table></figure><h1 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python -m venv myvnev</span><br><span class="line">cd mytestenv/Scripts</span><br><span class="line">activate</span><br><span class="line">pip <span class="built_in">list</span></span><br><span class="line">deactivate.bat</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_43463712/article/details/90210108">https://blog.csdn.net/weixin_43463712/article/details/90210108</a></p><p>可以使用cd命令，cd命令的功能是切换到指定的目录：</p><p>命令格式：</p><h1 id="路径-cd"><a href="#路径-cd" class="headerlink" title="路径 cd"></a>路径 cd</h1><p>目录名有几个符号有特殊的含义，“..”代表上<a href="https://www.baidu.com/s?wd=%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">一级目录</a>、“~”代表HOME目录、“-”代表前一目录。</p><p>因此返回上<a href="https://www.baidu.com/s?wd=%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">一级目录</a>可以使用命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>①…&#x2F; 表示当前文件所在的目录的上一级目录<br>②.&#x2F; 表示当前文件所在的目录(可以省略)<br>③&#x2F; 表示当前站点的根目录(域名映射的硬盘目录)<br>④”&#x2F;“左倾斜是正斜杠，””右倾斜是反斜杠，可以记为：除号是正斜杠“&#x2F;”。</p><h1 id="python编译工具"><a href="#python编译工具" class="headerlink" title="python编译工具"></a>python编译工具</h1><h2 id="1-auto-py-to-exe"><a href="#1-auto-py-to-exe" class="headerlink" title="1.auto-py-to-exe"></a>1.auto-py-to-exe</h2><p><code>pip install auto-py-to-exe</code></p><blockquote><p>非常好用的打包工具基于pyinstaller</p></blockquote><h2 id="2-pyinstaller"><a href="#2-pyinstaller" class="headerlink" title="2.pyinstaller"></a>2.pyinstaller</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5Nzg5ODQ3NQ==&mid=2247505334&idx=1&sn=5e6e6b23fdec018d584738326e3a4b7b&scene=21#wechat_redirect">别再问我Python打包成exe了！（终极版） (qq.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F -w -i icon.ico 1.pyPyinstaller -F -i icon.ico daka.py</span><br></pre></td></tr></table></figure><p>将python文件打包成exe文件</p><table><thead><tr><th>-h，–help</th><th align="center">查看该模块的帮助信息</th></tr></thead><tbody><tr><td>-F，-onefile</td><td align="center">产生单个的可执行文件</td></tr><tr><td>-D，–onedir</td><td align="center">产生一个目录（包含多个文件）作为可执行程序</td></tr><tr><td>-a，–ascii</td><td align="center">不包含 Unicode 字符集支持</td></tr><tr><td>-d，–debug</td><td align="center">产生 debug 版本的可执行文件</td></tr><tr><td>-w，–windowed，–noconsolc</td><td align="center">指定程序运行时不显示命令行窗口（仅对 Windows 有效）</td></tr><tr><td>-c，–nowindowed，–console</td><td align="center">指定使用命令行窗口运行程序（仅对 Windows 有效）</td></tr><tr><td>-o DIR，–out&#x3D;DIR</td><td align="center">指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件</td></tr><tr><td>-p DIR，–path&#x3D;DIR</td><td align="center">设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径</td></tr><tr><td>-n NAME，–name&#x3D;NAME</td><td align="center">指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字</td></tr></tbody></table><h2 id="3-将exe反编译成py文件"><a href="#3-将exe反编译成py文件" class="headerlink" title="3.将exe反编译成py文件"></a>3.将exe反编译成py文件</h2><p><a href="https://mp.weixin.qq.com/s/ddHJ1E2XniKnFiUSHBXTLw">别再问我exe反编译成Python脚本了！ (qq.com)</a></p><p>pyc-py:<a href="https://tool.lu/pyc/">python反编译 - 在线工具 (tool.lu)</a></p><h1 id="json文件处理"><a href="#json文件处理" class="headerlink" title="json文件处理"></a>json文件处理</h1><p><a href="https://www.runoob.com/python/python-json.html">https://www.runoob.com/python/python-json.html</a></p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">json.dumps</td><td align="left">将 Python 对象编码成 JSON 字符串</td></tr><tr><td align="left">json.loads</td><td align="left">将已编码的 JSON 字符串解码为 Python 对象</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.dumps(obj, skipkeys=<span class="literal">False</span>, ensure_ascii=<span class="literal">True</span>, check_circular=<span class="literal">True</span>, allow_nan=<span class="literal">True</span>, cls=<span class="literal">None</span>, indent=<span class="literal">None</span>, separators=<span class="literal">None</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, default=<span class="literal">None</span>, sort_keys=<span class="literal">False</span>, **kw)</span><br></pre></td></tr></table></figure><h1 id="ico文件"><a href="#ico文件" class="headerlink" title="ico文件"></a>ico文件</h1><p>转化：</p><p><a href="http://www.ico51.cn/">http://www.ico51.cn/</a></p><p>下载：（阿里矢量图）</p><p><a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a</a></p><h1 id="爬虫部分"><a href="#爬虫部分" class="headerlink" title="爬虫部分"></a>爬虫部分</h1><h2 id="爬虫补充知识："><a href="#爬虫补充知识：" class="headerlink" title="爬虫补充知识："></a>爬虫补充知识：</h2><h3 id="协议："><a href="#协议：" class="headerlink" title="协议："></a>协议：</h3><p>协议，网络协议的简称，网络协议是通信计算机双方必须共同遵从的一组约定。如怎么样建立连接、怎么样互相识别等。只有遵守这个约定，计算机之间才能相互通信交流。</p><h3 id="HTTP-x2F-HTTPS-协议："><a href="#HTTP-x2F-HTTPS-协议：" class="headerlink" title="HTTP&#x2F;HTTPS 协议："></a>HTTP&#x2F;HTTPS 协议：</h3><p>目前网站主要有两种协议，HTTP 和 HTTPS，具体的原理我们可以不用深究，我们只需要知道他们的区别：</p><p><img src="https://i.loli.net/2021/11/30/1uErKP5D7hbMSVd.png" alt="image-20210822095440492"></p><p><code>URL</code> 是缩写，其英文全称是：<code>Uniform Resource Locator</code>（统一资源定位符）。<code>URL</code> 的格式规范规定了由哪几部分组成，以及各种符号的作用：</p><p><img src="https://i.loli.net/2021/11/30/c9NoSrUwd6lh1qp.png" alt="URL格式"></p><ul><li>路径与参数之间用 <code>?</code> 分隔。看到问号 <code>?</code> 就知道后面的内容就是参数了。</li><li>多个参数之间用 <code>&amp;</code> 分隔。</li><li>参数用“参数名&#x3D;参数值”（<code>key=value</code>）的格式表示。</li></ul><h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><p>比如：<a href="https://www.douban.com/gallery/topic/116390/?from=hot_topic_note&amp;sort=new">https://www.douban.com:443/gallery/topic/116390/?from=hot_topic_note&amp;sort=new</a></p><p>域名后的 <code>:443</code> 表示网站的端口号。<code>HTTP</code> 协议默认的端口号是 <code>80</code> ，<code>HTTPS</code> 协议默认的端口号是 <code>443</code> 。默认的端口号在 URL 中是可以省略的，其它的端口号就必须要写明了。</p><p>上网浏览时，大多数情况下看不到端口号，但是大家在开发过程中可能经常会用到不同的端口号，以 <code>8000</code> 、 <code>8080</code> 最常见，这些端口号必须写明。</p><h3 id="requests介绍"><a href="#requests介绍" class="headerlink" title="requests介绍"></a>requests介绍</h3><p>官方文档：<a href="https://requests.readthedocs.io/zh_CN/latest/">https://requests.readthedocs.io/zh_CN/latest/</a></p><p>http请求的介绍</p><p>POST、DELETE、PUT、GET就像对应着数据库的CRUD（增、删、改、查）</p><p>使用标准：</p><table><thead><tr><th>请求方式</th><th>URL</th><th>操作</th></tr></thead><tbody><tr><td>POST</td><td>&#x2F;URL</td><td>增加</td></tr><tr><td>DELETE</td><td>&#x2F;URL&#x2F;xxx</td><td>删除</td></tr><tr><td>PUT</td><td>&#x2F;URL&#x2F;xxx</td><td>修改</td></tr><tr><td>GET</td><td>&#x2F;URL&#x2F;xxx</td><td>查询</td></tr></tbody></table><p><strong>GET请求</strong>，用于向服务器发送查询数据的请求，只是查询，不会增加、修改数据，不会影响服务器上资源的内容。无论进行多少次都，执行后的结果都是一样的，具有幂等性。</p><p><strong>PUT请求</strong>，是用于向服务器发送数据，从而改变数据，修改数据内容。但是不会增加数据的种类。无论进行多少次操作，其结果也都一样，具有幂等性。</p><p><strong>POST请求</strong>，与PUT请求类似。都是向服务器端发送数据，但是改请求会增加数据的种类，创建新的内容。不具有幂等性。</p><p><strong>DELETE请求</strong>，用来删除某一资源</p><p><strong>PUT与POST的区别？</strong></p><p>​    PUT和POST都是向服务器发送数据，</p><p>​    但是POST主要是在一个集合资源之上（url），PUT主要作用在一个具体的资源之上（url&#x2F;xxx）</p><p>幂等性：幂等意味着对同一个URL的多次请求会返回一样的结果</p><h4 id="1-response对象"><a href="#1-response对象" class="headerlink" title="1.response对象"></a>1.response对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requestsres = requests.get(<span class="string">&#x27;https://www.ustc.edu.cn/&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li><p>状态码 res.status_code</p></li><li><p>响应内容res.text</p></li><li><p>二进制方式 res.content</p></li></ol><p>关于编码问题：            <img src="https://i.loli.net/2021/11/30/5cdxbBRZADrUHGe.png" alt="image-20210822102345287"></p><ol start="4"><li>res.json()</li></ol><h4 id="2-Referer"><a href="#2-Referer" class="headerlink" title="2.Referer"></a>2.Referer</h4><p>为了模拟浏览器自动加 Referer 信息的行为，可以调用语句：</p><p>headers &#x3D; {‘Referer’: ‘youkeda.com’}<br>同样，程序访问此图片也是失败的，请看演示程序：</p><p>http 响应状态码是：403 ，表示禁止访问此图片。</p><p>解决办法<br>贴到浏览器能访问是因为此图床允许无 Referer 信息时访问。但也不是所有图床都允许呢，况且即使同一个图床，也可能修改规则，某一天突然改为必须本站内才能也未可知。</p><p>所以，为了一劳永逸的解决问题，需要把 Referer 信息设置为图片原始使用的网站。</p><h4 id="3-Host"><a href="#3-Host" class="headerlink" title="3.Host"></a>3.Host</h4><p><strong>Host</strong> 请求头指明了请求将要发送到的服务器主机名和端口号。</p><p>如果没有包含端口号，会自动使用被请求服务的默认端口（比如HTTPS URL使用443端口，HTTP URL使用80端口）。</p><p>所有HTTP&#x2F;1.1 请求报文中必须包含一个<code>Host</code>头字段。对于缺少<code>Host</code>头或者含有超过一个<code>Host</code>头的HTTP&#x2F;1.1 请求，可能会收到<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/400"><code>400</code></a>（Bad Request）状态码。</p><h4 id="4-cookies"><a href="#4-cookies" class="headerlink" title="4.cookies"></a>4.cookies</h4><p><img src="https://i.loli.net/2021/11/15/s8z6XdYNRbI2rCa.png" alt="img"></p><p>可以放在headers也可以单列出来，单列出来有点麻烦，所以还不如<strong>放到headers里面</strong></p><p><img src="https://i.loli.net/2021/11/15/CcLfMshVYeiyvDH.png" alt="img"> </p><p>Cookies解析  <code>cookiesjar</code></p><h2 id="下载文件的两种方式："><a href="#下载文件的两种方式：" class="headerlink" title="下载文件的两种方式："></a>下载文件的两种方式：</h2><p>（1） requests下载</p><p><img src="https://i.loli.net/2021/11/15/GR5fuJ7UTlMKSO4.png" alt="img"> </p><p>（2）urllib下载文件</p><p><img src="https://i.loli.net/2021/11/15/OKVNEqa6A3ctUuI.png" alt="img"> </p><h2 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h2><p><a href="https://docs.python-requests.org/zh_CN/latest/">Requests: 让 HTTP 服务人类 — Requests 2.18.1 文档 (python-requests.org)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; r = requests.get(&#x27;https://api.github.com/user&#x27;, auth=(&#x27;user&#x27;, &#x27;pass&#x27;))</span><br><span class="line">&gt;&gt;&gt; r.status_code</span><br><span class="line">200</span><br><span class="line">&gt;&gt;&gt; r.headers[&#x27;content-type&#x27;]</span><br><span class="line">&#x27;application/json; charset=utf8&#x27;</span><br><span class="line">&gt;&gt;&gt; r.encoding</span><br><span class="line">&#x27;utf-8&#x27;</span><br><span class="line">&gt;&gt;&gt; r.text</span><br><span class="line">u&#x27;&#123;&quot;type&quot;:&quot;User&quot;...&#x27;</span><br><span class="line">&gt;&gt;&gt; r.json()</span><br><span class="line">&#123;u&#x27;private_gists&#x27;: 419, u&#x27;total_private_repos&#x27;: 77, ...&#125;</span><br></pre></td></tr></table></figure><hr><p>这部分文档是以文字为主，从 Requests 的背景讲起，然后对 Requests 的重点功能做了逐一的介绍。</p><ul><li>简介<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#id2">开发哲学</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#apache2">Apache2 协议</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#requests">Requests 协议</a></li></ul></li><li>安装 Requests<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/install.html#pip-install-requests">pip install requests</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/install.html#id1">获得源码</a></li></ul></li><li>快速上手<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id2">发送请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#url">传递 URL 参数</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id3">响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id4">二进制响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#json">JSON 响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id5">原始响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id6">定制请求头</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#post">更加复杂的 POST 请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#post-multipart-encoded">POST一个多部分编码(Multipart-Encoded)的文件</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id7">响应状态码</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id8">响应头</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#cookie">Cookie</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id9">重定向与请求历史</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id10">超时</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id11">错误与异常</a></li></ul></li><li>高级用法<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#session-objects">会话对象</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#request-and-response-objects">请求与响应对象</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#prepared-request">准备的请求 （Prepared Request）</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#ssl">SSL 证书验证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#id4">客户端证书</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#ca">CA 证书</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#body-content-workflow">响应体内容工作流</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#keep-alive">保持活动状态（持久连接）</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#streaming-uploads">流式上传</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#chunk-encoding">块编码请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#post">POST 多个分块编码的文件</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#event-hooks">事件挂钩</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#custom-auth">自定义身份验证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#streaming-requests">流式请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#proxies">代理</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#compliance">合规性</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#http">HTTP动词</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#id17">定制动词</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#link-headers">响应头链接字段</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#transport-adapters">传输适配器</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#blocking-or-nonblocking">阻塞和非阻塞</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#header">Header 排序</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#timeout">超时（timeout）</a></li></ul></li><li>身份认证<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id2">基本身份认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id3">摘要式身份认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#oauth-1">OAuth 1 认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#oauth-2-openid">OAuth 2 与 OpenID 连接认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id4">其他身份认证形式</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id5">新的身份认证形式</a></li></ul></li></ul><hr><h2 id="Beautiful-Soup4"><a href="#Beautiful-Soup4" class="headerlink" title="Beautiful Soup4"></a>Beautiful Soup4</h2><p>官方文档：<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#get-text">Beautiful Soup 4.4.0 文档 — Beautiful Soup 4.2.0 中文 文档</a></p><p><a href="https://www.cnblogs.com/linagcheng/p/10311181.html">爬虫（三）—— BeautifulSoup模块获取元素 - 凉城旧巷 - 博客园 (cnblogs.com)</a></p><p>Beautiful Soup 是一个可以从 HTML 或 XML 文件中提取数据的 Python 库。它能够通过你喜欢的转换器实现惯用的文档导航，查找，修改文档的方式。Beautiful Soup 会帮你节省数小时甚至数天的工作时间。</p><p>下表列出了主要的解析器,以及它们的优缺点:</p><table><thead><tr><th>解析器</th><th>使用方法</th><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td><td>Python的内置标准库执行速度适中文档容错能力强</td><td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td>lxml HTML 解析器</td><td><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td><td>速度快文档容错能力强</td><td>需要安装C语言库</td></tr><tr><td>lxml XML 解析器</td><td><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])</code>                            <code>BeautifulSoup(markup, &quot;xml&quot;)</code></td><td>速度快唯一支持XML的解析器</td><td>需要安装C语言库</td></tr><tr><td>html5lib</td><td><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td><td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td>速度慢不依赖外部扩展</td></tr></tbody></table><img src="https://i.loli.net/2021/11/15/CvLOKMlxUptkq8d.png" alt="image-20210920163606911" style="zoom: 200%;" /><p>find_all( <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id35">name</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#css">attrs</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#recursive">recursive</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id36">string</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#keyword">**kwargs</a> )</p><p>find( <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id35">name</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#css">attrs</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#recursive">recursive</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id36">string</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#keyword">**kwargs</a> )</p><p><code>find_all()</code> 方法将返回文档中符合条件的所有tag,尽管有时候我们只想得到一个结果.比如文档中只有一个<body>标签,那么使用 <code>find_all()</code> 方法来查找<body>标签就不太合适, 使用 <code>find_all</code> 方法并设置 <code>limit=1</code> 参数不如直接使用 <code>find()</code> 方法.</p><ol><li><p>格式化输出</p><p>prettify() 方法将Beautiful Soup的文档树格式化后以Unicode编码输出,每个XML&#x2F;HTML标签都独占一行</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markup = <span class="string">&#x27;&lt;a href=&quot;http://example.com/&quot;&gt;I linked to &lt;i&gt;example.com&lt;/i&gt;&lt;/a&gt;&#x27;</span>soup = BeautifulSoup(markup)soup.prettify()<span class="comment"># &#x27;&lt;html&gt;\n &lt;head&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;a href=&quot;http://example.com/&quot;&gt;\n...&#x27;print(soup.prettify())# &lt;html&gt;#  &lt;head&gt;#  &lt;/head&gt;#  &lt;body&gt;#   &lt;a href=&quot;http://example.com/&quot;&gt;#    I linked to#    &lt;i&gt;#     example.com#    &lt;/i&gt;#   &lt;/a&gt;#  &lt;/body&gt;# &lt;/html&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>get_text()</li></ol><p><img src="https://i.loli.net/2021/11/15/mq2x1jsKi4ItPTN.png" alt="image-20210822190758421"></p><hr><p><strong>查找元素的方法</strong></p><h3 id="1-原生方法"><a href="#1-原生方法" class="headerlink" title="1.原生方法"></a>1.原生方法</h3><h3 id="2-和re结合"><a href="#2-和re结合" class="headerlink" title="2.和re结合"></a>2.和re结合</h3><h3 id="3-和xpath结合"><a href="#3-和xpath结合" class="headerlink" title="3.和xpath结合"></a>3.和xpath结合</h3><h3 id="4-和css结合"><a href="#4-和css结合" class="headerlink" title="4.和css结合"></a>4.和css结合</h3><p>Beautiful Soup支持大部分的CSS选择器 <a href="http://www.w3.org/TR/CSS2/selector.html">http://www.w3.org/TR/CSS2/selector.html</a> [<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id93">6]</a> , 在 <code>Tag</code> 或 <code>BeautifulSoup</code> 对象的 <code>.select()</code> 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]soup.select(&quot;p nth-of-type(3)&quot;)# [&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span><br></pre></td></tr></table></figure><p>通过tag标签逐层查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;body a&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;html head title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span><br></pre></td></tr></table></figure><p>找到某个tag标签下的直接子标签 [<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id93">6]</a> :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;head &gt; title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]soup.select(&quot;p &gt; a&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;p &gt; a:nth-of-type(2)&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]soup.select(&quot;p &gt; #link1&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&quot;body &gt; a&quot;)# []</span><br></pre></td></tr></table></figure><p>找到兄弟节点标签:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1 ~ .sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;  id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;#link1 + .sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过CSS的类名查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;.sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;[class~=sister]&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过tag的id查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&quot;a#link2&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>同时用多种CSS选择器查询元素:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1,#link2&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过是否存在某个属性来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&#x27;a[href]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过属性的值来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&#x27;a[href$=&quot;tillie&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&#x27;a[href*=&quot;.com/el&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过语言设置来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multilingual_markup = &quot;&quot;&quot; &lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt; &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt; &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt; &lt;p lang=&quot;fr&quot;&gt;Bonjour mes amis&lt;/p&gt;&quot;&quot;&quot;multilingual_soup = BeautifulSoup(multilingual_markup)multilingual_soup.select(&#x27;p[lang|=en]&#x27;)# [&lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;,#  &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;,#  &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;]</span><br></pre></td></tr></table></figure><p>返回查找到的元素的第一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select_one(&quot;.sister&quot;)# &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>对于熟悉CSS选择器语法的人来说这是个非常方便的方法.Beautiful Soup也支持CSS选择器API, 如果你仅仅需要CSS选择器的功能,那么直接使用 <code>lxml</code> 也可以, 而且速度更快,支持更多的CSS选择器语法,但Beautiful Soup整合了CSS选择器的语法和自身方便使用API.</p><h2 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h2><p><a href="https://www.w3school.com.cn/xpath/index.asp">https://www.w3school.com.cn/xpath/index.asp</a></p><p>常用规则：</p><table><thead><tr><th align="left">表达式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">nodename</td><td align="left">选取此节点的所有子节点</td></tr><tr><td align="left">&#x2F;</td><td align="left">从当前节点选区直接子节点</td></tr><tr><td align="left">&#x2F;&#x2F;</td><td align="left">从当前节点选取子孙节点</td></tr><tr><td align="left">.</td><td align="left">选取当前节点</td></tr><tr><td align="left">..</td><td align="left">选取当前节点的父节点</td></tr><tr><td align="left">@</td><td align="left">选取属性</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etreetext = <span class="string">&#x27;&#x27;&#x27;&lt;div&gt;&lt;ul&gt;&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/ul&gt;&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="re正则表达式"><a href="#re正则表达式" class="headerlink" title="re正则表达式"></a><strong>re正则表达式</strong></h2><p><a href="https://www.cnblogs.com/chengege/p/11190782.html">https://www.cnblogs.com/chengege/p/11190782.html</a></p><p><strong>(匹配单个字符)</strong></p><ol><li>. 匹配任意字符(不包括换行符)</li><li>\d 任意数字&#x3D;&#x3D;[0-9]</li><li>\D 任意非数字&#x3D;&#x3D;[^0-9]</li><li>\s 空白字符</li><li>\w 单词字符和下划线 &#x3D;&#x3D;[ 0-9a-zA-Z_] </li><li>\W 与 \w相反</li><li>[] 组合方式，匹配中括号里面的字符</li></ol><p><strong>(匹配多个字符)</strong></p><ol><li>* 任意多个字符</li><li>+ 匹配一个以上的字符</li><li>？0或1个</li><li>{m}匹配m个</li><li>{m,n} m~n个</li></ol><p>（特殊符号）</p><hr><ol><li>^ 脱字符：表示以……开始</li><li>$ 以……结束</li><li>|匹配多个表达式或字符</li><li>贪婪模式和非贪婪模式</li></ol><p><strong>（常用函数）</strong></p><ol><li>match从头开始</li><li>search任意位置开始</li><li>分组group groups</li><li>findall 全部查找出来( re.DOTALL 可以匹配所以字符包括换行符)</li><li>sub用来替换字符串</li><li>split分割</li><li>compile编译(re.VERBOSE可以注释)</li></ol><p>爬古诗文网（案例）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> reimport requestsdef parse_page(url):    headers = &#123;        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36&quot;</span>    &#125;    r=requests.get(url,headers=headers)    <span class="comment"># print(r.text)    text=r.text    titles=re.findall(r&#x27;&lt;div class=&quot;cont&quot;&gt;.*?&lt;b&gt;(.*?)&lt;/b&gt;&#x27;,text,re.DOTALL)#re.DOTALL    # print(titles)    dynasties=re.findall(r&#x27;&lt;p class=&quot;source&quot;&gt;.*?&lt;a.*?&gt;(.*?)&lt;/a&gt;&#x27;,text,re.DOTALL)    # print(dynasties)    authors=re.findall(r&#x27;&lt;p class=&quot;source&quot;&gt;.*?&lt;a.*?&gt;.*?&lt;a.*?&gt;(.*?)&lt;/a&gt;&#x27;,text,re.DOTALL)    # print(authors)    contents_tags=re.findall(r&#x27;&lt;div class=&quot;contson&quot; .*?&gt;(.*?)&lt;/div&gt;&#x27;,text,re.DOTALL)    contents=[]    for content in contents_tags:#第一句在div里，剩余的在&lt;p&gt;标签下        x=re.sub(r&#x27;&lt;.*?&gt;&#x27;,&quot;&quot;,content)        contents.append(x.strip()) #去空格创建一个诗歌内容的表格    poems = [] #解包后所有内容都在这里    for value in zip(titles,dynasties,authors,contents):        title,dynasty,author,content=value #解包        poem=&#123;            &#x27;title&#x27;:title,            &#x27;dynasty&#x27;:dynasty,            &#x27;author&#x27;:author,            &#x27;poem&#x27;:content        &#125;        poems.append(poem)    for poem in poems:        print(poem)        print(&#x27;-&#x27;*20)def mian():    # url=&#x27;https://www.gushiwen.org/default_1.aspx&#x27;    for x in range(1,11):        url=&#x27;https://www.gushiwen.org/default_%s.aspx&#x27; % x        parse_page(url)if __name__ == &#x27;__main__&#x27;:    mian()</span></span><br></pre></td></tr></table></figure><h2 id="css-selector"><a href="#css-selector" class="headerlink" title="css selector"></a>css selector</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors">CSS 选择器 - CSS（层叠样式表） | MDN (mozilla.org)</a></p><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E5%99%A8">基本选择器</a></h2><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">通用选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">Universal selector</a>）</p><p>选择所有元素。（可选）可以将其限制为特定的名称空间或所有名称空间。 <strong>语法：</strong><code>*</code> <code>ns|*</code> <code>*|*</code> <strong>例子：</strong><code>*</code> 将匹配文档的所有元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">元素选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">Type selector</a>）</p><p>按照给定的节点名称，选择所有匹配的元素。 <strong>语法：</strong><code>elementname</code> <strong>例子：</strong><code>input</code> 匹配任何 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input">&#96;&#96;</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">类选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">Class selector</a>）</p><p>按照给定的 <code>class</code> 属性的值，选择所有匹配的元素。 <strong>语法</strong>：<code>.classname</code> <strong>例子</strong>：<code>.index</code> 匹配任何 <code>class</code> 属性中含有 “index” 类的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID 选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID selector</a>）</p><p>按照 <code>id</code> 属性选择一个与之匹配的元素。需要注意的是，一个文档中，每个 ID 属性都应当是唯一的。 <strong>语法：</strong><code>#idname</code> <strong>例子：</strong><code>#toc</code> 匹配 ID 为 “toc” 的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">属性选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">Attribute selector</a>）</p><p>按照给定的属性，选择所有匹配的元素。 <strong>语法：</strong><code>[attr]</code> <code>[attr=value]</code> <code>[attr~=value]</code> <code>[attr|=value]</code> <code>[attr^=value]</code> <code>[attr$=value]</code> <code>[attr*=value]</code> <strong>例子：</strong><code>[autoplay]</code> 选择所有具有 <code>autoplay</code> 属性的元素（不论这个属性的值是什么）。</p></li></ul><h2 id="分组选择器（Grouping-selectors）"><a href="#分组选择器（Grouping-selectors）" class="headerlink" title="分组选择器（Grouping selectors）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%88%86%E7%BB%84%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88grouping_selectors%EF%BC%89">分组选择器（Grouping selectors）</a></h2><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list">选择器列表</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list">Selector list</a>）</p><p><code>,</code> 是将不同的选择器组合在一起的方法，它选择所有能被列表中的任意一个选择器选中的节点。 <strong>语法</strong>：<code>A, B</code> <strong>示例</strong>：<code>div, span</code> 会同时匹配 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">&#96;&#96;</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">&#96;&#96;</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">&#96;&#96;</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">&#96;&#96;</a> 元素。</p></li></ul><h2 id="组合器（Combinators）"><a href="#组合器（Combinators）" class="headerlink" title="组合器（Combinators）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E7%BB%84%E5%90%88%E5%99%A8%EF%BC%88combinators%EF%BC%89">组合器（Combinators）</a></h2><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">后代组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">Descendant combinator</a>）</p><p><code> </code>（空格）组合器选择前一个元素的后代节点。 <strong>语法：</strong><code>A B</code> <strong>例子：</strong><code>div span</code> 匹配所有位于任意 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">&#96;&#96;</a> 元素之内的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">&#96;&#96;</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">直接子代组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">Child combinator</a>）</p><p><code>&gt;</code> 组合器选择前一个元素的直接子代的节点。 <strong>语法</strong>：<code>A &gt; B</code> <strong>例子</strong>：<code>ul &gt; li</code> 匹配直接嵌套在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">&#96;&#96;</a> 元素内的所有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li">&#96;&#96;</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">一般兄弟组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">General sibling combinator</a>）</p><p><code>~</code> 组合器选择兄弟元素，也就是说，后一个节点在前一个节点后面的任意位置，并且共享同一个父节点。 <strong>语法</strong>：<code>A ~ B</code> <strong>例子</strong>：<code>p ~ span</code> 匹配同一父元素下，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">&#96;&#96;</a> 元素后的所有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">&#96;&#96;</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator">紧邻兄弟组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator">Adjacent sibling combinator</a>）</p><p><code>+</code> 组合器选择相邻元素，即后一个元素紧跟在前一个之后，并且共享同一个父节点。 <strong>语法：</strong><code>A + B</code> <strong>例子：</strong><code>h2 + p</code> 会匹配所有紧邻在 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements"> (en-US)</a> 元素后的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">&#96;&#96;</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Column_combinator">列组合器</a>（<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Column_combinator">Column combinator</a>）</p><p><code>||</code> 组合器选择属于某个表格行的节点。 <strong>语法：</strong> <code>A || B</code> <strong>例子：</strong> <code>col || td</code> 会匹配所有 作用域内的 &#96;](<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/td">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/td</a>) 元素。</p></li></ul><h2 id="伪选择器（Pseudo）"><a href="#伪选择器（Pseudo）" class="headerlink" title="伪选择器（Pseudo）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E4%BC%AA%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88pseudo%EF%BC%89">伪选择器（Pseudo）</a></h2><p><img src="https://i.loli.net/2021/11/15/AUELXF9jqxVyaDC.png" alt="image-20210822195103270"></p><p>#contentEl &gt; div.unreach.w-full &gt; p:nth-child(11)</p><p>#app &gt; div.w-full.h-full.flex.relative &gt; div.flex-none.bg-white.flex.flex-col.transition-all &gt; div.relative &gt; div &gt; span</p><hr><h2 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h2><p><a href="https://www.selenium.dev/documentation/zh-cn/getting_started/%EF%BC%88%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3%EF%BC%89">https://www.selenium.dev/documentation/zh-cn/getting_started/（中文文档）</a></p><p><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/">selenium-python中文文档 (python-selenium-zh.readthedocs.io)</a></p><p>配置：</p><p>下载相应的webdriver（chromedriver\geckodriver…)放到python根目录下</p><p>功能：</p><ul><li>框架底层使用JavaScript模拟真实用户对浏览器进行操作。测试脚本执行时，浏览器自动按照脚本代码做出点击，输入，打开，验证等操作，就像真实用户所做的一样，从终端用户的角度测试应用程序。</li><li>使浏览器兼容性测试自动化成为可能，尽管在不同的浏览器上依然有细微的差别。</li><li>使用简单，可使用Java，Python等多种语言编写用例脚本。</li></ul><p>使用：</p><h3 id="1-关闭页面"><a href="#1-关闭页面" class="headerlink" title="1.关闭页面"></a>1.关闭页面</h3><p>driver.close()</p><p>#关闭当前页面，如果只有一个页面，会关闭浏览器</p><p>driver.quit()</p><p>#关闭浏览器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timefrom selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)time.sleep(<span class="number">3</span>)driver.close()<span class="comment">#当前选项卡#driver.quit()#退出浏览器</span></span><br></pre></td></tr></table></figure><h3 id="2-定位UI元素-WebElements"><a href="#2-定位UI元素-WebElements" class="headerlink" title="2.定位UI元素 (WebElements)"></a>2.定位UI元素 (WebElements)</h3><p>关于元素的选取，有如下的API 单个元素选取:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_element_by_idfind_elements_by_namefind_elements_by_xpathfind_elements_by_link_textfind_elements_by_partial_link_textfind_elements_by_tag_namefind_elements_by_class_namefind_elements_by_css_selector</span><br></pre></td></tr></table></figure><p>​    （find_element….获取第一个、find_elements….获取全部）</p><p>1.操作输入框</p><p>下面这个例子会自动打开火狐并在<u>输入框</u>内输入test：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://cn.bing.com/&quot;</span>)<span class="comment">#print(driver.page_source)  #driver.page_source获取源代码input_tag=driver.find_element_by_id(&#x27;sb_form_q&#x27;) # input_tag=driver.find_element_by_class_name(&#x27;b_searchbox&#x27;)#input_tag=driver.find_element_by_xpath(&quot;//input[@id=&#x27;sb_form_q&#x27;]&quot;)input_tag.send_keys(&#x27;test&#x27;)</span></span><br></pre></td></tr></table></figure><p>也可以用(不好用)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br></pre></td></tr></table></figure><p>2.操作checkbox</p><p>在上面代码的基础上可以自动点击搜索按钮button</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/index.php?tn=monline_3_dg&quot;</span>)input_tag=driver.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>)input_tag.send_keys(<span class="string">&#x27;test&#x27;</span>)rememberBtn=driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click()</span><br></pre></td></tr></table></figure><p>3.select</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;select <span class="built_in">id</span>=<span class="string">&quot;status&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control valid&quot;</span> onchange=<span class="string">&quot;&quot;</span> name=<span class="string">&quot;status&quot;</span>&gt;    &lt;option value=<span class="string">&quot;&quot;</span>&gt;&lt;/option&gt;    &lt;option value=<span class="string">&quot;0&quot;</span>&gt;未审核&lt;/option&gt;    &lt;option value=<span class="string">&quot;1&quot;</span>&gt;初审通过&lt;/option&gt;    &lt;option value=<span class="string">&quot;2&quot;</span>&gt;复审通过&lt;/option&gt;    &lt;option value=<span class="string">&quot;3&quot;</span>&gt;审核不通过&lt;/option&gt;&lt;/select&gt;<span class="comment"># 导入 Select 类from selenium.webdriver.support.ui import Select# 找到 name 的选项卡select = Select(driver.find_element_by_name(&#x27;status&#x27;))# select.select_by_index(1)select.select_by_value(&quot;0&quot;)select.select_by_visible_text(u&quot;未审核&quot;)</span></span><br></pre></td></tr></table></figure><h3 id="3-鼠标动作链"><a href="#3-鼠标动作链" class="headerlink" title="3.鼠标动作链"></a>3.鼠标动作链</h3><p>有些时候，我们需要再页面上模拟一些鼠标操作，比如双击、右击、拖拽甚至按住不动等，我们可以通过导入 ActionChains 类来做到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverfrom selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChainsdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/?tn=monline_3_dg&quot;</span>)actions=ActionChains(driver)<span class="comment">#把driver传入ActionChains类input_tag=driver.find_element_by_id(&#x27;kw&#x27;)check_tag=driver.find_element_by_id(&#x27;su&#x27;)actions.send_keys_to_element(input_tag,&#x27;腾讯新闻&#x27;)actions.move_to_element(check_tag).click()actions.perform() #执行上面的行为链</span></span><br></pre></td></tr></table></figure><h3 id="4-获取cookies信息"><a href="#4-获取cookies信息" class="headerlink" title="4.获取cookies信息"></a>4.获取cookies信息</h3><p>（1）获取所有的cookies</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> cookies <span class="keyword">in</span> driver.get_cookies():    <span class="built_in">print</span>(cookies)</span><br></pre></td></tr></table></figure><p>（2）根据key获取对应的value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value=driver.get_cookie(key)</span><br></pre></td></tr></table></figure><p>（3）删除cookies信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.delete_all_cookies()<span class="comment">#所有的driver.delete_cookie(key) #key对应的</span></span><br></pre></td></tr></table></figure><h3 id="5-页面等待"><a href="#5-页面等待" class="headerlink" title="5.页面等待"></a>5.页面等待</h3><p>现在的网页越来越多采用了 Ajax 技术，这样程序便不能确定何时某个元素完全加载出来了。如果实际页面等待时间过长导致某个dom元素还没出来，但是你的代码直接使用了这个WebElement，那么就会抛出NullPointer的异常。</p><p>为了避免这种元素定位困难而且会提高产生 ElementNotVisibleException 的概率。所以 Selenium 提供了两种等待方式，一种是隐式等待，一种是显式等待。</p><p>隐式等待是等待特定的时间，显式等待是指定某一条件直到这个条件成立时继续执行。</p><h4 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h4><p>显式等待指定某个条件，然后设置最长等待时间。如果在这个时间还没有找到元素，那么便会抛出异常了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverfrom selenium.webdriver.common.by <span class="keyword">import</span> By<span class="comment"># WebDriverWait 库，负责循环等待from selenium.webdriver.support.ui import WebDriverWait# expected_conditions 类，负责条件出发from selenium.webdriver.support import expected_conditions as ECdrive_path=r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;driver=webdriver.Firefox(executable_path=drive_path)driver.get(&quot;https://www.selenium.dev/&quot;)# driver.implicitly_wait(10)#等待时间try:    # 页面一直循环，直到 id=&quot;myDynamicElement&quot; 出现    element = WebDriverWait(driver, 10).until(        EC.presence_of_element_located((By.ID, &quot;myDynamicElement&quot;))    )finally:    driver.quit()</span></span><br></pre></td></tr></table></figure><p>如果不写参数，程序默认会 0.5s 调用一次来查看元素是否已经生成，如果本来元素就是存在的，那么会立即返回。</p><p>下面是一些内置的等待条件，你可以直接调用这些条件，而不用自己写某些等待条件了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title_istitle_containspresence_of_element_locatedvisibility_of_element_locatedvisibility_ofpresence_of_all_elements_locatedtext_to_be_present_in_elementtext_to_be_present_in_element_valueframe_to_be_available_and_switch_to_itinvisibility_of_element_locatedelement_to_be_clickable – it <span class="keyword">is</span> Displayed <span class="keyword">and</span> Enabled.staleness_ofelement_to_be_selectedelement_located_to_be_selectedelement_selection_state_to_beelement_located_selection_state_to_bealert_is_present</span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><p>隐式等待比较简单，就是简单地设置一个等待时间，单位为秒。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdriver = webdriver.Chrome()driver.implicitly_wait(<span class="number">10</span>) <span class="comment"># secondsdriver.get(&quot;http://www.xxxxx.com/loading&quot;)myDynamicElement = driver.find_element_by_id(&quot;myDynamicElement&quot;)</span></span><br></pre></td></tr></table></figure><p>当然如果不设置，默认等待时间为0。</p><h3 id="6-页面切换"><a href="#6-页面切换" class="headerlink" title="6.页面切换"></a>6.页面切换</h3><p>一个浏览器肯定会有很多窗口，所以我们肯定要有方法来实现窗口的切换。切换窗口的方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.window(<span class="string">&quot;this is window name&quot;</span>)</span><br></pre></td></tr></table></figure><p>也可以使用 window_handles 方法来获取每个窗口的操作对象。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles:    driver.switch_to_window(handle)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)driver.execute_script(<span class="string">&quot;window.open(&#x27;https://www.douban.com/&#x27;)&quot;</span>)<span class="comment">#打开新的窗口driver.switch_to.window(driver.window_handles[0])#返回第一个窗口print(driver.current_url)</span></span><br></pre></td></tr></table></figure><h3 id="7-页面前进和后退"><a href="#7-页面前进和后退" class="headerlink" title="7.页面前进和后退"></a>7.页面前进和后退</h3><p>操作页面的前进和后退功能：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.forward()     <span class="comment">#前进driver.back()        # 后退</span></span><br></pre></td></tr></table></figure><h3 id="8-弹窗处理"><a href="#8-弹窗处理" class="headerlink" title="8.弹窗处理"></a>8.弹窗处理</h3><p>当你触发了某个事件之后，页面出现了弹窗提示，处理这个提示或者获取提示信息方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert = driver.switch_to_alert()</span><br></pre></td></tr></table></figure><h3 id="9-代理"><a href="#9-代理" class="headerlink" title="9.代理"></a>9.代理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>options=webdriver.FirefoxOptions()options.add_argument(<span class="string">&quot;--proxy--sever=http://36.248.133.189:9999&quot;</span>)driver=webdriver.Firefox(executable_path=drive_path,options=options)driver.get(<span class="string">&quot;https://httpbin.org/ip&quot;</span>) <span class="comment">#httpbin</span></span><br></pre></td></tr></table></figure><h3 id="10-options"><a href="#10-options" class="headerlink" title="10.options"></a>10.options</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–user-data-dir=”[PATH]” 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区。–disk-cache-dir=”[PATH]“ 指定缓存Cache路径–disk-cache-size= 指定Cache大小，单位Byte–first run 重置到初始状态，第一次运行–incognito 隐身模式启动–disable-javascript 禁用Javascript–omnibox-popup-count=”num” 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。–user-agent=”xxxxxxxx” 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果–disable-plugins 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果–disable-javascript 禁用JavaScript，如果觉得速度慢在加上这个–disable-java 禁用java–start-maximized 启动就最大化–no-sandbox 取消沙盒模式–single-process 单进程运行–process-per-tab 每个标签使用单独进程–process-per-site 每个站点使用单独进程–in-process-plugins 插件不启用单独进程–disable-popup-blocking 禁用弹出拦截–disable-plugins 禁用插件–disable-images 禁用图像–incognito 启动进入隐身模式–enable-udd-profiles 启用账户切换菜单–proxy-pac-url 使用pac代理 [via 1/2]–lang=zh-CN 设置语言为简体中文–disk-cache-dir 自定义缓存目录–disk-cache-size 自定义缓存最大值（单位byte）–media-cache-size 自定义多媒体缓存最大值（单位byte）–bookmark-menu 在工具 栏增加一个书签按钮–enable-sync 启用书签同步–single-process 单进程运行Google Chrome–start-maximized 启动Google Chrome就最大化–disable-java 禁止Java–no-sandbox 非沙盒模式运行</span><br></pre></td></tr></table></figure><h1 id="词云"><a href="#词云" class="headerlink" title="词云"></a>词云</h1><h2 id="1-stylecloud"><a href="#1-stylecloud" class="headerlink" title="1.stylecloud"></a>1.stylecloud</h2><p><a href="https://blog.csdn.net/weixin_38008864/article/details/107194187">(16条消息) stylecloud:简洁易用的词云库_大邓和他的Python-CSDN博客</a></p><p>1.stylecloud参数介绍</p><p>file_path：CSV的文件路径,需要注意的是csv文件格式为两列(word, freq)</p><p>size：词云图尺寸[默认值:512]</p><p>custom_stopwords：自定义停用词列表</p><p>output_name：输出的词云图路径</p><p>font_path：字体路径</p><p>icon_name：图标名（fas fa-iconname）只需要改iconname,[默认值: fas fa-flag]</p><p>palette：调色板（通过 palettable 实现）[默认值:cartocolors.qualitative.Bold_6]</p><p>background_color：词云图背景色[默认值:white]</p><p>max_font_size：词云图最大字号[默认值:200]</p><p>random_state：控制单词和颜色的随机状态,如不设置，每次运行的效果会发生变化</p><p><strong>图形设置</strong></p><p>icon_name参数的模板【fas fa-iconname】只需要改动iconname即可。</p><p>iconname并不是随便起的，必须能在<a href="https://fontawesome.com/license/free">https://fontawesome.com/license/free</a> 搜到才可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> stylecloud</span><br><span class="line">stopwords = <span class="built_in">open</span>(<span class="string">&#x27;data/stopwords.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read().split(<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line">stylecloud.gen_stylecloud(file_path=<span class="string">&#x27;data/高考.csv&#x27;</span>,font_path=<span class="string">&#x27;data/SourceHanSansCN-Regular.otf&#x27;</span>,output_name=<span class="string">&#x27;output/高考2.png&#x27;</span>,icon_name=<span class="string">&#x27;fas fa-user-graduate&#x27;</span>,size=<span class="number">500</span>,custom_stopwords=stopwords)</span><br></pre></td></tr></table></figure><h2 id="2-wordcloud"><a href="#2-wordcloud" class="headerlink" title="2.wordcloud"></a>2.wordcloud</h2><p>whl：<a href="https://pypi.org/project/wordcloud/#files">wordcloud · PyPI</a></p><p><a href="https://blog.csdn.net/skylibiao/article/details/89702746">(28条消息) wordcloud使用教程_一条coding-CSDN博客_wordcloud</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator, STOPWORDS</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wordyun</span>():</span><br><span class="line"> <span class="comment">#导入背景图   </span></span><br><span class="line">backgrim=np.array(Image.<span class="built_in">open</span>(<span class="string">&quot;C:\\Users\SAMSUNG\PycharmProjects\practice0829\qqzon\\bg.jpg&quot;</span>))</span><br><span class="line"> <span class="comment">#导入文本文件   text=open(&quot;C:\\Users\SAMSUNG\PycharmProjects\practice0829\qqzon\\1154540719worldcloud.txt&quot;,encoding=&#x27;utf-8&#x27;).read()</span></span><br><span class="line">    <span class="comment">#jieba分词</span></span><br><span class="line">    wordlist = jieba.cut(text, cut_all=<span class="literal">True</span>)</span><br><span class="line">    wl = <span class="string">&quot; &quot;</span>.join(wordlist)</span><br><span class="line"><span class="comment">#设置参数</span></span><br><span class="line">    wordcloud=WordCloud(</span><br><span class="line">        background_color=<span class="string">&#x27;white&#x27;</span>,  <span class="comment">#背景颜色</span></span><br><span class="line">        mask=backgrim ,   <span class="comment">#背景图片</span></span><br><span class="line">        max_words = <span class="number">300</span>,  <span class="comment"># 设置最多现实的词数</span></span><br><span class="line">        stopwords=STOPWORDS,  <span class="comment"># 设置停用词</span></span><br><span class="line">        max_font_size=<span class="number">200</span>,    <span class="comment"># 设置字体最大值</span></span><br><span class="line">        font_path=<span class="string">&#x27;C:/Users/Windows/fonts/STXINGKA.TTF&#x27;</span>,<span class="comment">#设置字体，路径在电脑内</span></span><br><span class="line">        width=<span class="number">1600</span>,</span><br><span class="line">        height=<span class="number">1000</span>,</span><br><span class="line">        random_state=<span class="number">30</span>,  <span class="comment"># 设置有多少种随机生成状态，即有多少种配色方案</span></span><br><span class="line">        <span class="comment"># scale=.5</span></span><br><span class="line">    ).generate(text)</span><br><span class="line"><span class="comment">#改变字体颜色</span></span><br><span class="line">    image_colors = ImageColorGenerator(backgrim)</span><br><span class="line"><span class="comment">#展示词云</span></span><br><span class="line">    plt.imshow(wordcloud)</span><br><span class="line"><span class="comment">#是否显示想x，y坐标</span></span><br><span class="line">    plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"><span class="comment">#写入文件</span></span><br><span class="line">    wordcloud.to_file(<span class="string">&#x27;py_book1.png&#x27;</span>)  <span class="comment"># 把词云保存下</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wordyun()</span><br></pre></td></tr></table></figure><p>相关参数</p><p>font_path : string &#x2F;&#x2F;字体路径，需要展现什么字体就把该字体路径+后缀名写上，如：font_path &#x3D; ‘黑体.ttf’</p><p>width : int (default&#x3D;400) &#x2F;&#x2F;输出的画布宽度，默认为400像素</p><p>height : int (default&#x3D;200) &#x2F;&#x2F;输出的画布高度，默认为200像素</p><p>prefer_horizontal : float (default&#x3D;0.90) &#x2F;&#x2F;词语水平方向排版出现的频率，默认 0.9 （所以词语垂直方向排版出现频率为 0.1 ）</p><p>mask : nd-array or None (default&#x3D;None) &#x2F;&#x2F;如果参数为空，则使用二维遮罩绘制词云。如果 mask 非空，设置的宽高值将被忽略，遮罩形状被 mask 取代。除全白（#FFFFFF）的部分将不会绘制，其余部分会用于绘制词云。如：bg_pic &#x3D; imread(‘读取一张图片.png’)，背景图片的画布一定要设置为白色（#FFFFFF），然后显示的形状为不是白色的其他颜色。可以用ps工具将自己要显示的形状复制到一个纯白色的画布上再保存，就ok了。</p><p>scale : float (default&#x3D;1) &#x2F;&#x2F;按照比例进行放大画布，如设置为1.5，则长和宽都是原来画布的1.5倍。</p><p>min_font_size : int (default&#x3D;4) &#x2F;&#x2F;显示的最小的字体大小</p><p>font_step : int (default&#x3D;1) &#x2F;&#x2F;字体步长，如果步长大于1，会加快运算但是可能导致结果出现较大的误差。</p><p>max_words : number (default&#x3D;200) &#x2F;&#x2F;要显示的词的最大个数</p><p>stopwords : set of strings or None &#x2F;&#x2F;设置需要屏蔽的词，如果为空，则使用内置的STOPWORDS</p><p>background_color : color value (default&#x3D;”black”) &#x2F;&#x2F;背景颜色，如background_color&#x3D;’white’,背景颜色为白色。</p><p>max_font_size : int or None (default&#x3D;None) &#x2F;&#x2F;显示的最大的字体大小</p><p>mode : string (default&#x3D;”RGB”) &#x2F;&#x2F;当参数为“RGBA”并且background_color不为空时，背景为透明。</p><p>relative_scaling : float (default&#x3D;.5) &#x2F;&#x2F;词频和字体大小的关联性</p><p>color_func : callable, default&#x3D;None &#x2F;&#x2F;生成新颜色的函数，如果为空，则使用 self.color_func</p><p>regexp : string or None (optional) &#x2F;&#x2F;使用正则表达式分隔输入的文本</p><p>collocations : bool, default&#x3D;True &#x2F;&#x2F;是否包括两个词的搭配</p><p>colormap : string or matplotlib colormap, default&#x3D;”viridis” &#x2F;&#x2F;给每个单词随机分配颜色，若指定color_func，则忽略该方法。</p><p>fit_words(frequencies)  &#x2F;&#x2F;根据词频生成词云<br>generate(text)  &#x2F;&#x2F;根据文本生成词云<br>generate_from_frequencies(frequencies[, …])   &#x2F;&#x2F;根据词频生成词云<br>generate_from_text(text)    &#x2F;&#x2F;根据文本生成词云<br>process_text(text)  &#x2F;&#x2F;将长文本分词并去除屏蔽词（此处指英语，中文分词还是需要自己用别的库先行实现，使用上面的 fit_words(frequencies) ）<br>recolor([random_state, color_func, colormap])   &#x2F;&#x2F;对现有输出重新着色。重新上色会比重新生成整个词云快很多。<br>to_array()  &#x2F;&#x2F;转化为 numpy array<br>to_file(filename)   &#x2F;&#x2F;输出到文件</p><h1 id="python内置模块"><a href="#python内置模块" class="headerlink" title="python内置模块"></a>python内置模块</h1><h2 id="collections"><a href="#collections" class="headerlink" title="collections"></a>collections</h2><p>Counter</p><p><code>Counter</code>是一个简单的计数器，例如，统计字符出现的个数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counterls=[<span class="string">&#x27;programming&#x27;</span>]       <span class="comment"># Counter(&#123;&#x27;programming&#x27;: 1&#125;)st=&#x27;programming&#x27;         #Counter(&#123;&#x27;r&#x27;: 2, &#x27;g&#x27;: 2, &#x27;m&#x27;: 2, &#x27;p&#x27;: 1, &#x27;o&#x27;: 1, &#x27;a&#x27;: 1, &#x27;i&#x27;: 1, &#x27;n&#x27;: 1&#125;)c=Counter(st)#lsprint(c)</span></span><br></pre></td></tr></table></figure><p><code>Counter</code>实际上也是<code>dict</code>的一个子类，上面的结果可以看出每个字符出现的次数。</p><h2 id="pyperclip"><a href="#pyperclip" class="headerlink" title="pyperclip"></a>pyperclip</h2><p>复制到粘贴板</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line">number=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    number=number+<span class="built_in">str</span>(i)+<span class="string">&quot;\n&quot;</span></span><br><span class="line">pyperclip.copy(number)</span><br></pre></td></tr></table></figure><h2 id="random库"><a href="#random库" class="headerlink" title="random库"></a>random库</h2><p>1.random.random()</p><p> #用于生成一个0到1的</p><p>随机浮点数：0&lt;&#x3D; n &lt; 1.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">a = random.random()</span><br><span class="line">print (a)  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/OfzFaegt8Qp1cRd.png" alt="img"></p><p>2.random.uniform(a,b) </p><p>#用于生成一个指定范围内的随机符点数，两个参数其中一个是上限，一个是下限。如果a &gt; b，则生成的随机数n: b &lt;&#x3D; n &lt;&#x3D; a。如果 a &lt;b， 则 a &lt;&#x3D; n &lt;&#x3D; b。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.uniform(1,10))  </span><br><span class="line">print(random.uniform(10,1)) </span><br></pre></td></tr></table></figure><p> <img src="https://i.loli.net/2021/11/30/qkHOTPBDVGznbZ7.png" alt="img"></p><p>3.random.randint(a, b)</p><p> #用于生成一个指定范围内的整数。其中参数a是下限，参数b是上限，生成的随机数n: a &lt;&#x3D; n &lt;&#x3D; b</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.randint(1,10))  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/dlcDLBE8uxZJhPr.png" alt="img"></p><p>4.random.randrange([start], stop[, step])</p><p> #从指定范围内，按指定基数递增的集合中 获取一个随机数。</p><p>random.randrange(10, 30, 2)，结果相当于从[10, 12, 14, 16, … 26, 28]序列中获取一个随机数。</p><p>random.randrange(10, 30, 2)在结果上与 random.choice(range(10, 30, 2) 等效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.randrange(10,30,2)) </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/mu7xOIbPtNvH3MK.png" alt="img"></p><p>5.random.choice(sequence)</p><p>#random.choice从序列中获取一个随机元素。其函数原型为：random.choice(sequence)。</p><p>参数sequence表示一个有序类型。这里要说明 一下：sequence在python不是一种特定的类型，而是泛指一系列的类型。list, tuple, 字符串都属于sequence。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(random.choice(str1))  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/7KETdH5ewUzRqGm.png" alt="img"></p><p>6.random.shuffle(x[, random])</p><p>#用于将一个列表中的元素打乱,即将列表内的元素随机排列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">p = [&#x27;A&#x27; , &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27; ]</span><br><span class="line">random.shuffle(p)  </span><br><span class="line">print (p)  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/Z4foLGdSeu7VbgO.png" alt="img"></p><p>7.random.sample(sequence, k)</p><p>#从指定序列中随机获取指定长度的片断并随机排列。注意：sample函数不会修改原有序列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 import random   </span><br><span class="line">2 lst = [1,2,3,4,5]  </span><br><span class="line">3 print(random.sample(lst,4))  </span><br><span class="line">4 print(lst) </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/S7lFPTLKpcnOe2y.png" alt="img"></p><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><a href="https://www.runoob.com/python3/python3-func-filter.html">Python3 filter() 函数 | 菜鸟教程 (runoob.com)</a> </p><p><strong>filter()</strong> 函数用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象，如果要转换为列表，可以使用 <strong>list()</strong> 来转换。该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判断，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_odd</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line">tmplist = <span class="built_in">filter</span>(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br><span class="line">newlist = <span class="built_in">list</span>(tmplist)</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br></pre></td></tr></table></figure><h2 id="time和datetime"><a href="#time和datetime" class="headerlink" title="time和datetime"></a>time和datetime</h2><p>Time 模块包含了以下内置函数，既有时间处理的，也有转换时间格式的：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python/att-time-altzone.html">time.altzone</a> 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。</td></tr><tr><td align="left">2</td><td align="left">[time.asctime(<a href="https://www.runoob.com/python/att-time-asctime.html">tupletime])</a> 接受时间元组并返回一个可读的形式为”Tue Dec 11 18:07:14 2008”（2008年12月11日 周二18时07分14秒）的24个字符的字符串。</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python/att-time-clock.html">time.clock( )</a> 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。</td></tr><tr><td align="left">4</td><td align="left">[time.ctime(<a href="https://www.runoob.com/python/att-time-ctime.html">secs])</a> 作用相当于asctime(localtime(secs))，未给参数相当于asctime()</td></tr><tr><td align="left">5</td><td align="left">[time.gmtime(<a href="https://www.runoob.com/python/att-time-gmtime.html">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0</td></tr><tr><td align="left">6</td><td align="left">[time.localtime(<a href="https://www.runoob.com/python/att-time-localtime.html">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python/att-time-mktime.html">time.mktime(tupletime)</a> 接受时间元组并返回时间戳（1970纪元后经过的浮点秒数）。</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python/att-time-sleep.html">time.sleep(secs)</a> 推迟调用线程的运行，secs指秒数。</td></tr><tr><td align="left">9</td><td align="left">[time.strftime(fmt<a href="https://www.runoob.com/python/att-time-strftime.html">,tupletime])</a> 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python/att-time-strptime.html">time.strptime(str,fmt&#x3D;’%a %b %d %H:%M:%S %Y’)</a> 根据fmt的格式把一个时间字符串解析为时间元组。</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python/att-time-time.html">time.time( )</a> 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python/att-time-tzset.html">time.tzset()</a> 根据环境变量TZ重新初始化时间相关设置。</td></tr></tbody></table><p>Time模块包含了以下2个非常重要的属性：</p><table><thead><tr><th align="left">序号</th><th align="left">属性及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>time.timezone</strong> 属性 time.timezone 是当地时区（未启动夏令时）距离格林威治的偏移秒数（&gt;0，美洲&lt;&#x3D;0大部分欧洲，亚洲，非洲）。</td></tr><tr><td align="left">2</td><td align="left"><strong>time.tzname</strong> 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。</td></tr></tbody></table><p>striftime格式化控制符</p><p><img src="https://i.loli.net/2021/11/15/R6fy2ecSZFj8sYX.png" alt="image-20210817211700282"></p><p>1.时间戳</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeimport datetimet = time.time()<span class="built_in">print</span> (t)                       <span class="comment">#原始时间数据print (int(t))                  #秒级时间戳print (int(round(t * 1000)))    #毫秒级时间戳print (int(round(t * 1000000))) #微秒级时间戳</span></span><br></pre></td></tr></table></figure><p>2.当前时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dt = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)dt_ms = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S.%f&#x27;</span>) <span class="comment"># 含微秒的日期时间，来源,比特量化print(dt)print(dt_ms)</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import timeprint(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.localtime()))</span><br></pre></td></tr></table></figure><h2 id="jieba"><a href="#jieba" class="headerlink" title="jieba"></a>jieba</h2><p>一、jieba库基本介绍</p><p> (1)、jieba库概述</p><p>​     jieba是优秀的中文分词第三方库</p><p>​     - 中文文本需要通过分词获得单个的词语<br>​     - jieba是优秀的中文分词第三方库，需要额外安装</p><p>​     - jieba库提供三种分词模式，最简单只需掌握一个函数</p><p> (2)、jieba分词的原理</p><p>​     Jieba分词依靠中文词库</p><p>​     - 利用一个中文词库，确定汉字之间的关联概率<br>​     - 汉字间概率大的组成词组，形成分词结果</p><p>​     - 除了分词，用户还可以添加自定义的词组</p><p>二、jieba库使用说明</p><p> (1)、jieba分词的三种模式</p><p>​     精确模式、全模式、搜索引擎模式</p><p>​     - 精确模式：把文本精确的切分开，不存在冗余单词<br>​     - 全模式：把文本中所有可能的词语都扫描出来，有冗余</p><p>​     - 搜索引擎模式：在精确模式基础上，对长词再次切分</p><p> (2)、jieba库常用函数</p><p><img src="https://i.loli.net/2021/11/30/bLdY5H8ZiFSUMnJ.png" alt="img"></p><h1 id="Python-不定长参数-argc-kargcs"><a href="#Python-不定长参数-argc-kargcs" class="headerlink" title="Python 不定长参数 *argc,**kargcs"></a>Python 不定长参数 *argc,**kargcs</h1><h3 id="一-函数不定长参数语法"><a href="#一-函数不定长参数语法" class="headerlink" title="一.函数不定长参数语法"></a>一.函数不定长参数语法</h3><p>*<em>函数的不定长参数包含*args和*<em>kwargs，完整实例如下：</em></em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_print</span>(<span class="params">*args,**kwargs</span>): <span class="comment"># 传递不定长参数，即参数个数不固定    print(args)    print(kwargs)function_print()</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">()&#123;&#125;</span><br></pre></td></tr></table></figure><p>代码分析：由输出结果可以看出来，第一个形参*args 是元组tuple类型，第二个形参**kwargs是字典dict类型.</p><h4 id="1-args的使用方法"><a href="#1-args的使用方法" class="headerlink" title="1.*args的使用方法 :"></a>1.*args的使用方法 :</h4><p><strong>a.形参 *args 类型是元组tuple，外部调用函数时传递的参数不论是整数还是BOOL值或者是字符串str，实际上传递的都是元组数据;</strong></p><p><strong>b.如果函数形参是不定长参数，外部调用函数传递多个参数时，默认按顺序实参匹配形参，剩余的参数全部作为(元组)不定长参数传递；</strong></p><p><strong>c.如果没有为函数的不定长参数传递参数，默认为空元组();</strong></p><p>示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#普通形参def function_print1(arg):    print(&quot;普通形参 : arg=&quot;,arg)#不定长形参def function_print2(*args):    print(&quot;不定长形参 : args=&quot;,args)#普通形参 + 不定长形参def function_print3(arg,*args):    print(&quot;普通形参 + 不定长形参 : arg=&quot;,arg)    print(&quot;普通形参 + 不定长形参 : args=&quot;,args)function_print1(False)function_print1(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print2(False)function_print2(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False) # 只为函数传递了一个形参，不定长参数的形参默认为空元组()function_print3(&quot;hello world&quot;)print(&quot;***&quot;*20)# 如果函数的形参是不定长参数，当外部调用函数传递多个参数时，默认按顺序匹配形参，剩余的参数全部作为不定长参数传递function_print3(False,1,23,4,5) function_print3(&quot;hello world&quot;,False,0,True,&quot;python教程&quot;)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通形参 : arg= False普通形参 : arg= hello world************************************************************不定长形参 : args= (False,)不定长形参 : args= (&#x27;hello world&#x27;,)************************************************************普通形参 + 不定长形参 : arg= False普通形参 + 不定长形参 : args= ()普通形参 + 不定长形参 : arg= hello world普通形参 + 不定长形参 : args= ()************************************************************普通形参 + 不定长形参 : arg= False普通形参 + 不定长形参 : args= (1, 23, 4, 5)普通形参 + 不定长形参 : arg= hello world普通形参 + 不定长形参 : args= (False, 0, True, &#x27;python教程&#x27;)</span><br></pre></td></tr></table></figure><h4 id="2-kwargs的使用方法"><a href="#2-kwargs的使用方法" class="headerlink" title="2.**kwargs的使用方法"></a>2.**kwargs的使用方法</h4><p>*<em>a.形参 *<em>kwargs 类型是字典dict，函数外部调用函数传递参数时需要使用关键字参数，实参写法：a&#x3D;1,b&#x3D;2,c&#x3D;False,d&#x3D;”hello”;</em></em></p><p><strong>b.如果函数形参是不定长参数，外部调用函数传递多个参数时，默认按顺序实参匹配形参，关键字参数全部作为(字典)不定长参数传递；</strong></p><p><strong>c.如果没有为函数的不定长参数传递参数，默认为空字典{};</strong></p><p>示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#普通函数def function_print1(arg):    print(&quot;普通函数形参 : arg=&quot;,arg)#普通函数不定长形参def function_print2(**kwargs):    print(&quot;不定长形参 : args=&quot;,kwargs)#普通函数形参 + 不定长形参def function_print3(arg,**kwargs):    print(&quot;普通函数形参 + 不定长形参 : arg=&quot;,arg)    print(&quot;普通函数形参 + 不定长形参 : args=&quot;,kwargs)function_print1(False)function_print1(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print2(a=False)function_print2(c=&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False)function_print3(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False,a=1,b=23,h=4,v=5)function_print3(&quot;hello world&quot;,y=False,i=0,a=True,j=&quot;python教程&quot;)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通函数形参 : arg= False普通函数形参 : arg= hello world************************************************************不定长形参 : args= &#123;&#x27;a&#x27;: False&#125;不定长形参 : args= &#123;&#x27;c&#x27;: &#x27;hello world&#x27;&#125;************************************************************普通函数形参 + 不定长形参 : arg= False普通函数形参 + 不定长形参 : args= &#123;&#125;普通函数形参 + 不定长形参 : arg= hello world普通函数形参 + 不定长形参 : args= &#123;&#125;************************************************************普通函数形参 + 不定长形参 : arg= False普通函数形参 + 不定长形参 : args= &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 23, &#x27;h&#x27;: 4, &#x27;v&#x27;: 5&#125;普通函数形参 + 不定长形参 : arg= hello world普通函数形参 + 不定长形参 : args= &#123;&#x27;y&#x27;: False, &#x27;i&#x27;: 0, &#x27;a&#x27;: True, &#x27;j&#x27;: &#x27;python教程&#x27;&#125;</span><br></pre></td></tr></table></figure><p>*<em>3.函数不定长参数*args和*<em>kwargs只能放在形参的末尾，顺序不能错.</em></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">def function_print(arg1,*args,**kwargs): # *args,**kwargs 必须在形参的末尾，顺序不能乱    pass</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="二-函数不定长参数实战"><a href="#二-函数不定长参数实战" class="headerlink" title="二.函数不定长参数实战"></a>二.函数不定长参数实战</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;普通函数形参 + 不定长形参:    arg1:普通形参    arg1:普通形参    args:不定长参数-元组    kwargs:不定长参数-字典&#x27;&#x27;&#x27;</span><span class="keyword">def</span> <span class="title function_">function_print</span>(<span class="params">arg1,arg2,*args,**kwargs</span>):    <span class="built_in">print</span>(arg1,arg2,args,kwargs)function_print(<span class="literal">False</span>,<span class="number">1</span>,b=<span class="number">23</span>,h=<span class="number">4</span>,v=<span class="number">5</span>)function_print(<span class="string">&quot;hello world&quot;</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="literal">True</span>,j=<span class="string">&quot;python教程&quot;</span>,a=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False 1 () &#123;&#x27;b&#x27;: 23, &#x27;h&#x27;: 4, &#x27;v&#x27;: 5&#125;hello world False (0, True) &#123;&#x27;j&#x27;: &#x27;python教程&#x27;, &#x27;a&#x27;: True&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：注意参数的顺序匹配</strong></p><h3 id="三-重点总结"><a href="#三-重点总结" class="headerlink" title="三.重点总结"></a>三.重点总结</h3><p>注意函数传参的三种形式：</p><p>1.普通传参</p><p>2.缺省参数，如果外部没有为缺省参数传递实参，形参等于默认值</p><p>3.注意不定长参数的拆包，普通实参打包为元组tuple类型，关键字参数打包为字典dict类型</p><p>[^0-9]: </p><h1 id="图像识别-验证码"><a href="#图像识别-验证码" class="headerlink" title="图像识别(验证码)"></a>图像识别(验证码)</h1><h2 id="打码平台"><a href="#打码平台" class="headerlink" title="打码平台"></a>打码平台</h2><p>斐斐打码：<a href="http://www.fateadm.com/user_home.php">http://www.fateadm.com/user_home.php</a></p><p>​    文档：<a href="http://docs.fateadm.com/web/#/1?page_id=5">http://docs.fateadm.com/web/#/1?page_id=5</a></p><p>图鉴：<a href="http://www.ttshitu.com/">http://www.ttshitu.com/</a></p><h2 id="百度ocr"><a href="#百度ocr" class="headerlink" title="百度ocr"></a>百度ocr</h2><blockquote><p>识别效果不够好</p></blockquote><h2 id="ddddocr"><a href="#ddddocr" class="headerlink" title="ddddocr"></a>ddddocr</h2><h1 id="仿站工具"><a href="#仿站工具" class="headerlink" title="仿站工具"></a><strong>仿站工具</strong></h1><p><a href="http://fztool.ptcms.com/">http://fztool.ptcms.com/</a></p><h1 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h1><h2 id="SMS"><a href="#SMS" class="headerlink" title="SMS"></a>SMS</h2><p><a href="https://sm.ms/home/picture">https://sm.ms/home/picture</a></p><p>api调用(apiToken)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f3fXNIXf8g6tHsQosCCcPxXg7CxJlAi8​```python<span class="comment"># __author:Chou# data:2021/9/11import requestsdef upload_im(path):    url = &#x27;https://sm.ms/api/v2/upload&#x27;    file_obj = open(path, &#x27;rb&#x27;)    file = &#123;        &#x27;smfile&#x27;: file_obj    &#125;    data_result = requests.post(url, files=file)    # 返回json结果    res = data_result.json()    print(res)    if res[&#x27;success&#x27;]:        img_url = res[&#x27;data&#x27;][&#x27;url&#x27;]        # print(res)    elif res[&#x27;code&#x27;] == &#x27;image_repeated&#x27;:        img_url = res[&#x27;images&#x27;]        # print(img_url)    else:        print(&quot;图片加载出错了&quot;)    return img_urlupload_im(&#x27;3.png&#x27;)</span></span><br></pre></td></tr></table></figure><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></p><blockquote><p>搭配typora 很好用</p></blockquote><h1 id="代理ip"><a href="#代理ip" class="headerlink" title="代理ip"></a>代理ip</h1><p><a href="http://www.66ip.cn/index.html">http://www.66ip.cn/index.html</a></p><p><a href="https://seofangfa.com/proxy/">https://seofangfa.com/proxy/</a></p><p><a href="https://ip.jiangxianli.com/">https://ip.jiangxianli.com/</a></p><p><a href="http://www.xiladaili.com/gaoni/6/">http://www.xiladaili.com/gaoni/6/</a></p><p><a href="http://www.xsdaili.cn/dayProxy/ip/2459.html">http://www.xsdaili.cn/dayProxy/ip/2459.html</a></p><p><a href="http://www.dailiip.cc/freedailiip/2020/0929/966.html">http://www.dailiip.cc/freedailiip/2020/0929/966.html</a></p><p><a href="http://31f.cn/https://www.chenjiayu.cn/archives6462.html">http://31f.cn/https://www.chenjiayu.cn/archives6462.html</a></p><p><a href="https://www.89ip.cn/index.html">https://www.89ip.cn/index.html</a></p><p><a href="https://www.kuaidaili.com/free/inha/">https://www.kuaidaili.com/free/inha/</a></p><p><a href="https://www.feizhuip.com/news-getInfo-id-1122.html">https://www.feizhuip.com/news-getInfo-id-1122.html</a></p><p><a href="https://ip.ihuan.me/">https://ip.ihuan.me/</a></p><p><a href="https://www.7yip.cn/free/">https://www.7yip.cn/free/</a></p><p><a href="http://ip.yqie.com/ipproxy.htm">http://ip.yqie.com/ipproxy.htm</a></p><p><a href="http://ip.yqie.com/world.aspx">http://ip.yqie.com/world.aspx</a></p><p><a href="https://ip.jiangxianli.com/">https://ip.jiangxianli.com/</a></p><p><a href="http://www.ip3366.net/free/?stype=3">http://www.ip3366.net/free/?stype=3</a></p><p><a href="http://www.pachongdaili.com/free/freelist1.html">http://www.pachongdaili.com/free/f</a></p><h1 id="消息推送"><a href="#消息推送" class="headerlink" title="消息推送"></a>消息推送</h1><h2 id="1-sever酱"><a href="#1-sever酱" class="headerlink" title="1.sever酱"></a>1.sever酱</h2><p><a href="http://sc.ftqq.com/?c=code">http://sc.ftqq.com/?c=code</a></p><p><a href="https://sct.ftqq.com/sendkey">https://sct.ftqq.com/sendkey</a></p><ol start="2"><li></li></ol><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><p><a href="https://www.runoob.com/python3/python3-multithreading.html">Python3 多线程 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://www.cnblogs.com/luyuze95/p/11289143.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B">python多线程详解 - luyuze95 - 博客园 (cnblogs.com)</a></p><p>python主要是通过thread和threading这两个模块来实现多线程支持</p><p>python的thread模块是比较底层的模块，python的threading模块是对thread做了一些封装，可以更加方便的被使用。但是python（cpython）由于GIL的存在无法使用threading充分利用CPU资源，如果想充分发挥多核CPU的计算能力需要使用multiprocessing模块(Windows下使用会有诸多问题)</p><h1 id="处理office"><a href="#处理office" class="headerlink" title="处理office"></a>处理office</h1><p>python-docx</p><p><a href="https://python-docx.readthedocs.io/en/latest/index.html">python-docx — python-docx 0.8.11 documentation</a></p><p>docx转pdf</p><p><a href="https://www.cnblogs.com/jcjc/p/9952207.html">Python 中docx转pdf - 海纳百川_有容乃大 - 博客园 (cnblogs.com)</a></p><p>pdf内容识别</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI2Nzg5MjgyNg==&mid=2247494327&idx=2&sn=ac28a46998e6ba590bb6268371f3d8d4&chksm=eaf54b82dd82c294e1cc3c70e1945d69f89ad8aee8e9a725e9f6980257f753ea0cf2eabfef4b&scene=178&cur_album_id=1771876183576543246#rd">告别「复制+粘贴」，Python 实现PDF转文本 (qq.com)</a></p><p>[(30条消息) <a href="https://blog.csdn.net/xc_zhou/article/details/81009809">312]python提取pdf文本内容_周小董-CSDN博客_python读取pdf内容</a></p><h1 id="centos-8-安装chorme和webdriver"><a href="#centos-8-安装chorme和webdriver" class="headerlink" title="centos 8 安装chorme和webdriver"></a>centos 8 安装chorme和webdriver</h1><p><a href="https://blog.csdn.net/zzzcl112/article/details/80470884?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=1328679.63363.16164686908509475&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">https://blog.csdn.net/zzzcl112/article/details/80470884?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=1328679.63363.16164686908509475&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a></p><ol><li>下载后解压 安装rpm包</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm</span><br></pre></td></tr></table></figure><p>查看chrome 版本号 显示说明安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-chrome --version</span><br></pre></td></tr></table></figure><ol start="2"><li><p>安装chromedriver</p><p>镜像仓库地址 <a href="http://chromedriver.storage.googleapis.com/">http://chromedriver.storage.googleapis.com/</a></p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://chromedriver.storage.googleapis.com/89.0.4389.23/chromedriver_linux64.zip</span><br></pre></td></tr></table></figure><ol start="3"><li>解压添加软链</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip chromedriver_linux64.zipmv chromedriver /usr/local/bin/chmod +x /usr/local/bin/chromedriver 测试代码:</span><br></pre></td></tr></table></figure><ol start="4"><li><p>添加环境变量不成功，直接换成绝对路径  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;chromedriver</p></li><li><p>安装 python3 </p><p>yum install python3</p></li><li><p>安装pip</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.py</span><br></pre></td></tr></table></figure><ol start="6"><li>安装selenium</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><p>7.服务器上运行driver的核心代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path = &quot;/Aprogramming/daka/chromedriver&quot;#直接把driver放在同级目录调用options = webdriver.ChromeOptions()options.add_argument(&#x27;--headless&#x27;)options.add_argument(&#x27;--disable-gpu&#x27;)options.add_argument(&#x27;--no-sandbox&#x27;)driver = webdriver.Chrome(executable_path=path, options=options)</span><br></pre></td></tr></table></figure><p>8.打码平台</p><p>斐斐打码 <a href="http://www.fateadm.com/user_home.php">http://www.fateadm.com/user_home.php</a></p><p>图鉴   <a href="http://daredian.cn/">http://daredian.cn/</a></p><ol start="9"><li>options</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–user-data-dir=”[PATH]” 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区。–disk-cache-dir=”[PATH]“ 指定缓存Cache路径–disk-cache-size= 指定Cache大小，单位Byte–first run 重置到初始状态，第一次运行–incognito 隐身模式启动–disable-javascript 禁用Javascript–omnibox-popup-count=”num” 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。–user-agent=”xxxxxxxx” 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果–disable-plugins 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果–disable-javascript 禁用JavaScript，如果觉得速度慢在加上这个–disable-java 禁用java–start-maximized 启动就最大化–no-sandbox 取消沙盒模式–single-process 单进程运行–process-per-tab 每个标签使用单独进程–process-per-site 每个站点使用单独进程–in-process-plugins 插件不启用单独进程–disable-popup-blocking 禁用弹出拦截–disable-plugins 禁用插件–disable-images 禁用图像–incognito 启动进入隐身模式–enable-udd-profiles 启用账户切换菜单–proxy-pac-url 使用pac代理 [via 1/2]–lang=zh-CN 设置语言为简体中文–disk-cache-dir 自定义缓存目录–disk-cache-size 自定义缓存最大值（单位byte）–media-cache-size 自定义多媒体缓存最大值（单位byte）–bookmark-menu 在工具 栏增加一个书签按钮–enable-sync 启用书签同步–single-process 单进程运行Google Chrome–start-maximized 启动Google Chrome就最大化–disable-java 禁止Java–no-sandbox 非沙盒模式运行</span><br></pre></td></tr></table></figure><h1 id="kite"><a href="#kite" class="headerlink" title="kite"></a>kite</h1><p><a href="https://www.kite.com/welcome/?id=e739a80c-bfc0-48ff-bcb9-73b2fb04a01e">Welcome to Kite - AI Autocomplete for Python</a></p><h1 id="ui设计"><a href="#ui设计" class="headerlink" title="ui设计"></a>ui<strong>设计</strong></h1><h2 id="tkinter"><a href="#tkinter" class="headerlink" title="tkinter"></a>tkinter</h2><p><a href="https://blog.csdn.net/ahilll/article/details/81531587">(28条消息) Python GUI之tkinter窗口视窗教程大集合（看这篇就够了）_ahilll的博客-CSDN博客_tkinter</a></p><p><a href="https://www.runoob.com/python/python-gui-tkinter.html">Python GUI 编程(Tkinter) | 菜鸟教程 (runoob.com)</a></p><p><a href="http://www.byhy.net/">白月黑羽 (byhy.net)</a></p><h2 id="pyqt5"><a href="#pyqt5" class="headerlink" title="pyqt5"></a>pyqt5</h2><h1 id="web开发"><a href="#web开发" class="headerlink" title="web开发"></a>web开发</h1><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#运行python manage.py runserver 0.0.0.0:80#创建超级用户python manage.py createsuperuser</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Django 框架是用Python语言开发的， 所以安装Django 就像安装其他的 Python库一样，执行如下命令即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>你可以执行如下命令检查Django是否安装好， 并且查看安装的Django版本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m django --version2<span class="number">.1</span><span class="number">.3</span></span><br></pre></td></tr></table></figure><p>如果像上面那样显示出一个版本数字（比如这里就是2.1.3） 表示已经安装好了。</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><blockquote><p>用pycharm可以自动生成django项目</p><p><img src="https://i.loli.net/2021/11/15/FLUWx4VpGeITqhr.png" alt="image-20210902004723085"></p></blockquote><p>安装好以后， 我们需要创建我们 的 项目目录，项目目录里面保存了开发系统的所有文件。</p><p>我们可以创建 <code>d:\projects</code> 作为我们的项目所在的目录。</p><p>然后从命令行窗口中 进入到 <code>d:\projects</code> 目录，执行下面的命令创建项目目录</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject bysms</span><br></pre></td></tr></table></figure><p>注意最后的 <code>bysms</code> 就是项目的根目录名，执行上面命令后，就会创建 如下的目录结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bysms/    manage.py    bysms/        __init__.py        settings.py        urls.py        wsgi.py</span><br></pre></td></tr></table></figure><ul><li><p>最外层 <code>bysms/</code> 就是项目根目录 <code>d:\projects\bysms\</code> ， 项目文件都放在里面。</p></li><li><p><code>manage.py</code> 是一个工具脚本，用作项目管理的。以后我们会使用它执行管理操作。</p></li><li><p>里面的 <code>bysms/</code> 目录是python包。 里面包含项目的重要配置文件。这个目录名字不能随便改，因为manage.py 要用到它。</p></li><li><p><code>bysms/settings.py</code> 是 Django 项目的配置文件. 包含了非常重要的配置项，以后我们可能需要修改里面的配置。</p></li><li><p><code>bysms/urls.py</code> 里面存放了 一张表， 声明了前端发过来的各种http请求，分别由哪些函数处理. 这个我们后面会重点的讲。</p></li><li><p><code>bysms/wsgi.py</code><br>要了解这个文件的作用， 我们必须明白wsgi 是什么意思</p><p>python 组织制定了 web 服务网关接口（Web Server Gateway Interface） 规范 ，简称wsgi。参考文档 <a href="https://www.python.org/dev/peps/pep-3333/">https://www.python.org/dev/peps/pep-3333/</a></p><p>遵循wsgi规范的 web后端系统， 我们可以理解为 由两个部分组成</p><p><code>wsgi web server</code> 和 <code>wsgi web application</code></p><p>它们通常是运行在一个python进程中的两个模块，或者说两个子系统。</p><p><code>wsgi web server</code> 接受到前端的http请求后，会调用 <code>wsgi web application</code> 的接口（ 比如函数或者类方法）方法，由<code>wsgi web application</code> 具体处理该请求。然后再把处理结果返回给 <code>wsgi web server</code>， <code>wsgi web server</code>再返回给前端。</p><p>如下图所示</p><p><img src="http://cdn1.python3.vip/imgs/gh/36257654_38763872-474e84bc-3fd7-11e8-8e59-6968198db9b8.png" alt="白月黑羽Python3教程"></p><p>为什么要搞出两个子系统，这么麻烦呢？</p><p>因为这两个子系统有各自负责的重点。</p><p><code>wsgi web server</code> 负责 <strong>提供高效的http请求处理环境</strong>，可以使用多线程、多进程或者协程的机制。</p><p>http 请求发送到 <code>wsgi web server</code> ， <code>wsgi web server</code> 分配 线程或者进程或者 轻量级线程(协程)，然后在 这些 线程、进程、或者协程里面，去调用执行 <code>wsgi web application</code> 的入口代码。</p><p><code>wsgi web application</code> 被调用后，负责 <strong>处理 业务逻辑</strong>。 业务逻辑的处理可能非常复杂， <code>wsgi web application</code> 需要精心的设计来正确处理。</p><p>django是 <code>wsgi web application</code> 的框架，它只有一个简单的单线程 <code>wsgi web server</code>。 供调试时使用。</p><p>产品正式上线运行的时候，通常我们需要高效的 <code>wsgi web server</code> 产品，比如 gunicorn，uwsgi，cherrypy等，结合Django ，组成一个高效的 后端服务。</p><p>所以这个 <code>wsgi.py</code> 就是 提供给<code>wsgi web server</code>调用 的接口文件，里面的变量application对应对象实现了 wsgi入口，供<code>wsgi web server</code>调用 。</p></li></ul><p><strong>2021年1月补充</strong></p><p>上面的方式创建的项目，项目配置目录和项目本身目录同名。</p><p>我个人觉得比较怪异。</p><p>可以这样创建目录，结构更合理一些：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令创建项目目录，并且进入到项目目录mkdir bysms &amp;&amp; cd bysms# 然后执行命令 创建manage.py 和 项目配置目录 名为 configdjango-admin startproject config .</span></span><br></pre></td></tr></table></figure><h3 id="运行-Django-web服务"><a href="#运行-Django-web服务" class="headerlink" title="运行 Django web服务"></a>运行 Django web服务</h3><p>刚才我们说了， django虽然只是 <code>wsgi web application</code> 的框架，但是它也有一个简单的 <code>wsgi web server</code>。 供调试时使用。</p><p>所以也构成一个完整的后端web服务。 本地调试代码的时候，完全可以运行起来。</p><p>运行开发web 服务只需要在命令行窗口里面，</p><p>首先进入到项目根目录 ，比如，我们这里就是 <code>d:\projects\bysms\</code></p><p>然后执行如下命令</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span></span><br></pre></td></tr></table></figure><p>这样服务就会被启动。 我们就可以在浏览器访问web服务了。</p><p>其中 <code>0.0.0.0:80</code> 是指定 web服务绑定的 IP 地址和端口。</p><p><code>0.0.0.0</code> 表示绑定本机所有的IP地址， 就是可以通过任何一个本机的IP (包括 环回地址 <code>127.0.0.1 </code>) 都可以访问我们的服务。</p><p><code>80</code> 表示是服务启动在80端口上。</p><p>请打开浏览器，地址栏输入 ‘127.0.0.1’ ，就可以看到如下的界面，表示Django服务搭建成功，启动成功。</p><p><img src="https://i.loli.net/2021/11/30/i8ke7MwjbBcIQqy.png" alt="白月黑羽Python3教程"></p><p>注意，启动web服务的命令行窗口不能关闭，如果关闭，web服务就停止了。</p><h1 id="nonebot"><a href="#nonebot" class="headerlink" title="nonebot"></a>nonebot</h1><p>nonebot2官方文档链接：<a href="https://v2.nonebot.dev/">https://v2.nonebot.dev/</a> </p><p>go-cqhttp地址：<a href="https://github.com/Mrs4s/go-cqhttp">https://github.com/Mrs4s/go-cqhttp</a> </p><p>go-cqhttp的api文档：<a href="https://docs.go-cqhttp.org/api/">https://docs.go-cqhttp.org/api/</a></p><p>cq:<a href="https://docs.go-cqhttp.org/cqcode/">CQcode | go-cqhttp 帮助中心</a></p><p>NoneBot.adapters 使用<a href="https://github.com/botuniverse/onebot/blob/master/v11/specs/api/public.md#send_msg-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF">onebot&#x2F;public.md at master · botuniverse&#x2F;onebot (github.com)</a></p><p>requirements.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nonebot2</span><br><span class="line">interval</span><br><span class="line">schedule</span><br><span class="line">matplotlib</span><br></pre></td></tr></table></figure><blockquote><p>interval用于判断时间是否在某个区间</p><p>schedule用于设置计划任务</p><p>matplotlib用于把excel转换成图片</p></blockquote><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>使用格式：</p><p><a href="https://v2.nonebot.dev/advanced/scheduler.html">定时任务 | NoneBot</a></p><p><a href="https://blog.csdn.net/a1255652/article/details/118740313?ops_request_misc=%7B%22request_id%22:%22163117036416780271547468%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163117036416780271547468&biz_id=0&utm_medium=distribute.wap_search_result.none-task-blog-2~all~sobaiduend~default-1-118740313.wap_first_rank_v2_rank_v29&utm_term=nonebot2+%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1&spm=1018.2118.3001.4450">(26条消息) nonebot2 插件编写指南（二）_a1255652的博客-CSDN博客</a></p><p>官方插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器状态nb plugin install nonebot_plugin_status图片搜索：nb plugin install nonebot_plugin_picsearcher</span><br></pre></td></tr></table></figure><p>1.安装定时插件</p><p>先要引入一个插件：<code>nonebot_plugin_apscheduler</code><br>使用 nb-cli 脚手架来安装这个插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_apscheduler</span><br></pre></td></tr></table></figure><p>这个插件与其他不同，稍后会直接导入到需要的位置，无需在 bot.py 中导入<br>除此之外，还需要添加其他配置：</p><p>在<code>.env</code>中添加：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">APSCHEDULER_AUTOSTART=trueAPSCHEDULER_CONFIG=&#123;<span class="string">&quot;apscheduler.timezone&quot;</span>: <span class="string">&quot;Asia/Shanghai&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>在 bot.py 中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.init(apscheduler_autostart=<span class="literal">True</span>)nonebot.init(apscheduler_config=&#123;    <span class="string">&quot;apscheduler.timezone&quot;</span>: <span class="string">&quot;Asia/Shanghai&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><hr><p>例如，我想在每天中午 12 点发一条测试信息到群（924026546），便可以这样写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command, require, get_driverfrom nonebot.typing <span class="keyword">import</span> T_Statefrom nonebot.adapters <span class="keyword">import</span> Bot, Eventfrom nonebot.adapters.cqhttp.message <span class="keyword">import</span> Messageimport nonebot.adapters.cqhttpimport _threadscheduler = require(<span class="string">&#x27;nonebot_plugin_apscheduler&#x27;</span>).scheduler@scheduler.scheduled_job(<span class="string">&#x27;cron&#x27;</span>, hour=<span class="number">12</span>,minute=<span class="number">0</span>)<span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">demo</span>():    driver = get_driver()    BOT_ID = <span class="built_in">str</span>(driver.config.bot_id)    bot = driver.bots[BOT_ID]    group_id=<span class="number">924026546</span>    <span class="keyword">await</span> bot.send_group_msg(group_id=group_id, message=<span class="string">&quot;测试消息&quot;</span>)</span><br></pre></td></tr></table></figure><p>2.和风天气</p><blockquote><p>nb plugin install nonebot_plugin_heweather</p><p>api: <a href="https://devapi.qweather.com/">https://devapi.qweather.com</a></p></blockquote><p><img src="https://i.loli.net/2021/11/15/z3Wnfus9r1N4eEq.png" alt="image-20210910192808254"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HE2109101926581795bdc4a41f9aea478cb994be3fb56ce5f4</span><br></pre></td></tr></table></figure><h1 id="excel转图片"><a href="#excel转图片" class="headerlink" title="excel转图片"></a>excel转图片</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pltfrom pandas.plotting <span class="keyword">import</span> table<span class="string">&quot;&quot;&quot;本来想转成图片实验很久还是发不出去    # 转成图片    mpl.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;Microsoft YaHei&#x27;]  # 指定默认字体：解决plot不能显示中文问题    mpl.rcParams[&#x27;axes.unicode_minus&#x27;] = False    # figsize 指定figure的宽和高，单位为英寸；    # dpi参数指定绘图对象的分辨率，即每英寸多少个像素，缺省值为80      1英寸等于2.5cm,A4纸是 21*30cm的纸张    fig = plt.figure(figsize=(9, 10), dpi=900)    # frameon:是否显示边框    ax = fig.add_subplot(111, frame_on=False, )    # 隐藏x轴 y轴    ax.xaxis.set_visible(False)  # hide the x axis    ax.yaxis.set_visible(False)  # hide the y axis    # 读取excel    datas = pd.read_excel(&#x27;1.xlsx&#x27;)    datas = datas.iloc[:, 0:]    # print(datas)    # 生成图片    table(ax, datas, loc=&#x27;center&#x27;)  # where df is your data frame    # 保存图片    plt.savefig(&#x27;photo.jpg&#x27;)&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="实用的第三方库"><a href="#实用的第三方库" class="headerlink" title="实用的第三方库"></a>实用的第三方库</h1><h2 id="pyautogui"><a href="#pyautogui" class="headerlink" title="pyautogui"></a>pyautogui</h2><p>自动化模拟鼠标和键盘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.PAUSE = 1pyautogui.FAILSAFE = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="0-防止故障："><a href="#0-防止故障：" class="headerlink" title="0.防止故障："></a>0.防止故障：</h3><p>pyautogui.PAUSE 设置为1，即每次函数调用后<br>暂停一秒。将pyautogui.FAILSAFE 设置为True，启动自动防故障功能。</p><h3 id="1-屏幕参数"><a href="#1-屏幕参数" class="headerlink" title="1.屏幕参数"></a>1.屏幕参数</h3><p>分辨率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.size()  <span class="comment"># 1920×1080width, height = pyautogui.size()</span></span><br></pre></td></tr></table></figure><p>获取鼠标位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.position()</span><br></pre></td></tr></table></figure><h3 id="2-移动鼠标"><a href="#2-移动鼠标" class="headerlink" title="2.移动鼠标"></a>2.移动鼠标</h3><p> <a href="1.py">1.py</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui<span class="comment"># 防止故障pyautogui.PAUSE = 1pyautogui.FAILSAFE = Truedef test1():     # pyautogui.moveTo() 函数    &quot;&quot;&quot;简单的一个例子&quot;&quot;&quot;    for i in range(5):        &#x27;&#x27;&#x27;        1. 可选的duration 整数或浮点数关键字参数，指定了将鼠标移到目的        位置所需的秒数        2. 运行这个程序鼠标在指定的位置转5圈        &#x27;&#x27;&#x27;        pyautogui.moveTo(100, 100, duration=0.25)        pyautogui.moveTo(200, 100, duration=0.25)        pyautogui.moveTo(200, 200, duration=0.25)        pyautogui.moveTo(100, 200, duration=0.25)def test2():  # pyautogui.moveRel() 函数    for i in range(5):        &#x27;&#x27;&#x27;        1.鼠标原地转圈        2.和test1()有区别        &#x27;&#x27;&#x27;        pyautogui.moveRel(100, 0, duration=0.25)        pyautogui.moveRel(0, 100, duration=0.25)        pyautogui.moveRel(-100, 0, duration=0.25)        pyautogui.moveRel(0, -100, duration=0.25)</span></span><br></pre></td></tr></table></figure><h3 id="3-控制鼠标交互"><a href="#3-控制鼠标交互" class="headerlink" title="3.控制鼠标交互"></a>3.控制鼠标交互</h3><p>①点击鼠标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.click（<span class="number">100</span>，<span class="number">150</span>，button=<span class="string">&#x27;left&#x27;</span>）pyautogui.click（<span class="number">200</span>，<span class="number">250</span>，button=<span class="string">&#x27;right&#x27;</span>）pyautogui.doubleClick()  <span class="comment"># 双击左键pyautogui.rightClick()  # 双击右键 pyautogui.middleClick()  # 双击中键</span></span><br></pre></td></tr></table></figure><p>②拖动鼠标</p><p>③④</p><h2 id="you-get"><a href="#you-get" class="headerlink" title="you-get"></a>you-get</h2><p>pip install you-get</p><p>1.找到you-get.exe加入环境变量(不太成功)</p><p>2.cd 安装路径 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\Chou\AppData\Local\Packages\PythonSoftwareFoundation.Python<span class="number">.3</span><span class="number">.7</span>_qbz5n2kfra8p0\LocalCache\local-packages\Python37\Scripts</span><br></pre></td></tr></table></figure><h2 id="Pygame"><a href="#Pygame" class="headerlink" title="Pygame"></a>Pygame</h2><table><thead><tr><th>模块名</th><th>功能</th></tr></thead><tbody><tr><td>pygame.cdrom</td><td>访问光驱</td></tr><tr><td>pygame.cursors</td><td>加载光标</td></tr><tr><td>pygame.display</td><td>访问设备显示</td></tr><tr><td>pygame.draw</td><td>绘制形状、线和点</td></tr><tr><td>pygame.event</td><td>管理事件</td></tr><tr><td>pygame.font</td><td>使用字体</td></tr><tr><td>pygame.image</td><td>加载和存储图片</td></tr><tr><td>pygame.joystick</td><td>使用手柄或类似的东西</td></tr><tr><td>pygame.key</td><td>读取键盘按键</td></tr><tr><td>pygame.mixer</td><td>声音</td></tr><tr><td>pygame.mouse</td><td>鼠标</td></tr><tr><td>pygame.movie</td><td>播放视频</td></tr><tr><td>pygame.music</td><td>播放音频</td></tr><tr><td>pygame.overlay</td><td>访问高级视频叠加</td></tr><tr><td>pygame.rect</td><td>管理矩形区域</td></tr><tr><td>pygame.sndarray</td><td>操作声音数据</td></tr><tr><td>pygame.sprite</td><td>操作移动图像</td></tr><tr><td>pygame.surface</td><td>管理图像和屏幕</td></tr><tr><td>pygame.surfarray</td><td>管理点阵图像数据</td></tr><tr><td>pygame.time</td><td>管理时间和帧信息</td></tr><tr><td>pygame.transform</td><td>缩放和移动图像</td></tr></tbody></table><h1 id="gitee-page"><a href="#gitee-page" class="headerlink" title="gitee page"></a>gitee page</h1><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h2><h2 id="2-配置-Git-参数"><a href="#2-配置-Git-参数" class="headerlink" title="2.配置 Git 参数"></a>2.配置 Git 参数</h2><p>过程跟上篇文章一样，已经做过的步骤不用再重复，直接到复制公钥那一步。</p><p>在博客根目录下，右键，打开Git Bash Here。</p><p>配置用户名和邮箱，这两个参数用于 Git 提交时的身份识别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username 和 username@XXX.com 是你注册 Gitee 的用户名和邮箱，如果账号不是邮箱注册的话，填自己的一个邮箱地址就行了git config --global user.name &quot;username&quot;git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p>生成 SSH keys，主要用于Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 Gitee 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p><p>输入下面命令，然后一直按回车，直到结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username@XXX.com 同上，是你的注册邮箱ssh-keygen -t rsa -C &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/5eTsFra2bWBCSXH.png" alt="image-20201229233801498"></p><p>输入下面的命令，查看公钥内容，应该是一个<code>ssh-rsa</code>开头，以<code>你的邮箱</code>结尾的长字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以。其中XXX是你的电脑用户名。cat /c/Users/XXX/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/ojVX1G75WNqHzul.png" alt="image-20201229234452012"></p><p>复制公钥内容（其实在Git Bash命令行里，默认选中文字松开鼠标就会自动把选中内容复制到剪贴板，点击鼠标中键是粘贴）。</p><h2 id="3-配置秘钥"><a href="#3-配置秘钥" class="headerlink" title="3.配置秘钥"></a>3.配置秘钥</h2><p>查看是否成功：ssh -T <a href="mailto:&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#x74;&#x65;&#101;&#46;&#99;&#111;&#109;">&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#x74;&#x65;&#101;&#46;&#99;&#111;&#109;</a></p><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><p>cmd管理员:</p><p>npm config set registry&#x3D;<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p><p>git:</p><p>npm config set registry&#x3D;<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 其他 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picsum(简易教程</title>
      <link href="/blog_new/2021/11/30/%E5%9B%BE%E7%89%87%E7%B1%BB%E7%BD%91%E7%AB%99%E5%90%88%E9%9B%86/"/>
      <url>/blog_new/2021/11/30/%E5%9B%BE%E7%89%87%E7%B1%BB%E7%BD%91%E7%AB%99%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p><strong>全部网站请点击右上角</strong></p><p><img src="https://i.loli.net/2021/12/02/ifnVceC7QmoJZPN.png" alt="image-20211202140418652"></p><br><p>链接直达：<a href="https://zdfx6jzjhp.feishu.cn/mindnotes/bmncnxl9OawZQX6Ac9eKjhPCDCf?from=from_copylink">https://zdfx6jzjhp.feishu.cn/mindnotes/bmncnxl9OawZQX6Ac9eKjhPCDCf?from=from_copylink</a></p><h2 id="随机图片Picsum"><a href="#随机图片Picsum" class="headerlink" title="随机图片Picsum"></a>随机图片Picsum</h2><p><a href="https://picsum.photos/">Lorem Picsum</a></p><h3 id="随机一张1920-1080的图片"><a href="#随机一张1920-1080的图片" class="headerlink" title="随机一张1920*1080的图片"></a>随机一张1920*1080的图片</h3><p><a href="https://picsum.photos/1920/1080">https://picsum.photos/1920/1080</a></p><h3 id="特定的图片（237是seed）"><a href="#特定的图片（237是seed）" class="headerlink" title="特定的图片（237是seed）"></a>特定的图片（237是seed）</h3><p>​    seed获取 <a href="https://picsum.photos/images">Lorem Picsum - Images</a></p><p><a href="https://picsum.photos/id/237/1920/1080">https://picsum.photos/id/237/1920/1080</a></p><h3 id="黑白"><a href="#黑白" class="headerlink" title="黑白"></a>黑白</h3><p><a href="https://picsum.photos/1920/1080?grayscale">https://picsum.photos/1920/1080?grayscale</a></p><h3 id="模糊"><a href="#模糊" class="headerlink" title="模糊"></a>模糊</h3><p><a href="https://picsum.photos/1920/1080?blur">https://picsum.photos/1920/1080?blur</a></p><p>​    模糊度1-10 <a href="https://picsum.photos/1920/1080?blur=2">https://picsum.photos/1920/1080?blur=2</a></p><h3 id="修改图片格式-jpg-webp"><a href="#修改图片格式-jpg-webp" class="headerlink" title="修改图片格式.jpg .webp"></a>修改图片格式.jpg .webp</h3><p><a href="https://picsum.photos/1920/1080.jpg">https://picsum.photos/1920/1080.jpg</a></p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a><strong>高级用法</strong></h3><p>列出图片</p><p>使用<code>/v2/list</code>端点获取图像列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/v2/list</span><br></pre></td></tr></table></figure><p>默认情况下，API每页将返回30个项目。</p><p>要请求另一个页面，请使用<code>?page</code>参数。</p><p>要更改每页的项目数，请使用<code>?limit</code>参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/v2/list?page=2&amp;limit=100</span><br></pre></td></tr></table></figure><p>该<code>Link</code>头包括关于下一首&#x2F;上页分页信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;Alejandro Escamilla&quot;,</span><br><span class="line">        &quot;width&quot;: 5616,</span><br><span class="line">        &quot;height&quot;: 3744,</span><br><span class="line">        &quot;url&quot;: &quot;https://unsplash.com/...&quot;,</span><br><span class="line">        &quot;download_url&quot;: &quot;https://picsum.photos/...&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>图像细节</p><p>使用<code>/id/&#123;id&#125;/info</code>端点获取有关特定图像的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/id/0/info</span><br></pre></td></tr></table></figure><p>您可以通过查看<code>Picsum-ID</code>标题或<code>User Comment</code>EXIF元数据中的字段来查找图像的ID 。</p><p>{ “id”: “0”, “author”: “Alejandro Escamilla”, “width”: 5616, “height”: 3744, “url”: “<a href="https://unsplash.com/%E2%80%A6%E2%80%9D">https://unsplash.com/…”</a>, “download_url”: “<a href="https://picsum.photos/%E2%80%A6%E2%80%9D">https://picsum.photos/…”</a> }</p>]]></content>
      
      
      <categories>
          
          <category> 网站合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 实用 </tag>
            
            <tag> 工具箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee搭建图床</title>
      <link href="/blog_new/2021/11/30/gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/blog_new/2021/11/30/gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p>仅个人学习用，以下是记得笔记</p><h2 id="Gitee-图床"><a href="#Gitee-图床" class="headerlink" title="Gitee 图床"></a>Gitee 图床</h2><h4 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1. 新建仓库"></a>1. 新建仓库</h4><p><img src="https://i.loli.net/2021/11/30/OTshla73fdJLM8V.png" alt="image-20210113221426230"></p><h4 id="2-获取私人令牌"><a href="#2-获取私人令牌" class="headerlink" title="2. 获取私人令牌"></a>2. 获取私人令牌</h4><p>同样的，<code>私人令牌</code>和 GitHub 上的 token 一样，主要用于让 PicGo 有权限往我们的仓库 push 代码(图片)。</p><p>点击自己的头像，选择<code>设置</code>。</p><p><img src="https://i.loli.net/2021/11/30/Jo42W8QR7ntqBUx.png" alt="image-20210113222056606"></p><p>点击<code>私人令牌</code>，选择生成新令牌。</p><p><img src="https://i.loli.net/2021/11/30/xQAGgczbonNEtHy.png" alt="image-20210113222420963"></p><p>同样的，我们只勾选更新代码的权限。填写<code>私人令牌描述</code>，点击提交。因为是敏感操作，此时需要确认密码。</p><p><img src="https://i.loli.net/2021/11/30/gW1oSLpTlOwG9yX.png" alt="image-20210113222755852"></p><p>复制字符串下一步使用。注意，为了安全起见此字符串只会出现一次，点击其他页面后就无法再查看了，需要重新创建，所以最好先保存到本地编辑器中。</p><p><img src="https://i.loli.net/2021/11/30/WIRhrTNapvi9q7B.png" alt="image-20210113223101983"></p><h4 id="3-PicGo-配置"><a href="#3-PicGo-配置" class="headerlink" title="3. PicGo 配置"></a>3. PicGo 配置</h4><p>PicGo 本体没有支持 Gitee ，所以需要下载一个插件，有人己经写好了。</p><p>打开 PicGo ，点击 <code>插件设置</code>，搜索框输入<code>gitee</code>，目前有两个插件应该都能用，任选一个安装，这里我选择的后面那个。</p><p><img src="https://i.loli.net/2021/11/30/aAXB2Z6CsVF58rP.png" alt="image-20210113225243341"></p><p>安装好插件后，这时再选择<code>图床设置</code>，选择<code>gitee</code>，填写参数：</p><ul><li><code>repo</code>，填写格式为<code>用户名/仓库名</code></li><li><code>branch</code>，填写默认分支<code>master</code></li><li><code>token</code>，填写上一步获取的私人令牌的值</li><li><code>path</code>，选填，可以自定义名称，不填图片会上传在仓库根目录。</li><li><code>customPath</code>，这个会在上一个参数的基础上再创建一层子文件夹用于按年、年月或年季来分类保存。</li><li><code>customUrl</code>，用于修改返回的 url 前缀，不填则返回原始 url。后面解决<code>文件大于1M，登录后可见</code>的问题需要更改此项。</li></ul><p>在 PicGo 里，GitHub 的设置都是中文的， Gitee 插件的设置反而都是英文的，有点意思hh。</p><p>选择设为默认图床，点击确定保存配置。</p><p><img src="https://i.loli.net/2021/11/30/DCsvg5L3XHt4WBY.png" alt="image-20210113224703801"></p><p>配置完成后，点击<code>上传区</code>，随便选择电脑上一张图片拖动到上传区，上传成功后会弹窗提示，将该 url 复制到浏览器打开就可以看到图片。可以在<code>PicGo设置</code>，打开<code>上传后自动复制URL</code>，这样上传成功后图片 url 会自动复制在剪贴板，可以直接粘贴到记事本。</p><p><img src="https://i.loli.net/2021/11/30/87bfrXnJ91xiK5O.png" alt="image-20210112235111559"></p><p><img src="https://i.loli.net/2021/11/30/NhK7sRQdYxSMjz1.png" alt="image-20210113224024050"></p><h4 id="4-Typora-配置"><a href="#4-Typora-配置" class="headerlink" title="4. Typora 配置"></a>4. Typora 配置</h4><p>打开<code>文件</code>，<code>偏好设置</code>，<code>图像</code>，选择插入图片时<code>上传图片</code>，勾选图中三个选项，上传服务设定选择<code>PicGo (app)</code>，PicGo 路径通过后面的文件夹选择自己电脑上 PicGo 的安装路径。</p><p><img src="https://i.loli.net/2021/11/30/uxjBpNogQPG8Hnv.png" alt="image-20210112233235226"></p><p>此时，使用 Typora 编辑文件，拖入或者粘贴图片时，会自动调用 PicGo 将图片上传到我们的 Gitee 图床，并把返回的图片链接粘贴到文章中，快去试试吧。</p><h4 id="5-解决”文件大于1M，登录后可见”问题"><a href="#5-解决”文件大于1M，登录后可见”问题" class="headerlink" title="5. 解决”文件大于1M，登录后可见”问题"></a>5. 解决”文件大于1M，登录后可见”问题</h4><p>从上一步可以看到 Gitee 存储的图片地址是 <code>https://gitee.com/yushuaigee/myblog/raw</code> 开头的网址，这个域名是国内站点，速度很快，无需配置CDN加速，图床配置好之后，图片上传成功，在浏览器也能打开，看似没毛病，其实暗藏玄机。</p><p>如果你上传的图片大于 1M ，不管是在下一步的 Typora 中还是在浏览器网页中，是无法加载出图片的，比如这张图片<code>https://gitee.com/yushuaigee/myblog/raw/master/img/myblog.gif</code>，输入到浏览器会显示<code>文件大于1M，登录后可见</code>。如果能打开是因为你前面已经登录了 Gitee 了，浏览器新建一个无痕窗口就打不开了。</p><p><img src="https://i.loli.net/2021/11/30/S3aAFfo9x7cMwCm.png" alt="image-20210113230821769"></p><p>可是别人在浏览我们博客时不可能要先登录个 Gitee 吧，所以要想办法解决一下。前面我们将博客仓库打开 Gitee Pages 功能，其他人可以访问我们博客仓库里的博客了，图床仓库也一样，打开它的 Gitee Pages 功能，无需登陆就可以访问里面的图片了。</p><p>进入图床仓库主页，点击<code>服务</code>，<code>Gitee Pages</code>。</p><p><img src="https://i.loli.net/2021/11/30/lsC4yzPNoQfdKFX.png" alt="image-20210113231334002"></p><p>点击<code>启动</code>部署。</p><p><img src="https://i.loli.net/2021/11/30/QnwtRhjm75OGWaS.png" alt="image-20210113232431704"></p><p>这样我们就可以通过Gitee Pages 地址来访问图床仓库里的图片了 ，地址前缀需要改一下。</p><p><strong>对应的，PicGo 中就需要改一下自定义域名</strong>，之后上传图片自动生成的链接就是 Gitee Pages 上的地址了。具体就是在<code>customUrl</code>填写<code>https://用户名.gitee.io/仓库名</code>。</p><p><img src="https://i.loli.net/2021/11/30/fzKWVhYvxbrHnqc.png" alt="image-20210113233142363"></p><p><strong>这种方法也存在一个问题</strong>，就是因为 Gitee Pages 不支持自动更新 (pro版支持，需要收费)，每次上传完图片后，需要打开浏览器手动点一下更新。你可以写完文章，把图片一把上传，再点一次更新，但是终究还是有点麻烦。</p><p><img src="https://i.loli.net/2021/11/30/eL71fXKgRqxidjI.png" alt="image-20210113231428575"></p><h4 id="网上还有一堆脚本说能更新gitee-page"><a href="#网上还有一堆脚本说能更新gitee-page" class="headerlink" title="网上还有一堆脚本说能更新gitee page"></a>网上还有一堆脚本说能更新gitee page</h4><p><a href="https://github.com/marketplace/actions/gitee-pages-action">Gitee Pages Action · Actions · GitHub Marketplace</a></p><p>但是，不好用折腾来去没成功</p><p>最后送给折腾了一下午的自己：sm.ms 不香吗？</p><p>😓5G不够换小号再来5G</p><h2 id="github图床"><a href="#github图床" class="headerlink" title="github图床"></a>github图床</h2><p>我直接不写了，没啥意义，cdn麻烦死了</p><h2 id="还有各式各样的图床"><a href="#还有各式各样的图床" class="headerlink" title="还有各式各样的图床"></a>还有各式各样的图床</h2><p>我试过的没试过得，一句话用sm.ms 算了<img src="/blog_new/"></p><p><img src="https://hutters.gitee.io/imgs/image-20211130202822683.png" alt="image-20211130202822683"></p><hr>]]></content>
      
      
      <categories>
          
          <category> gitee page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建gitee page真的很多坑</title>
      <link href="/blog_new/2021/11/29/gitee-page-%E5%AE%89%E8%A3%85hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/blog_new/2021/11/29/gitee-page-%E5%AE%89%E8%A3%85hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>所有操作先建一个空白文件夹名字随意</p><blockquote><p>主要记录自己安装的过程并不详细</p></blockquote><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>略</p><h2 id="配置-Git-参数"><a href="#配置-Git-参数" class="headerlink" title="配置 Git 参数"></a>配置 Git 参数</h2><p>过程跟上篇文章一样，已经做过的步骤不用再重复，直接到复制公钥那一步。</p><p>在博客根目录下，右键，打开Git Bash Here。</p><p>配置用户名和邮箱，这两个参数用于 Git 提交时的身份识别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username 和 username@XXX.com 是你注册 Gitee 的用户名和邮箱，如果账号不是邮箱注册的话，填自己的一个邮箱地址就行了</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p>生成 SSH keys，主要用于Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 Gitee 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p><p>输入下面命令，然后一直按回车，直到结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username@XXX.com 同上，是你的注册邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/zCj9q8n7bhWVOci.png" alt="image-20201229233801498"></p><p>输入下面的命令，查看公钥内容，应该是一个<code>ssh-rsa</code>开头，以<code>你的邮箱</code>结尾的长字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY# cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以。其中XXX是你的电脑用户名。</span><br><span class="line">cat /c/Users/XXX/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/aMlYqxtAFhZQkc9.png" alt="image-20201229234452012"></p><p>复制公钥内容（其实在Git Bash命令行里，默认选中文字松开鼠标就会自动把选中内容复制到剪贴板，点击鼠标中键是粘贴）。</p><h2 id="关于git秘钥"><a href="#关于git秘钥" class="headerlink" title="关于git秘钥"></a>关于git秘钥</h2><p>1.配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config –global user.name &quot;xxxxx&quot;</span><br><span class="line">git config –global user.email &quot;xxx@xx.xxx&quot;</span><br><span class="line"></span><br><span class="line">注：查下是否配置成功，用命令</span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><p>2.生成秘钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C  &quot;上面的邮箱&quot;</span><br><span class="line">注：执行上面命令后，连续回车3次</span><br></pre></td></tr></table></figure><p>3.打印</p><p>进入ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure><p>打印ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="配置秘钥"><a href="#配置秘钥" class="headerlink" title="配置秘钥"></a>配置秘钥</h2><p><strong>一定要配置到个人主页，不是仓库</strong> </p><p><img src="https://i.loli.net/2021/11/29/lyP8bxf7hAYU4mg.png" alt="image-20211129231631074"></p><p>查看是否成功：ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#101;&#101;&#46;&#x63;&#111;&#x6d;">&#x67;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#101;&#101;&#46;&#x63;&#111;&#x6d;</a></p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>官方：<a href="https://hexo.io/zh-cn/index.html">Hexo</a></p><ol><li><del>cmd管理员:（似乎多此一举）</del></li></ol><blockquote><p><del>&lt;!– npm config set registry&#x3D;<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></del> –&gt;</p><p><del>npm install -g hexo-cli</del></p></blockquote><ol start="2"><li>进入git界面:</li></ol><blockquote><p>npm config set registry&#x3D;<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p><p><strong>#安装发布插件</strong></p><p>npm install hexo-deployer-git </p><p>hexo init #初始化</p></blockquote><h2 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@gitee.com:xxxxxx/xxxxxx.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="页面加载没有样式以及路径问题解决❗"><a href="#页面加载没有样式以及路径问题解决❗" class="headerlink" title="页面加载没有样式以及路径问题解决❗"></a>页面加载没有样式以及路径问题解决❗</h2><p>修改配置文件,不这样改二级目录访问css,js加载不出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: https://xxx.gitee.io/abc</span><br><span class="line">root: /abc/</span><br></pre></td></tr></table></figure><h2 id="解决图片路径问题"><a href="#解决图片路径问题" class="headerlink" title="解决图片路径问题"></a>解决图片路径问题</h2><p>本来用typro可以搭配picgo但是由于最近突然转成收费一气之下删了，新的方法：</p><p>插件<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><pre><code>post_asset_folder: true #上传附件比如相关的图片marked:  prependRoot: true  postAsset: true</code></pre><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>我用的主题插件</p><p><a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p>npm install hexo-renderer-pug hexo-renderer-stylus –save</p><h2 id="几个插件"><a href="#几个插件" class="headerlink" title="几个插件"></a>几个插件</h2><h3 id="安装发布插件"><a href="#安装发布插件" class="headerlink" title="安装发布插件"></a><strong>安装发布插件</strong></h3><p>npm install hexo-deployer-git </p><h3 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h3><p>npm install hexo-image-link –save</p><p>npm install hexo-filter-inline-assets –save</p><h3 id="本地搜索插件"><a href="#本地搜索插件" class="headerlink" title="本地搜索插件"></a>本地搜索插件</h3><p>npm install –save hexo-generator-search</p><h3 id="生成tags和分类-没用懂）"><a href="#生成tags和分类-没用懂）" class="headerlink" title="生成tags和分类(没用懂）"></a>生成tags和分类(没用懂）</h3><p>npm install hexo-enhancer –save</p><p>修改配置文件：</p><p>keywords: HTML, JavaScript, Hexo<br>tags: Java, Golang, React, Vue</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>参考获取api <a href="https://blog.csdn.net/blue_zy/article/details/79071414">(66条消息) 为你的Hexo加上评论系统-Valine_BlueLzy的个人博客-CSDN博客_hexo 评论</a></p><p>具体配置 <a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">Butterfly 安裝文檔(四) 主題配置-2 | Butterfly</a></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>hexo g</p><p>hexo d</p><h2 id="安装后折腾一下布局标签之类的"><a href="#安装后折腾一下布局标签之类的" class="headerlink" title="安装后折腾一下布局标签之类的"></a>安装后折腾一下布局标签之类的</h2><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入hexo new page tags</p></li><li><p>你會找到source&#x2F;tags&#x2F;index.md這個文件</p></li><li><p>修改這個文件：</p></li></ol><p>​    記得添加 type: “tags”</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入hexo new page categories</p></li><li><p>你會找到source&#x2F;categories&#x2F;index.md這個文件</p></li><li><p>修改這個文件：</p><p>記得添加 type: “categories”</p></li></ol><h3 id="小图标note"><a href="#小图标note" class="headerlink" title="小图标note"></a>小图标note</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#Note-Bootstrap-Callout">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211323199.png" alt="image-20211130211323199"></p><h3 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#mermaid">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211511428.png" alt="image-20211130211511428"></p><h3 id="laber"><a href="#laber" class="headerlink" title="laber"></a>laber</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#label">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211745910.png" alt="image-20211130211745910"></p>]]></content>
      
      
      <categories>
          
          <category> gitee page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> gitee page </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
